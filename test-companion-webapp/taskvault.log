2023-05-21 10:44:47,138 [main] DEBUG TestCompanionApplication - Running spring boot application.
2023-05-21 10:44:47,545 [main] DEBUG TestCompanionApplication - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 10:44:48,614 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-05-21 10:44:48,629 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 10:44:48,676 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 10:44:48,723 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 10:44:48,723 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 10:44:48,780 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 10:44:48,963 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 10:44:48,964 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 10:44:48,965 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 10:44:48,965 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 10:44:48,966 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 10:44:48,967 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 10:44:48,967 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 10:44:48,969 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 10:44:48,969 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 10:44:48,970 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 10:44:48,970 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 10:44:48,972 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 10:44:48,977 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 10:44:48,979 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 10:44:49,026 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3457cc8d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3457cc8d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3457cc8d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7a66c35a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7a66c35a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7994a0d1
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7994a0d1
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@73e4387
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@73e4387
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@d87d449
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@d87d449
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@d87d449
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4137aab0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4137aab0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4137aab0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1df9186f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1df9186f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@1df9186f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@1df9186f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@682e422c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5bb8e6fc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5bb8e6fc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2726a511
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@72c9ebfa
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@686cf8ad
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@686cf8ad
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@686cf8ad
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@747f6c5a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@747f6c5a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@747f6c5a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66e341e9
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66e341e9
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@66e341e9
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b48f0f4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5b48f0f4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5b48f0f4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@546ed2a0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@546ed2a0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@546ed2a0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5bfc79cb
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5bfc79cb
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@27ec8754
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@27ec8754
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3bbf1c0d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3bbf1c0d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3bbf1c0d
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@19662208
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@216c22ce
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@216c22ce
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62f9c790
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@21e5f0b6
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@21e5f0b6
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@21e5f0b6
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@93bf0e0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@93bf0e0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@93bf0e0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4981d95b
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@656842bc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6b867ee7
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6b867ee7
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3dec3f87
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3dec3f87
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a606260
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5dbab232
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5939e24
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@595f9916
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2055833f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@28768e25
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@310d57b1
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@310d57b1
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@143fefaf
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@143fefaf
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18ffca6c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18ffca6c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@46468f0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@46468f0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f8f1712
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f8f1712
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34a6d9db
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@52ecc989
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@756808cc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@756808cc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@52f8a6f4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@52f8a6f4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5012c571
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6486fe7b
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@511da44f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@511da44f
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4645679e
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4645679e
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3a0b6a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3a0b6a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3a0b6a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@539c4830
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@539c4830
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@539c4830
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6f1fa1d0
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@28b523a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@52ba685a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@52ba685a
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@63d677f5
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@63d677f5
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@63d677f5
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@71d55b7e
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2997ddfc
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@28ee882c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@28ee882c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@78d73b1b
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@78d73b1b
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@78d73b1b
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@238291d4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@238291d4
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@34edd065
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@34edd065
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@681e913c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@681e913c
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@29d070c7
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@29d070c7
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1eeb5818
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1eeb5818
2023-05-21 10:44:49,044 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@44dfdd58
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27898e13
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@27898e13
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@11810917
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11810917
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5fdd97c1
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b5a19ed
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@15d236fd
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6b9c42bd
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@584ca390
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@33324c05
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@37d3e140
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e53c4ad
2023-05-21 10:44:49,060 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@33eb0d4
2023-05-21 10:44:49,060 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a22e4d7] into BootstrapContext; was [null]
2023-05-21 10:44:49,060 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a22e4d7) [was null]
2023-05-21 10:44:49,060 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7b9e25bd] into BootstrapContext; was [null]
2023-05-21 10:44:49,060 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2d206a71] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@37e7c4cc]
2023-05-21 10:44:49,078 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a22e4d7]
2023-05-21 10:44:49,078 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4a22e4d7]
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 10:44:49,094 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 10:44:49,329 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 10:44:49,329 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 10:44:49,329 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 10:44:49,350 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 10:44:49,369 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 10:44:49,369 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 10:44:49,370 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 10:44:49,371 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 10:44:49,373 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 10:44:49,374 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 10:44:49,379 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 10:44:49,380 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45571cfc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@faec277]
2023-05-21 10:44:49,407 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 10:44:49,431 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 10:44:49,432 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 10:44:49,432 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,435 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 10:44:49,439 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 10:44:49,443 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 10:44:49,448 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,457 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,460 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 10:44:49,460 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 10:44:49,461 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 10:44:49,463 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 10:44:49,464 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,467 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 10:44:49,470 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 10:44:49,471 [main] DEBUG PropertyBinder - Building property username
2023-05-21 10:44:49,472 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 10:44:49,473 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,473 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 10:44:49,473 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 10:44:49,473 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 10:44:49,473 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 10:44:49,473 [main] DEBUG PropertyBinder - Building property email
2023-05-21 10:44:49,474 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,474 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 10:44:49,474 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 10:44:49,474 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 10:44:49,474 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 10:44:49,474 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 10:44:49,474 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,474 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 10:44:49,474 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 10:44:49,474 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 10:44:49,474 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 10:44:49,474 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 10:44:49,474 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,474 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 10:44:49,474 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 10:44:49,476 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 10:44:49,476 [main] DEBUG PropertyBinder - Building property password
2023-05-21 10:44:49,476 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 10:44:49,476 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 10:44:49,476 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 10:44:49,476 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 10:44:49,476 [main] DEBUG PropertyBinder - Building property role
2023-05-21 10:44:49,476 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 10:44:49,476 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 10:44:49,476 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 10:44:49,492 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,507 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,508 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 10:44:49,523 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,540 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,540 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 10:44:49,555 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 10:44:49,555 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 10:44:49,555 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3568ea59, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=io.github.nishadchayanakhawa.testcompanion.TestCompanionApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@9f2376f, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, sun.stderr.encoding=cp437, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, sun.stdout.encoding=cp437, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.6491443158589283059, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9472, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.6491443158589283059, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@173b1af1, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 10:44:49,555 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 10:44:49,571 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:44:49,571 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5f3ddc86] under count; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1255de25] under every; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1686ed85] under any; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@cf08c97] under position; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@70697478] under overlay; prior registration was null
2023-05-21 10:44:49,634 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@70ee1963] under trim; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@718f3088] under cast; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c8e8fed] under collate; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@846b47] under extract; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1e8bccfb] under ifnull; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@50785f86] under pad; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@39f93225] under str; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@71d99732] under format; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3cad24ae] under timestampadd; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@75e4fe3c] under timestampdiff; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77e6761f] under current_date; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c997de8] under current_time; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@45bf93bb] under current_timestamp; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b7c4734] under local_date; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2f6e92ca] under local_time; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@380fdcf2] under local_datetime; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@114b203] under offset_datetime; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8d810f2] under instant; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@79e2606f] under sql; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@734cf881] under count; prior registration was org.hibernate.dialect.function.CountFunction@5f3ddc86
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@283e1759] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2f6e92ca
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@380fdcf2
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2acb1264] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@cf08c97
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30a01dd8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1f68e4e8] under format; prior registration was org.hibernate.dialect.function.FormatFunction@71d99732
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7b52b18a] under listagg; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e5b33e5] under mode; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@654b899f] under percentile_cont; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@71468613] under percentile_disc; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@287ad0da] under rank; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1b19712f] under dense_rank; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@714c74eb] under percent_rank; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@510e4d79] under cume_dist; prior registration was null
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - basicType@11(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - basicType@11(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 10:44:49,643 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 10:44:49,643 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45571cfc] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e3d168e]
2023-05-21 10:44:49,709 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 10:44:49,709 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 10:44:49,899 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 10:44:49,899 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 10:44:49,909 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 10:44:49,909 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 10:44:49,909 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 10:44:49,909 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 10:44:49,909 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 10:44:49,915 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:44:49,915 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:44:49,930 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 10:44:49,930 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:44:49,946 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 10:44:49,946 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 10:44:49,994 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 10:44:49,994 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 10:44:49,994 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 10:44:49,994 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d65e744
2023-05-21 10:44:49,994 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 6cc851ba-1301-48e3-8945-15976fb8b4e3 (<unnamed>)
2023-05-21 10:44:49,994 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 10:44:50,073 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 10:44:50,152 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy102.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293)
	at io.github.nishadchayanakhawa.testcompanion.TestCompanionApplication.main(TestCompanionApplication.java:17)
2023-05-21 10:44:50,340 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{PUT [/api/user]}: addUser(User)
	{GET [/api/user]}: getAllUsers()
	{GET [/api/user/{username}]}: getUser(String)
	{DELETE [/api/user/{username}]}: deleteUser(String)
2023-05-21 10:44:50,340 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
	{GET [/setting/usermanagement]}: getUserManagementPage()
2023-05-21 10:44:50,340 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 10:44:50,356 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 10:44:50,387 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 10:44:50,634 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:44:50,634 [main] DEBUG TransactionImpl - begin
2023-05-21 10:44:50,694 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:44:50,694 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:44:50,697 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000).role]

2023-05-21 10:44:50,697 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:44:50,697 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:44:50,715 [main] DEBUG results - Initializer list
2023-05-21 10:44:50,715 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(9560709062000))@1832418971 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:44:50,715 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 10:44:50,715 [main] DEBUG TransactionImpl - committing
2023-05-21 10:44:50,778 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:44:50,778 [main] DEBUG TransactionImpl - begin
2023-05-21 10:44:50,778 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 10:44:50,794 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:44:50,794 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:44:50,794 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 10:44:50,794 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:44:50,810 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 10:44:50,810 [main] DEBUG results - Initializer list
2023-05-21 10:44:50,810 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1107476456 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:44:50,810 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 10:44:50,818 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 10:44:50,820 [main] DEBUG TransactionImpl - committing
2023-05-21 10:44:50,820 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 10:44:50,820 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 10:44:50,820 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 10:44:50,820 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 10:44:50,820 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 10:44:50,820 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 10:44:50,820 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 10:44:50,836 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 10:44:50,883 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:44:50,898 [main] DEBUG TransactionImpl - begin
2023-05-21 10:44:50,898 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 10:44:50,898 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 10:44:50,898 [main] DEBUG results - Initializer list
2023-05-21 10:44:50,898 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@752686443 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:44:50,898 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 10:44:50,898 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 10:44:50,898 [main] DEBUG TransactionImpl - committing
2023-05-21 10:44:50,898 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 10:44:50,898 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 10:44:50,898 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 10:44:50,898 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 10:44:50,898 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 10:44:50,898 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$xuXwuRU1tWthOomqI73AWOjBSzt8jnG7uC9L6b6lv3x0UEnCwfHou, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 10:44:50,898 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 10:44:50,898 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 10:44:50,962 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:44:50,962 [main] DEBUG TransactionImpl - begin
2023-05-21 10:44:50,962 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 10:44:50,962 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 10:44:50,962 [main] DEBUG results - Initializer list
2023-05-21 10:44:50,962 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@275432948 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:44:50,962 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 10:44:50,962 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 10:44:50,962 [main] DEBUG TransactionImpl - committing
2023-05-21 10:44:50,962 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 10:44:50,962 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 10:44:50,962 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 10:44:50,962 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 10:44:50,962 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 10:44:50,962 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$JZTvDSdWR1fTcqMznsCpuOz87N79QVZIbhhO6hjuSqtg0UJcZUMy., role=USER, email=user.com, username=user}
2023-05-21 10:44:50,962 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 10:44:50,962 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@56adbfd0
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).username) 
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).role]

2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Initializer list
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900))@1693805741 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)): admin
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@6f8034ac
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [4] - [$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)#admin
2023-05-21 10:45:00,753 [http-nio-8999-exec-2] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5ff3892
2023-05-21 10:45:04,172 [http-nio-8999-exec-4] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:45:04,172 [http-nio-8999-exec-4] DEBUG TransactionImpl - begin
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000).role]

2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG results - Initializer list
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000))@1351451329 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:45:04,173 [http-nio-8999-exec-4] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)): admin
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@31b1bc8c
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [4] - [$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi]
2023-05-21 10:45:04,174 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#admin
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d16bbf1
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)): tester
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@79c7ecb9
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [4] - [$2a$10$xuXwuRU1tWthOomqI73AWOjBSzt8jnG7uC9L6b6lv3x0UEnCwfHou]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#tester
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d16bbf1
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)): user
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@58dc3ef1
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [4] - [$2a$10$JZTvDSdWR1fTcqMznsCpuOz87N79QVZIbhhO6hjuSqtg0UJcZUMy.]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9574235019000)#user
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d16bbf1
2023-05-21 10:45:04,175 [http-nio-8999-exec-4] DEBUG TransactionImpl - committing
2023-05-21 10:45:14,135 [http-nio-8999-exec-10] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:45:14,135 [http-nio-8999-exec-10] DEBUG TransactionImpl - begin
2023-05-21 10:45:14,135 [http-nio-8999-exec-10] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 10:45:14,243 [http-nio-8999-exec-10] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 10:45:14,262 [http-nio-8999-exec-10] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 10:45:14,265 [http-nio-8999-exec-10] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Initializer list
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@7c170a97
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG TransactionImpl - committing
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3cf6d901
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).username) 
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900).role]

2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Initializer list
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900))@657032027 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)): admin
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@4a4110
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [4] - [$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9560258571900)#admin
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b923919
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG TransactionImpl - begin
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG TransactionImpl - committing
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG EntityPrinter - Listing entities:
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Nishad, lastName=Chayanakhawa, password=$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi, role=ADMIN, email=nishad.chayanakhawa@gmail.com, username=admin}
2023-05-21 10:45:14,267 [http-nio-8999-exec-10] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 10:45:14,282 [http-nio-8999-exec-10] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 10:45:14,288 [http-nio-8999-exec-3] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG TransactionImpl - begin
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG create - Created new SQL alias : u1_0
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700).role]

2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Initializer list
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700))@896591509 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)): admin
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@77176dba
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [1] - [nishad.chayanakhawa@gmail.com]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [2] - [Nishad]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [3] - [Chayanakhawa]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [4] - [$2a$10$qfPUu.y7dcT2bteDK937r.i8aiu9F0XBJYrIaayiBXdDZdADjzvGi]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#admin
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45616983
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)): tester
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@7f66980b
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [4] - [$2a$10$xuXwuRU1tWthOomqI73AWOjBSzt8jnG7uC9L6b6lv3x0UEnCwfHou]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#tester
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45616983
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)): user
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@3c1799cc
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [4] - [$2a$10$JZTvDSdWR1fTcqMznsCpuOz87N79QVZIbhhO6hjuSqtg0UJcZUMy.]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(9584351481700)#user
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45616983
2023-05-21 10:45:14,289 [http-nio-8999-exec-3] DEBUG TransactionImpl - committing
2023-05-21 10:45:19,442 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:45:19,442 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:45:49,447 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:45:49,447 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:46:19,460 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:46:19,460 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:46:49,472 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:46:49,472 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:47:19,475 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:47:19,475 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:47:49,484 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:47:49,484 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:48:19,493 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:48:19,493 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:48:49,500 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:48:49,500 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:49:19,512 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:49:19,512 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:49:49,517 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:49:49,517 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:50:19,529 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:50:19,529 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:50:49,537 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:50:49,537 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:51:19,544 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:51:19,544 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:51:49,558 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:51:49,558 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:52:19,574 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:52:19,574 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:52:49,586 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:52:49,586 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:53:19,600 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:53:19,600 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:53:49,612 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:53:49,612 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:54:19,617 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:54:19,617 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:54:49,620 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:54:49,620 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:55:19,629 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:55:19,629 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:55:49,633 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:55:49,633 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:56:19,649 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:56:19,649 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:56:49,657 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:56:49,657 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:57:19,667 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:57:19,667 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:57:49,671 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:57:49,671 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:58:19,686 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:58:19,686 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:58:49,690 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:58:49,690 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:59:19,702 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:59:19,702 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 10:59:49,704 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 10:59:49,704 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:00:19,704 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:00:19,704 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:00:49,717 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:00:49,717 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:01:19,729 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:01:19,729 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:01:49,731 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:01:49,731 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:02:19,735 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:02:19,735 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:02:49,750 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:02:49,750 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:03:19,754 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:03:19,754 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:03:49,761 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:03:49,761 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:04:19,764 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:04:19,764 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:04:49,767 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:04:49,767 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:05:19,781 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:05:19,781 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:05:49,784 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:05:49,784 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:06:19,788 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:06:19,788 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:06:49,803 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:06:49,803 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:07:19,811 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:07:19,811 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:07:49,825 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:07:49,825 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:08:19,828 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:08:19,828 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:08:49,838 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:08:49,838 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:09:19,850 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:09:19,850 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:09:49,855 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:09:49,855 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:10:19,856 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:10:19,856 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:10:49,870 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:10:49,870 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:11:19,887 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:11:19,887 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:11:49,887 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:11:49,887 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:12:19,896 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:12:19,896 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:12:49,906 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:12:49,906 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:13:19,922 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:13:19,922 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:13:49,932 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:13:49,932 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:14:04,994 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:04,995 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:05,554 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:05,555 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:11,054 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:11,054 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:18,549 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:18,549 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:19,936 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:14:19,936 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:14:25,529 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:25,530 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:27,467 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:27,468 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:34,484 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:34,484 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:34,857 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:34,858 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:40,802 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:40,802 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:42,827 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:14:42,829 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:14:49,941 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:14:49,941 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:15:19,954 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:15:19,954 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:15:49,956 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:15:49,956 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:16:19,958 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:16:19,958 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:16:49,971 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:16:49,971 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:17:19,986 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:17:19,986 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:17:49,996 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:17:49,996 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:18:20,006 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:18:20,006 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:18:50,016 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:18:50,016 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:19:20,019 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:19:20,019 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:19:50,025 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:19:50,025 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:20:20,032 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:20:20,032 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:20:50,035 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:20:50,035 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:21:20,042 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:21:20,042 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:21:50,049 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:21:50,049 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:22:20,059 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:22:20,059 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:22:50,070 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:22:50,070 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:23:20,072 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:23:20,072 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:23:50,080 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:23:50,080 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:24:20,087 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:24:20,087 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:24:50,099 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:24:50,099 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:25:20,114 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:25:20,114 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:25:50,119 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:25:50,119 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:26:20,128 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:26:20,128 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:26:50,139 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:26:50,139 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:27:20,147 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:27:20,147 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:27:50,149 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:27:50,149 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:28:20,151 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:28:20,151 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:28:50,160 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:28:50,160 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:29:20,170 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:29:20,170 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:29:50,181 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:29:50,181 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:30:20,193 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:30:20,194 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:30:50,209 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:30:50,209 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:31:20,216 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:31:20,216 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:31:50,231 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:31:50,231 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:32:20,235 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:32:20,235 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:32:50,246 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:32:50,246 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:33:20,257 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:33:20,257 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:33:50,271 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:33:50,271 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:34:20,278 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:34:20,278 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:34:50,285 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:34:50,285 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:35:20,293 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:35:20,293 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:35:50,302 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:35:50,302 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:36:20,314 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:36:20,314 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:36:50,317 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:36:50,317 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:37:20,324 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:37:20,324 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:37:50,338 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:37:50,338 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:38:20,343 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:38:20,343 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:38:50,349 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:38:50,349 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:39:20,360 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:39:20,360 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:39:50,374 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:39:50,375 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:40:20,381 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:40:20,381 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:40:50,388 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:40:50,388 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:41:20,390 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:41:20,391 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:41:50,396 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:41:50,396 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:42:20,397 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:42:20,397 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:42:50,398 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:42:50,398 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:43:20,406 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:43:20,406 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:43:25,226 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:43:25,226 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn20: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:43:34,608 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:43:34,608 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn21: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:43:47,817 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:43:47,818 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn22: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:43:49,386 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:43:49,386 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn23: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:43:50,407 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:43:50,407 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:43:58,509 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:43:58,509 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn24: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:09,622 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:44:09,623 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn25: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:09,746 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:44:09,746 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn26: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:20,409 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:44:20,409 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:44:23,472 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:44:23,473 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn27: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:27,823 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:44:27,823 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn28: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:38,700 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 11:44:38,700 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn29: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 11:44:50,411 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:44:50,411 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:45:20,413 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:45:20,413 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:45:50,423 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:45:50,423 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:46:20,430 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:46:20,431 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:46:50,446 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:46:50,447 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:47:20,451 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:47:20,451 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:47:50,465 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:47:50,465 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:48:20,474 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:48:20,474 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:48:50,487 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:48:50,487 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:49:20,493 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:49:20,493 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:49:50,498 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:49:50,498 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:50:20,508 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:50:20,508 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:50:50,522 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:50:50,522 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:51:20,525 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:51:20,525 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:51:50,539 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:51:50,539 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:52:20,555 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:52:20,555 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:52:50,562 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:52:50,562 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:53:20,574 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:53:20,575 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:53:50,576 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:53:50,576 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:54:20,591 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:54:20,592 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:54:50,596 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:54:50,596 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:55:20,601 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:55:20,601 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:55:50,613 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:55:50,613 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:56:20,628 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:56:20,628 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:56:50,631 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:56:50,631 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:57:20,644 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:57:20,644 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:57:50,648 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:57:50,648 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:58:20,651 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:58:20,651 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:58:50,652 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:58:50,652 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:59:20,661 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:59:20,661 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 11:59:50,674 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 11:59:50,674 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:00:20,683 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:00:20,683 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:00:50,692 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:00:50,692 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:01:20,699 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:01:20,699 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:01:50,703 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:01:50,703 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:02:20,705 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:02:20,705 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:02:50,715 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:02:50,715 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:03:20,722 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:03:20,722 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:03:50,735 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:03:50,735 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:04:20,739 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:04:20,739 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:04:50,744 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:04:50,744 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:05:20,756 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:05:20,756 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:05:50,758 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:05:50,758 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:06:20,764 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:06:20,764 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:06:50,773 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:06:50,773 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:07:20,786 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:07:20,786 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:07:50,800 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:07:50,800 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:08:20,812 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:08:20,812 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:08:50,821 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:08:50,821 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:09:20,835 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:09:20,835 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:09:50,836 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:09:50,837 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:10:20,838 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:10:20,838 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:10:50,852 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:10:50,852 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:11:20,857 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:11:20,857 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:11:50,861 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:11:50,861 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:12:20,864 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:12:20,864 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:12:50,870 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:12:50,870 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:13:10,575 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn21: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:10,576 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn30: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:13,505 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn23: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:13,506 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn31: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:13,710 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn20: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:13,711 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn32: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:20,885 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:13:20,885 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:13:29,282 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn22: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:29,282 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn33: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:30,662 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn26: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:30,663 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn34: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:36,170 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn25: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:36,170 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn35: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:41,207 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn27: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:41,207 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn36: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:49,096 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn24: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:13:49,096 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn37: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:13:50,898 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:13:50,898 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:14:20,902 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:14:20,902 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:14:25,750 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn28: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:14:25,750 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn38: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:14:35,202 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn29: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:14:35,204 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn39: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:14:50,916 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:14:50,916 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:15:20,931 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:15:20,931 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:15:50,944 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:15:50,944 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:16:20,948 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:16:20,948 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:16:50,957 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:16:50,957 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:17:20,959 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:17:20,960 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:17:50,963 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:17:50,963 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:18:20,966 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:18:20,966 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:18:50,979 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:18:50,979 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:19:20,981 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:19:20,981 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:19:50,985 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:19:50,985 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:20:20,992 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:20:20,992 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:20:50,997 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:20:50,997 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:21:20,999 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:21:20,999 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:21:51,001 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:21:51,001 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:22:21,014 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:22:21,015 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:22:51,015 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:22:51,015 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:23:21,023 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:23:21,023 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:23:51,034 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:23:51,034 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:24:21,037 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:24:21,038 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:24:51,040 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:24:51,040 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:25:21,044 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:25:21,044 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:25:51,058 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:25:51,059 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:26:21,061 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:26:21,061 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:26:51,063 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:26:51,063 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:27:21,065 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:27:21,066 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:27:51,077 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:27:51,077 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:28:21,089 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:28:21,089 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:28:51,100 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:28:51,100 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:29:21,105 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:29:21,105 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:29:51,107 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:29:51,107 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:30:21,126 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:30:21,126 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:30:51,136 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:30:51,136 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:31:21,146 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:31:21,146 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:31:51,159 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:31:51,159 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:32:21,166 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:32:21,166 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:32:51,171 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:32:51,171 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:33:21,177 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:33:21,177 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:33:51,190 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:33:51,190 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:34:21,201 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:34:21,201 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:34:51,205 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:34:51,205 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:35:21,209 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:35:21,209 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:35:51,212 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:35:51,212 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:36:21,225 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:36:21,225 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:36:51,234 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:36:51,234 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:37:21,243 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:37:21,243 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:37:51,253 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:37:51,254 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:38:21,260 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:38:21,260 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:38:51,266 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:38:51,266 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:39:21,280 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:39:21,280 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:39:51,286 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:39:51,286 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:40:21,296 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:40:21,296 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:40:51,310 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:40:51,310 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:41:21,314 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:41:21,314 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:41:51,326 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:41:51,326 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:42:21,333 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:42:21,333 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:42:28,581 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn31: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:42:28,582 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn40: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:42:29,126 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn32: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:42:29,127 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn41: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:42:51,346 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:42:51,346 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:43:00,363 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn35: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:00,363 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn42: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:04,903 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn33: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:04,904 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn43: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:09,834 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn30: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:09,835 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn44: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:10,023 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn37: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:10,024 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn45: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:17,086 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn34: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:17,086 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn46: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:21,355 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:43:21,355 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:43:33,428 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn36: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:33,428 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn47: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:43,065 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn38: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:43:43,065 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn48: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:43:51,360 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:43:51,360 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:44:10,475 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn39: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection has passed maxLifetime)
2023-05-21 12:44:10,476 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn49: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN
2023-05-21 12:44:21,365 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:44:21,365 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:44:51,368 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:44:51,368 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:45:21,381 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:45:21,381 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:45:51,395 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:45:51,395 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:46:21,398 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:46:21,398 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:46:51,399 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:46:51,399 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:47:21,412 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:47:21,412 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:47:51,424 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:47:51,424 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:48:21,438 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:48:21,438 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled (queueDepth=0).
2023-05-21 12:48:32,673 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 12:48:32,675 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f6f5d5a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7e3d168e]
2023-05-21 12:48:32,675 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 12:48:32,678 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 12:48:32,678 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn40: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn41: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn42: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn43: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn44: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn45: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn46: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn47: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn48: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,679 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn49: url=jdbc:h2:mem:7743dbc1-cb95-4755-8cd7-6d9090af30f1 user=ADMIN: (connection evicted)
2023-05-21 12:48:32,680 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 18:43:03,263 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 18:43:05,089 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 18:43:05,136 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 18:43:05,214 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 18:43:05,230 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 18:43:05,246 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 18:43:05,309 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:43:05,561 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 18:43:05,561 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 18:43:05,561 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 18:43:05,671 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:43:05,702 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b07c4c8
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b07c4c8
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1b27c0d5
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1b27c0d5
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1353f515
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@570b2d9b
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b5b6df4
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ad11552
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6626ae40
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@684f20ea
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@81bc4da
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6a022b0e
2023-05-21 18:43:05,718 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 18:43:05,718 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b] into BootstrapContext; was [null]
2023-05-21 18:43:05,718 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b) [was null]
2023-05-21 18:43:05,718 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7cf9557a] into BootstrapContext; was [null]
2023-05-21 18:43:05,718 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f2df0b3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a60b0c4]
2023-05-21 18:43:05,734 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b]
2023-05-21 18:43:05,734 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b]
2023-05-21 18:43:05,765 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 18:43:05,780 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 18:43:06,158 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:43:06,158 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:43:06,158 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 18:43:06,196 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 18:43:06,220 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 18:43:06,220 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 18:43:06,220 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 18:43:06,220 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:43:06,220 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:43:06,236 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:43:06,236 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d0d8c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75f69816]
2023-05-21 18:43:06,267 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 18:43:06,267 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,283 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,296 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 18:43:06,299 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,315 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,330 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,346 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,346 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:43:06,346 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:43:06,361 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,361 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 18:43:06,361 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 18:43:06,377 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,393 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN
2023-05-21 18:43:06,397 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,397 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:43:06,397 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:43:06,397 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 18:43:06,409 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:43:06,409 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 18:43:06,409 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 18:43:06,424 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - Building property id
2023-05-21 18:43:06,424 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 18:43:06,424 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 18:43:06,424 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 18:43:06,424 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 18:43:06,424 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 18:43:06,424 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 18:43:06,424 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 18:43:06,424 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 18:43:06,424 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - Building property url
2023-05-21 18:43:06,424 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:43:06,424 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 18:43:06,424 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:43:06,424 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 18:43:06,424 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:43:06,424 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:43:06,424 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:43:06,440 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 18:43:06,440 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:43:06,440 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:43:06,440 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property email
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property password
2023-05-21 18:43:06,440 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 18:43:06,440 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 18:43:06,440 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 18:43:06,440 [main] DEBUG PropertyBinder - Building property role
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 18:43:06,440 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 18:43:06,456 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 18:43:06,456 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 18:43:06,504 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 18:43:06,582 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:43:06,582 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 18:43:06,582 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@169729d9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\git\test-companion\test-companion-library\target\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire11883095318773960280\surefirebooter8866171323157941694.jar C:\Users\nisha\AppData\Local\Temp\surefire11883095318773960280 2023-05-21T18-42-35_931-jvmRun1 surefire2482540051924999148tmp surefire_15487830137447174761tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6eec5a54, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\git\test-companion\test-companion-library\target\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire11883095318773960280\surefirebooter8866171323157941694.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.13686551403745369906, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=21396, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.13686551403745369906, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1b75f094, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 18:43:06,582 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 18:43:06,613 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7248ec5f] under count; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@925e0c8] under every; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@71312bcb] under any; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5cd96071] under position; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6ea8e8bc] under overlay; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5075a022] under trim; prior registration was null
2023-05-21 18:43:06,708 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@378f09a] under cast; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80fc9d6] under collate; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@62931c28] under extract; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6f8a8101] under ifnull; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@89ebacd] under pad; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e93f8b4] under str; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5eef49f2] under format; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@13a46f54] under timestampadd; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@724e9296] under timestampdiff; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a471163] under current_date; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@123b8431] under current_time; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89f305] under current_timestamp; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d83ed58] under local_date; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f7d3d82] under local_time; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51293850] under local_datetime; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6009e8ab] under offset_datetime; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under instant; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@583eecde] under sql; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@52f85a6c] under count; prior registration was org.hibernate.dialect.function.CountFunction@7248ec5f
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@661d8946] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1f7d3d82
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51293850
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b06fc00] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5cd96071
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e971f6a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@76968f03] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5eef49f2
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 18:43:06,724 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@29cdc8ba] under listagg; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f124162] under mode; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e2ea153] under percentile_cont; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2faab150] under percentile_disc; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6b308b7c] under rank; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a2ee97c] under dense_rank; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a3a68b] under percent_rank; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@209a490a] under cume_dist; prior registration was null
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 18:43:06,740 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 18:43:06,740 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d0d8c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@253e74c2]
2023-05-21 18:43:06,834 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:43:06,834 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:43:07,069 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:43:07,069 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:43:07,101 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 18:43:07,101 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 18:43:07,101 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 18:43:07,101 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:43:07,101 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 18:43:07,101 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 18:43:07,101 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 18:43:07,101 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 18:43:07,117 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 18:43:07,117 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 18:43:07,148 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 18:43:07,148 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 18:43:07,164 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:43:07,164 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 18:43:07,164 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:07,164 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:43:07,164 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 18:43:07,164 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:07,164 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:07,164 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:43:07,164 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:07,179 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 18:43:07,179 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 18:43:07,242 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 18:43:07,258 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 18:43:07,258 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:43:07,258 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 18:43:07,258 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d52508e
2023-05-21 18:43:07,258 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 946f8ea2-22b2-459c-bb90-8ecd1f6322ba (<unnamed>)
2023-05-21 18:43:07,258 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 18:43:07,399 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 18:43:07,525 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:43:07,619 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:43:07,886 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
2023-05-21 18:43:07,899 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user]}: getAllUsers()
	{PUT [/api/user]}: addUser(User)
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 18:43:07,899 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/setting/usermanagement]}: getUserManagementPage()
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
2023-05-21 18:43:07,902 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 18:43:07,902 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 18:43:08,043 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 18:43:08,577 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:08,577 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:08,656 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:08,656 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:08,672 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200).role]

2023-05-21 18:43:08,672 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:08,688 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:08,700 [main] DEBUG results - Initializer list
2023-05-21 18:43:08,704 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38258645398200))@1581360359 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:08,704 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:43:08,704 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:08,783 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:08,783 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:08,783 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:08,800 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:08,800 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:08,800 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:43:08,800 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:08,800 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:08,800 [main] DEBUG results - Initializer list
2023-05-21 18:43:08,800 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1285744685 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:08,800 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:08,814 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 18:43:08,830 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:08,830 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:08,830 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:08,830 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:43:08,830 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:08,830 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:08,830 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$X6gxp5pTxZR2m6os.zU8g.qIVGP0H2ML4wOF314UcxN/HjeDAuisy, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 18:43:08,846 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:08,846 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:08,909 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:08,909 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:08,909 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:08,909 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:08,909 [main] DEBUG results - Initializer list
2023-05-21 18:43:08,909 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@190844537 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:08,909 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:08,909 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 18:43:08,909 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:08,909 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:08,909 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:08,909 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:43:08,909 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:08,909 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:08,909 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$heQA8hnc7HY.cqG4lKtQqeukpGSsq/vumYdK/L0JDgGOfQMgLWlwS, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 18:43:08,909 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:08,909 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:08,972 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:08,972 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:08,972 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:08,972 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:08,972 [main] DEBUG results - Initializer list
2023-05-21 18:43:08,972 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1625182602 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:08,972 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:08,972 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 18:43:08,972 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:08,972 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:08,972 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:08,972 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:43:08,972 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:08,972 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:08,972 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$GUfViN0Lti/ypXLXoWIU1e/yUURJwrpznbbmuwv4//1G6xk2cgNbq, role=USER, email=user.com, username=user}
2023-05-21 18:43:08,972 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:08,972 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:09,583 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:09,583 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:09,583 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d628a7d
2023-05-21 18:43:09,583 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).username) 
2023-05-21 18:43:09,601 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).role]

2023-05-21 18:43:09,601 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:09,601 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:09,601 [main] DEBUG results - Initializer list
2023-05-21 18:43:09,601 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))@1860755302 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:09,601 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:43:09,601 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)): admin
2023-05-21 18:43:09,601 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@2f38d100
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$X6gxp5pTxZR2m6os.zU8g.qIVGP0H2ML4wOF314UcxN/HjeDAuisy]
2023-05-21 18:43:09,601 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:43:09,601 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#admin
2023-05-21 18:43:09,601 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@722b438
2023-05-21 18:43:09,819 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:09,819 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:09,835 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 18:43:10,023 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 18:43:10,070 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 18:43:10,085 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 18:43:10,085 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 18:43:10,102 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:10,102 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:10,102 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 18:43:10,102 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 18:43:10,102 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 18:43:10,102 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:10,102 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,102 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,102 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,102 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4300fe9d
2023-05-21 18:43:10,102 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:43:10,102 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,164 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,164 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:10,164 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:10,164 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,164 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1297148417 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,164 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,164 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 18:43:10,164 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,164 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:10,164 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:10,164 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:43:10,164 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:10,164 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:10,164 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$e5rydU/CPdgqyeXwRqHTkudiU3V/Vo6SEdWXGnaMC50AcktQLKV8m, role=USER, email=null, username=test}
2023-05-21 18:43:10,164 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:10,180 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:10,195 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:10,195 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:10,195 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d366256
2023-05-21 18:43:10,195 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).username) 
2023-05-21 18:43:10,195 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).role]

2023-05-21 18:43:10,195 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:10,195 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,195 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,195 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))@302688404 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,195 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:43:10,202 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)): test
2023-05-21 18:43:10,202 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@76eb0a17
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$e5rydU/CPdgqyeXwRqHTkudiU3V/Vo6SEdWXGnaMC50AcktQLKV8m]
2023-05-21 18:43:10,202 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:43:10,202 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#test
2023-05-21 18:43:10,202 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31625256
2023-05-21 18:43:10,227 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:10,243 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,243 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:10,243 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:10,243 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800).role]

2023-05-21 18:43:10,243 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:10,243 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,243 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,243 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800))@975367945 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,243 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)): admin
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@3cae6fcd
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$X6gxp5pTxZR2m6os.zU8g.qIVGP0H2ML4wOF314UcxN/HjeDAuisy]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#admin
2023-05-21 18:43:10,243 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11d995f6
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)): tester
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@22bd8120
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$heQA8hnc7HY.cqG4lKtQqeukpGSsq/vumYdK/L0JDgGOfQMgLWlwS]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#tester
2023-05-21 18:43:10,243 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11d995f6
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)): user
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@1c9013cd
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$GUfViN0Lti/ypXLXoWIU1e/yUURJwrpznbbmuwv4//1G6xk2cgNbq]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#user
2023-05-21 18:43:10,243 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11d995f6
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)): test
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@530fd795
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$e5rydU/CPdgqyeXwRqHTkudiU3V/Vo6SEdWXGnaMC50AcktQLKV8m]
2023-05-21 18:43:10,243 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:43:10,243 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38260305226800)#test
2023-05-21 18:43:10,243 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11d995f6
2023-05-21 18:43:10,243 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,258 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:10,258 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,258 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@558246313 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,258 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,258 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,258 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,258 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,258 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4300fe9d
2023-05-21 18:43:10,258 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:43:10,258 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,321 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,321 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:10,321 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:43:10,321 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,321 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@85956042 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,321 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,321 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 18:43:10,321 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,321 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:10,321 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:10,321 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:43:10,321 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:10,321 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:10,321 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$28M0L2aUhqs0BuuwNTCGsOMw61p/Cegt/eVPU8Dz692r3eNZkOE3e, role=USER, email=null, username=test1}
2023-05-21 18:43:10,321 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:43:10,321 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:10,337 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:43:10,337 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,337 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,337 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,337 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,337 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4300fe9d
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 18:43:10,337 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,337 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:43:10,337 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:43:10,337 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f3cf8d8
2023-05-21 18:43:10,337 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).username) 
2023-05-21 18:43:10,337 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900).role]

2023-05-21 18:43:10,337 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:43:10,337 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:43:10,337 [main] DEBUG results - Initializer list
2023-05-21 18:43:10,337 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900))@462085336 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:43:10,337 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:43:10,337 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)): test
2023-05-21 18:43:10,337 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@4708d8
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$e5rydU/CPdgqyeXwRqHTkudiU3V/Vo6SEdWXGnaMC50AcktQLKV8m]
2023-05-21 18:43:10,337 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:43:10,337 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38257648373900)#test
2023-05-21 18:43:10,337 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4de66814
2023-05-21 18:43:10,337 [main] DEBUG TransactionImpl - begin
2023-05-21 18:43:10,337 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:43:10,337 [main] DEBUG TransactionImpl - committing
2023-05-21 18:43:10,337 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:43:10,337 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:43:10,337 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 18:43:10,337 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:43:10,337 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:43:10,337 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$e5rydU/CPdgqyeXwRqHTkudiU3V/Vo6SEdWXGnaMC50AcktQLKV8m, role=USER, email=null, username=test}
2023-05-21 18:43:10,337 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:43:10,337 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@775aa5ea] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@253e74c2]
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:23070820-7360-455f-9077-0000f077c0a9 user=ADMIN: (connection evicted)
2023-05-21 18:43:10,563 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 18:43:58,369 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 18:44:00,081 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 18:44:00,128 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 18:44:00,175 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 18:44:00,191 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 18:44:00,191 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 18:44:00,254 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:44:00,458 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 18:44:00,473 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 18:44:00,473 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:44:00,473 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 18:44:00,473 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 18:44:00,473 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 18:44:00,583 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2caf282e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:44:00,599 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b07c4c8
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b07c4c8
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1b27c0d5
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1b27c0d5
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1353f515
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@570b2d9b
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b5b6df4
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ad11552
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6626ae40
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@684f20ea
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@81bc4da
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6a022b0e
2023-05-21 18:44:00,615 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 18:44:00,615 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b] into BootstrapContext; was [null]
2023-05-21 18:44:00,615 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b) [was null]
2023-05-21 18:44:00,615 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7cf9557a] into BootstrapContext; was [null]
2023-05-21 18:44:00,615 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f2df0b3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a60b0c4]
2023-05-21 18:44:00,637 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b]
2023-05-21 18:44:00,637 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58f5db3b]
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 18:44:00,662 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 18:44:01,007 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:44:01,007 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:44:01,007 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 18:44:01,037 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 18:44:01,054 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 18:44:01,054 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 18:44:01,054 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 18:44:01,070 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:44:01,070 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:44:01,070 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:01,070 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d0d8c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75f69816]
2023-05-21 18:44:01,101 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 18:44:01,101 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,117 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,132 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,132 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 18:44:01,148 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,164 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,164 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:01,180 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:44:01,180 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,180 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 18:44:01,180 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 18:44:01,195 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,211 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,211 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,211 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:44:01,211 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:01,211 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 18:44:01,211 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 18:44:01,227 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN
2023-05-21 18:44:01,227 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 18:44:01,227 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 18:44:01,227 [main] DEBUG PropertyBinder - Building property id
2023-05-21 18:44:01,227 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 18:44:01,238 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 18:44:01,238 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 18:44:01,238 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 18:44:01,238 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 18:44:01,238 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 18:44:01,238 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 18:44:01,238 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 18:44:01,238 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - Building property url
2023-05-21 18:44:01,238 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:44:01,238 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 18:44:01,238 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:44:01,238 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 18:44:01,238 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:44:01,243 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:44:01,243 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:44:01,243 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 18:44:01,243 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:44:01,243 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:44:01,243 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property email
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property password
2023-05-21 18:44:01,243 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 18:44:01,243 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 18:44:01,243 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 18:44:01,243 [main] DEBUG PropertyBinder - Building property role
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 18:44:01,243 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 18:44:01,259 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 18:44:01,259 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 18:44:01,306 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 18:44:01,368 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:44:01,368 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 18:44:01,384 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@169729d9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire9798371459814384287\surefirebooter2722834643565109676.jar C:\Users\nisha\AppData\Local\Temp\surefire9798371459814384287 2023-05-21T18-43-56_360-jvmRun1 surefire4813755135706711449tmp surefire_0605745021978308020tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6eec5a54, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire9798371459814384287\surefirebooter2722834643565109676.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.2311456658700528709, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=21440, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.2311456658700528709, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1b75f094, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 18:44:01,384 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 18:44:01,400 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7248ec5f] under count; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@925e0c8] under every; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@71312bcb] under any; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 18:44:01,478 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5cd96071] under position; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6ea8e8bc] under overlay; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5075a022] under trim; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@378f09a] under cast; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80fc9d6] under collate; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@62931c28] under extract; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6f8a8101] under ifnull; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@89ebacd] under pad; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e93f8b4] under str; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5eef49f2] under format; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@13a46f54] under timestampadd; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@724e9296] under timestampdiff; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a471163] under current_date; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@123b8431] under current_time; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89f305] under current_timestamp; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d83ed58] under local_date; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f7d3d82] under local_time; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51293850] under local_datetime; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6009e8ab] under offset_datetime; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under instant; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@583eecde] under sql; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@52f85a6c] under count; prior registration was org.hibernate.dialect.function.CountFunction@7248ec5f
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@661d8946] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1f7d3d82
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@51293850
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 18:44:01,494 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b06fc00] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5cd96071
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e971f6a] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@76968f03] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5eef49f2
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@29cdc8ba] under listagg; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f124162] under mode; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e2ea153] under percentile_cont; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2faab150] under percentile_disc; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6b308b7c] under rank; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a2ee97c] under dense_rank; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a3a68b] under percent_rank; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@209a490a] under cume_dist; prior registration was null
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 18:44:01,509 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 18:44:01,509 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@15d0d8c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@253e74c2]
2023-05-21 18:44:01,620 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:44:01,620 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:01,856 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:44:01,856 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:01,903 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 18:44:01,903 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 18:44:01,903 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 18:44:01,903 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:01,903 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 18:44:01,903 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 18:44:01,903 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 18:44:01,903 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 18:44:01,918 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 18:44:01,918 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 18:44:01,950 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 18:44:01,966 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 18:44:01,966 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:01,966 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 18:44:01,966 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:01,966 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:44:01,966 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 18:44:01,966 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:01,966 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:01,966 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:44:01,966 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:01,997 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 18:44:01,997 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 18:44:02,060 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 18:44:02,060 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 18:44:02,075 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:44:02,075 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 18:44:02,075 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5d52508e
2023-05-21 18:44:02,075 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 9a96a6af-1584-4766-bb95-96166e964427 (<unnamed>)
2023-05-21 18:44:02,075 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 18:44:02,217 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 18:44:02,358 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:44:02,452 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:44:02,687 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
2023-05-21 18:44:02,687 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user/{username}]}: getUser(String)
	{GET [/api/user]}: getAllUsers()
	{PUT [/api/user]}: addUser(User)
	{DELETE [/api/user/{username}]}: deleteUser(String)
2023-05-21 18:44:02,687 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/setting/usermanagement]}: getUserManagementPage()
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
2023-05-21 18:44:02,703 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 18:44:02,703 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 18:44:02,829 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 18:44:03,300 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:03,300 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:03,379 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:03,379 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:03,379 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900).role]

2023-05-21 18:44:03,379 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:03,394 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:03,410 [main] DEBUG results - Initializer list
2023-05-21 18:44:03,410 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38313378455900))@950057110 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:03,410 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:44:03,425 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:03,504 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:03,504 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:03,504 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:03,519 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:03,519 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:03,519 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:44:03,519 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:03,519 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:03,519 [main] DEBUG results - Initializer list
2023-05-21 18:44:03,519 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1741128870 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:03,519 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:03,519 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:03,535 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:03,535 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:03,535 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:03,541 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:03,541 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:03,541 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:03,541 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$Bwne5tj.td159ez8Iel0IeUb6FBaJcWwfgTFDkQuhtctptCFmRdjG, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 18:44:03,541 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:03,551 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:03,598 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:03,598 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:03,598 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:03,598 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:03,598 [main] DEBUG results - Initializer list
2023-05-21 18:44:03,598 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1065929230 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:03,598 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:03,598 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:03,598 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:03,598 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:03,598 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:03,598 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:03,598 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:03,598 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:03,598 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$vVxkS5quOkmTW338aB4mT.LiFfQTZGJpiFisi/n5FcbTkusCuJMzu, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 18:44:03,598 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:03,598 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:03,661 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:03,661 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:03,661 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:03,661 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:03,661 [main] DEBUG results - Initializer list
2023-05-21 18:44:03,661 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@313439652 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:03,661 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:03,661 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:03,661 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:03,661 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:03,661 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:03,661 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:03,661 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:03,661 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:03,661 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$s3LTMYeG86lojoNVI6iVpetUQs3rTXDp2wIJddo7TCIiEnjffeIru, role=USER, email=user.com, username=user}
2023-05-21 18:44:03,661 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:03,661 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:04,226 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:04,226 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:04,226 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@778cfdfc
2023-05-21 18:44:04,226 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).username) 
2023-05-21 18:44:04,226 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).role]

2023-05-21 18:44:04,226 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:04,226 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,226 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,226 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))@1110354423 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,226 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:44:04,226 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)): admin
2023-05-21 18:44:04,226 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@5ca30d06
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Bwne5tj.td159ez8Iel0IeUb6FBaJcWwfgTFDkQuhtctptCFmRdjG]
2023-05-21 18:44:04,226 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:44:04,226 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#admin
2023-05-21 18:44:04,226 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@15ad83a5
2023-05-21 18:44:04,399 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:04,399 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,399 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 18:44:04,556 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 18:44:04,619 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 18:44:04,619 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 18:44:04,634 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 18:44:04,634 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:04,634 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:04,642 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 18:44:04,642 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 18:44:04,642 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 18:44:04,642 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:04,642 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,642 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,642 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,642 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6cc2b21
2023-05-21 18:44:04,642 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:44:04,642 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,697 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,697 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:04,697 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:04,697 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,697 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@244271303 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,697 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,697 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:04,697 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,697 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:04,697 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:04,697 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:04,697 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:04,697 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:04,697 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$WYHAkcItzLcU/j9IWvN0HObS/A66tBRzYN0eP8JkI0.2VhFEXvq.m, role=USER, email=null, username=test}
2023-05-21 18:44:04,697 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:04,713 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:04,728 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:04,728 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:04,728 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f814423
2023-05-21 18:44:04,728 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).username) 
2023-05-21 18:44:04,728 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).role]

2023-05-21 18:44:04,728 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:04,728 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,728 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,728 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))@670293745 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,728 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:04,728 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)): test
2023-05-21 18:44:04,728 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@1ca04c51
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$WYHAkcItzLcU/j9IWvN0HObS/A66tBRzYN0eP8JkI0.2VhFEXvq.m]
2023-05-21 18:44:04,728 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:04,728 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#test
2023-05-21 18:44:04,728 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@251d1d62
2023-05-21 18:44:04,760 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:04,760 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,760 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:04,760 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:04,760 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700).role]

2023-05-21 18:44:04,760 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:04,760 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,760 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,760 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700))@339212055 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,760 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:44:04,760 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)): admin
2023-05-21 18:44:04,760 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@625a21ac
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Bwne5tj.td159ez8Iel0IeUb6FBaJcWwfgTFDkQuhtctptCFmRdjG]
2023-05-21 18:44:04,760 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:44:04,760 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#admin
2023-05-21 18:44:04,776 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@497efdbf
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)): tester
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@3cae6fcd
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$vVxkS5quOkmTW338aB4mT.LiFfQTZGJpiFisi/n5FcbTkusCuJMzu]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#tester
2023-05-21 18:44:04,776 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@497efdbf
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)): user
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@11d995f6
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$s3LTMYeG86lojoNVI6iVpetUQs3rTXDp2wIJddo7TCIiEnjffeIru]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#user
2023-05-21 18:44:04,776 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@497efdbf
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)): test
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@22bd8120
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$WYHAkcItzLcU/j9IWvN0HObS/A66tBRzYN0eP8JkI0.2VhFEXvq.m]
2023-05-21 18:44:04,776 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:04,776 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38314835820700)#test
2023-05-21 18:44:04,776 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@497efdbf
2023-05-21 18:44:04,776 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,776 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:04,776 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,776 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:04,776 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,776 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1228938376 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,776 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,776 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,791 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:04,791 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,791 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,791 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,791 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,791 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6cc2b21
2023-05-21 18:44:04,791 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:44:04,791 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,855 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,855 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:04,855 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:04,855 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,855 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@459185260 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,855 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,855 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:04,855 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,855 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:04,855 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:04,855 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:04,855 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:04,855 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:04,855 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$7WBBLHO9lkd.lHFkjJ6re.JR2XkFrq5LFXnJqJQ8r7hC/I1TX9MDS, role=USER, email=null, username=test1}
2023-05-21 18:44:04,855 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:04,855 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:04,855 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:04,855 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,855 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,855 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,855 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,870 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6cc2b21
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 18:44:04,870 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,870 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:04,870 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:04,870 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@51f95ca
2023-05-21 18:44:04,870 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).username) 
2023-05-21 18:44:04,870 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800).role]

2023-05-21 18:44:04,870 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:04,870 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:04,870 [main] DEBUG results - Initializer list
2023-05-21 18:44:04,870 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800))@1926978534 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:04,870 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:04,870 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)): test
2023-05-21 18:44:04,870 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@1fea17bb
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$WYHAkcItzLcU/j9IWvN0HObS/A66tBRzYN0eP8JkI0.2VhFEXvq.m]
2023-05-21 18:44:04,870 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:04,870 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38312485833800)#test
2023-05-21 18:44:04,870 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37467bcb
2023-05-21 18:44:04,870 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:04,870 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:04,870 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:04,870 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:04,870 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:04,870 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 18:44:04,870 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:04,870 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:04,870 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$WYHAkcItzLcU/j9IWvN0HObS/A66tBRzYN0eP8JkI0.2VhFEXvq.m, role=USER, email=null, username=test}
2023-05-21 18:44:04,870 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:44:04,870 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@14af6705] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@253e74c2]
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:d3e06d9d-abaa-4bb6-93a3-af5032213cf1 user=ADMIN: (connection evicted)
2023-05-21 18:44:05,097 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 18:44:42,116 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 18:44:43,856 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 18:44:43,902 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 18:44:43,950 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 18:44:43,965 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 18:44:43,965 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 18:44:44,028 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 18:44:44,233 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:44:44,248 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 18:44:44,248 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 18:44:44,248 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 18:44:44,248 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 18:44:44,248 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 18:44:44,248 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 18:44:44,343 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 18:44:44,374 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@570b2d9b
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b5b6df4
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ad11552
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6626ae40
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@684f20ea
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@81bc4da
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a022b0e
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 18:44:44,390 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@285cf30a
2023-05-21 18:44:44,390 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2] into BootstrapContext; was [null]
2023-05-21 18:44:44,390 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2) [was null]
2023-05-21 18:44:44,390 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6f2df0b3] into BootstrapContext; was [null]
2023-05-21 18:44:44,390 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a60b0c4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48c6107a]
2023-05-21 18:44:44,418 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 18:44:44,418 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 18:44:44,437 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 18:44:44,782 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:44:44,782 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 18:44:44,782 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 18:44:44,818 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 18:44:44,845 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 18:44:44,845 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36db2ef8]
2023-05-21 18:44:44,892 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 18:44:44,892 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,892 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 18:44:44,908 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,924 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,940 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,940 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:44,955 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,955 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:44:44,955 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 18:44:44,955 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 18:44:44,971 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,987 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:44,987 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:44,987 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:44:44,987 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:44,987 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 18:44:44,987 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 18:44:45,003 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:45,003 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 18:44:45,003 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - Building property id
2023-05-21 18:44:45,003 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 18:44:45,003 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 18:44:45,003 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 18:44:45,003 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 18:44:45,003 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 18:44:45,003 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 18:44:45,003 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 18:44:45,003 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 18:44:45,003 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - Building property url
2023-05-21 18:44:45,003 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:44:45,003 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 18:44:45,003 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:44:45,003 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 18:44:45,003 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:44:45,019 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN
2023-05-21 18:44:45,019 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 18:44:45,019 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 18:44:45,019 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:44:45,019 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property username
2023-05-21 18:44:45,019 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property email
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property password
2023-05-21 18:44:45,019 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 18:44:45,019 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 18:44:45,019 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 18:44:45,019 [main] DEBUG PropertyBinder - Building property role
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 18:44:45,019 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 18:44:45,035 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:44:45,035 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 18:44:45,035 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 18:44:45,082 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 18:44:45,145 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:44:45,145 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 18:44:45,145 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6eec5a54, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire9955714424741475597\surefirebooter13827080279535528521.jar C:\Users\nisha\AppData\Local\Temp\surefire9955714424741475597 2023-05-21T18-44-40_097-jvmRun1 surefire18102186660663146996tmp surefire_0729579255165211890tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1b75f094, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire9955714424741475597\surefirebooter13827080279535528521.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.5616593101525034570, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=17612, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.5616593101525034570, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39f9b4fc, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 18:44:45,145 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 18:44:45,161 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@79a1d276] under count; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@71312bcb] under every; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@19d49942] under any; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6] under position; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@25e79799] under overlay; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@57304755] under trim; prior registration was null
2023-05-21 18:44:45,255 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7c47f5b0] under cast; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f42576a] under collate; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1ace122d] under extract; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5bfa9a7] under ifnull; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4eb016a7] under pad; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6617fa99] under str; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1376ea26] under format; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4ba148fb] under timestampadd; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@21e7206a] under timestampdiff; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@123b8431] under current_date; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89f305] under current_time; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d83ed58] under current_timestamp; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f7d3d82] under local_date; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51293850] under local_time; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6009e8ab] under local_datetime; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under offset_datetime; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24b5863a] under instant; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@52f85a6c] under sql; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6831b1f6] under count; prior registration was org.hibernate.dialect.function.CountFunction@79a1d276
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2b06fc00] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51293850
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6009e8ab
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e971f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76968f03] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c4b7f2e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1376ea26
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5e74dac2] under listagg; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e2ea153] under mode; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2faab150] under percentile_cont; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@39fcefea] under percentile_disc; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a2ee97c] under rank; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a3a68b] under dense_rank; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@209a490a] under percent_rank; prior registration was null
2023-05-21 18:44:45,270 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f9e5d0e] under cume_dist; prior registration was null
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 18:44:45,286 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 18:44:45,286 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 18:44:45,380 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 18:44:45,380 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:45,634 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 18:44:45,634 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:45,666 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 18:44:45,666 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 18:44:45,682 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 18:44:45,682 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 18:44:45,682 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 18:44:45,682 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 18:44:45,682 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 18:44:45,682 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 18:44:45,697 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 18:44:45,697 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 18:44:45,729 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 18:44:45,729 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 18:44:45,745 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 18:44:45,745 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 18:44:45,745 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:45,745 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:44:45,745 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 18:44:45,745 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:45,745 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:45,745 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:44:45,745 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:45,760 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 18:44:45,760 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 18:44:45,839 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 18:44:45,839 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 18:44:45,854 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 18:44:45,854 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 18:44:45,854 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4adc3ae6
2023-05-21 18:44:45,854 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 181967b1-5951-46be-9657-e56c1fb48bd5 (<unnamed>)
2023-05-21 18:44:45,854 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 18:44:46,012 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 18:44:46,153 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:44:46,232 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 18:44:46,533 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
2023-05-21 18:44:46,533 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user]}: getAllUsers()
	{PUT [/api/user]}: addUser(User)
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 18:44:46,533 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/setting/usermanagement]}: getUserManagementPage()
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
2023-05-21 18:44:46,548 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 18:44:46,548 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 18:44:46,674 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 18:44:47,131 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:47,131 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:47,209 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:47,209 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:47,209 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100).role]

2023-05-21 18:44:47,209 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:47,225 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:47,241 [main] DEBUG results - Initializer list
2023-05-21 18:44:47,241 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38357206370100))@967302698 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:47,241 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:44:47,241 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:47,335 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:47,335 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:47,335 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:47,350 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:47,350 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:47,350 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 18:44:47,350 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:47,350 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:47,350 [main] DEBUG results - Initializer list
2023-05-21 18:44:47,350 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@411047375 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:47,350 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:47,366 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:47,366 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:47,366 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:47,366 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:47,382 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:47,382 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:47,382 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:47,382 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$SgzAJvhkKvktISGGjvACCe14hUKRO.1TTEDRvWJ8K.rgjmkBg3mFa, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 18:44:47,382 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:47,382 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:47,445 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:47,445 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:47,445 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:47,445 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:47,445 [main] DEBUG results - Initializer list
2023-05-21 18:44:47,445 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@917306623 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:47,445 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:47,445 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:47,445 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:47,445 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:47,445 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:47,445 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:47,445 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:47,445 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:47,445 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$Sl.D2beyhIgjH1Ph1yd5VOBFmVUHVY3kzIoCs8i8iovgxNfltgBsy, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 18:44:47,445 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:47,445 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:47,491 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:47,507 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:47,507 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:47,507 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:47,507 [main] DEBUG results - Initializer list
2023-05-21 18:44:47,507 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1247541543 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:47,507 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:47,507 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:47,507 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:47,507 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:47,507 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:47,507 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:47,507 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:47,507 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:47,507 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$.OoBlrZUyhflVl.pu0K8Y.samR6jUYbwfUYnPR3kY5tvC3JZoLFw6, role=USER, email=user.com, username=user}
2023-05-21 18:44:47,507 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:47,507 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:48,073 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:48,073 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:48,073 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@388e05f5
2023-05-21 18:44:48,073 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).username) 
2023-05-21 18:44:48,073 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).role]

2023-05-21 18:44:48,073 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:48,073 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,073 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,073 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))@1734331657 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,073 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,073 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:44:48,073 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)): admin
2023-05-21 18:44:48,089 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@51a27faa
2023-05-21 18:44:48,089 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:44:48,089 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:44:48,089 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:48,089 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$SgzAJvhkKvktISGGjvACCe14hUKRO.1TTEDRvWJ8K.rgjmkBg3mFa]
2023-05-21 18:44:48,089 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:44:48,089 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#admin
2023-05-21 18:44:48,089 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@453fd459
2023-05-21 18:44:48,261 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:48,261 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,261 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 18:44:48,450 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 18:44:48,513 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 18:44:48,521 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 18:44:48,529 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 18:44:48,529 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:48,529 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:48,545 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 18:44:48,545 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 18:44:48,545 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 18:44:48,545 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:48,545 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,545 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,545 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,545 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55c30d9b
2023-05-21 18:44:48,545 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:44:48,545 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,607 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,607 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:48,607 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:48,607 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,607 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@32797139 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,607 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,607 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:48,607 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,607 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:48,607 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:48,607 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:48,607 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:48,607 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:48,607 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$Msq69NUrYvvn134BPQM1o.s1gNr2X9AtXSD.obE8SY9Z3eyZXUPYO, role=USER, email=null, username=test}
2023-05-21 18:44:48,607 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:48,623 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:48,639 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:48,639 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:48,639 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@455250ec
2023-05-21 18:44:48,639 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).username) 
2023-05-21 18:44:48,639 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).role]

2023-05-21 18:44:48,639 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:48,639 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,639 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,639 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))@1340201376 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,639 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:48,639 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)): test
2023-05-21 18:44:48,639 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@58c68a4f
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Msq69NUrYvvn134BPQM1o.s1gNr2X9AtXSD.obE8SY9Z3eyZXUPYO]
2023-05-21 18:44:48,639 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:48,639 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#test
2023-05-21 18:44:48,639 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19ab742e
2023-05-21 18:44:48,671 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:48,671 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,671 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:48,671 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:48,671 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600).role]

2023-05-21 18:44:48,671 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:48,686 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,686 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,686 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600))@2082270026 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,686 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)): admin
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@83718d
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$SgzAJvhkKvktISGGjvACCe14hUKRO.1TTEDRvWJ8K.rgjmkBg3mFa]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#admin
2023-05-21 18:44:48,686 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5e9c6c
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)): tester
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@4b79ee80
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Sl.D2beyhIgjH1Ph1yd5VOBFmVUHVY3kzIoCs8i8iovgxNfltgBsy]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#tester
2023-05-21 18:44:48,686 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5e9c6c
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)): user
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@69b1e76b
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$.OoBlrZUyhflVl.pu0K8Y.samR6jUYbwfUYnPR3kY5tvC3JZoLFw6]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#user
2023-05-21 18:44:48,686 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5e9c6c
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)): test
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@7225ecc9
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Msq69NUrYvvn134BPQM1o.s1gNr2X9AtXSD.obE8SY9Z3eyZXUPYO]
2023-05-21 18:44:48,686 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:48,686 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38358747375600)#test
2023-05-21 18:44:48,686 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1b5e9c6c
2023-05-21 18:44:48,686 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,686 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:48,686 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,686 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:48,686 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,686 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1306945556 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,686 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,686 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,702 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:48,702 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,702 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,702 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,702 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,702 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55c30d9b
2023-05-21 18:44:48,702 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 18:44:48,702 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,765 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,765 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:48,765 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 18:44:48,765 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,765 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@726854178 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,765 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,765 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 18:44:48,765 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,765 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:48,765 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:48,765 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 18:44:48,765 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:48,765 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:48,765 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$9nXA9E8mE3uMX11QorSW/.gVuoELdhYbQ/8/9eIOSYsqbMtUVRcRy, role=USER, email=null, username=test1}
2023-05-21 18:44:48,765 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 18:44:48,765 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:48,765 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 18:44:48,765 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,765 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,765 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,765 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,765 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55c30d9b
2023-05-21 18:44:48,765 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 18:44:48,765 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,765 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 18:44:48,765 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 18:44:48,780 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@70b01a3f
2023-05-21 18:44:48,780 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).username) 
2023-05-21 18:44:48,780 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300).role]

2023-05-21 18:44:48,780 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 18:44:48,780 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 18:44:48,780 [main] DEBUG results - Initializer list
2023-05-21 18:44:48,780 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300))@1832478590 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 18:44:48,780 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 18:44:48,780 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)): test
2023-05-21 18:44:48,780 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@27d9103f
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$Msq69NUrYvvn134BPQM1o.s1gNr2X9AtXSD.obE8SY9Z3eyZXUPYO]
2023-05-21 18:44:48,780 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 18:44:48,780 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(38356277417300)#test
2023-05-21 18:44:48,780 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fd812d
2023-05-21 18:44:48,780 [main] DEBUG TransactionImpl - begin
2023-05-21 18:44:48,780 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 18:44:48,780 [main] DEBUG TransactionImpl - committing
2023-05-21 18:44:48,780 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 18:44:48,780 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 18:44:48,780 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 18:44:48,780 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 18:44:48,780 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 18:44:48,780 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$Msq69NUrYvvn134BPQM1o.s1gNr2X9AtXSD.obE8SY9Z3eyZXUPYO, role=USER, email=null, username=test}
2023-05-21 18:44:48,780 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 18:44:48,780 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@471c63cd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:bb8ee2a1-4d16-4681-8545-aa80493b2b11 user=ADMIN: (connection evicted)
2023-05-21 18:44:49,015 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 20:26:49,225 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 20:26:50,944 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 20:26:50,991 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 20:26:51,055 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 20:26:51,055 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 20:26:51,055 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 20:26:51,118 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 20:26:51,338 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:26:51,353 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 20:26:51,353 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 20:26:51,353 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:26:51,353 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 20:26:51,353 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 20:26:51,353 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 20:26:51,463 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:26:51,479 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@570b2d9b
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b5b6df4
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ad11552
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6626ae40
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@684f20ea
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@81bc4da
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a022b0e
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 20:26:51,495 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@285cf30a
2023-05-21 20:26:51,508 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2] into BootstrapContext; was [null]
2023-05-21 20:26:51,508 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2) [was null]
2023-05-21 20:26:51,511 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6f2df0b3] into BootstrapContext; was [null]
2023-05-21 20:26:51,511 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a60b0c4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48c6107a]
2023-05-21 20:26:51,527 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 20:26:51,527 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 20:26:51,542 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 20:26:51,558 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 20:26:51,921 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:26:51,921 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:26:51,921 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 20:26:51,953 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:26:51,984 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:26:52,000 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36db2ef8]
2023-05-21 20:26:52,031 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 20:26:52,031 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,047 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,047 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 20:26:52,063 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,078 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,078 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:26:52,094 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,094 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:26:52,094 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 20:26:52,109 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 20:26:52,109 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,125 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,125 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,125 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:26:52,125 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:26:52,125 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 20:26:52,125 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 20:26:52,141 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,141 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 20:26:52,141 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - Building property id
2023-05-21 20:26:52,141 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 20:26:52,141 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 20:26:52,141 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 20:26:52,141 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 20:26:52,141 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 20:26:52,141 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 20:26:52,141 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 20:26:52,141 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 20:26:52,141 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - Building property url
2023-05-21 20:26:52,141 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:26:52,141 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 20:26:52,141 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:26:52,141 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 20:26:52,141 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:26:52,156 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN
2023-05-21 20:26:52,156 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:26:52,156 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 20:26:52,156 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:26:52,156 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:26:52,156 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property email
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property password
2023-05-21 20:26:52,156 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 20:26:52,156 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 20:26:52,156 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 20:26:52,156 [main] DEBUG PropertyBinder - Building property role
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 20:26:52,156 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 20:26:52,172 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 20:26:52,172 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 20:26:52,172 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 20:26:52,172 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 20:26:52,219 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 20:26:52,282 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:26:52,282 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 20:26:52,282 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6eec5a54, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire4737332409115210801\surefirebooter4443879150851383418.jar C:\Users\nisha\AppData\Local\Temp\surefire4737332409115210801 2023-05-21T20-26-47_204-jvmRun1 surefire12826163660219827495tmp surefire_07463971554260598550tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1b75f094, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire4737332409115210801\surefirebooter4443879150851383418.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.7811877768217735672, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=7476, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.7811877768217735672, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39f9b4fc, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 20:26:52,298 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 20:26:52,314 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@79a1d276] under count; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@71312bcb] under every; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@19d49942] under any; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6] under position; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@25e79799] under overlay; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@57304755] under trim; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7c47f5b0] under cast; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f42576a] under collate; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1ace122d] under extract; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5bfa9a7] under ifnull; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 20:26:52,392 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4eb016a7] under pad; prior registration was null
2023-05-21 20:26:52,407 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6617fa99] under str; prior registration was null
2023-05-21 20:26:52,407 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1376ea26] under format; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4ba148fb] under timestampadd; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@21e7206a] under timestampdiff; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@123b8431] under current_date; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89f305] under current_time; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d83ed58] under current_timestamp; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f7d3d82] under local_date; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51293850] under local_time; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6009e8ab] under local_datetime; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under offset_datetime; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24b5863a] under instant; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@52f85a6c] under sql; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6831b1f6] under count; prior registration was org.hibernate.dialect.function.CountFunction@79a1d276
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2b06fc00] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51293850
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6009e8ab
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e971f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76968f03] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c4b7f2e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1376ea26
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5e74dac2] under listagg; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e2ea153] under mode; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2faab150] under percentile_cont; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@39fcefea] under percentile_disc; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a2ee97c] under rank; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a3a68b] under dense_rank; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@209a490a] under percent_rank; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f9e5d0e] under cume_dist; prior registration was null
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 20:26:52,409 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 20:26:52,423 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 20:26:52,423 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 20:26:52,510 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:26:52,510 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:26:52,754 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:26:52,754 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:26:52,785 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 20:26:52,785 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 20:26:52,785 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 20:26:52,801 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:26:52,801 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 20:26:52,801 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:26:52,801 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 20:26:52,801 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 20:26:52,811 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:26:52,816 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:26:52,832 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:26:52,848 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:26:52,848 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:26:52,848 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 20:26:52,848 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:52,848 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:26:52,848 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 20:26:52,848 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:52,848 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:52,848 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:26:52,848 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:52,879 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 20:26:52,879 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 20:26:52,927 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 20:26:52,927 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 20:26:52,942 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:26:52,942 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 20:26:52,942 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4adc3ae6
2023-05-21 20:26:52,942 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 1ec15d6e-9529-4b23-af8d-5829668a6a18 (<unnamed>)
2023-05-21 20:26:52,942 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 20:26:53,084 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 20:26:53,241 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:26:53,320 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:26:53,572 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
2023-05-21 20:26:53,572 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user]}: getAllUsers()
	{PUT [/api/user]}: addUser(User)
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 20:26:53,572 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/setting/usermanagement]}: getUserManagementPage()
	{GET [/login]}: getLoginPage()
	{GET [/home]}: getHomePage()
2023-05-21 20:26:53,572 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 20:26:53,587 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 20:26:53,697 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 20:26:54,170 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:54,170 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:54,233 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:54,233 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:54,233 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100).role]

2023-05-21 20:26:54,233 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:54,249 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:54,264 [main] DEBUG results - Initializer list
2023-05-21 20:26:54,264 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44484239212100))@975500183 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:54,264 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:26:54,280 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:54,343 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:54,343 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:54,343 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:54,359 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:54,359 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:54,359 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:26:54,359 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:54,359 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:54,359 [main] DEBUG results - Initializer list
2023-05-21 20:26:54,359 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1483620370 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:54,359 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:54,374 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 20:26:54,374 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:54,374 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:54,374 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:54,390 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:26:54,390 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:54,390 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:54,390 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$wkTjgmKnYAHfn4Lt/6unwu/utYSIqTWktmHMY9ec4rMo4KtdppCpm, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 20:26:54,390 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:54,390 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:54,453 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:54,453 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:54,453 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:54,453 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:54,453 [main] DEBUG results - Initializer list
2023-05-21 20:26:54,453 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1775757149 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:54,453 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:54,453 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 20:26:54,453 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:54,453 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:54,453 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:54,453 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:26:54,453 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:54,453 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:54,453 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$JAO5iyO/22fz.XEAAeTJGeh3MXiSeko03BWCrggl9tMttMYW7N7oW, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 20:26:54,453 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:54,453 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:54,516 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:54,516 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:54,516 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:54,516 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:54,516 [main] DEBUG results - Initializer list
2023-05-21 20:26:54,516 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1127540746 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:54,516 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:54,516 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 20:26:54,516 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:54,516 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:54,516 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:54,516 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:26:54,516 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:54,516 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:54,516 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$RAGBb7cQyfnPGD6JppJy6OK7karU5fkleo560vLV1mEO5taF8dium, role=USER, email=user.com, username=user}
2023-05-21 20:26:54,516 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:54,516 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:55,081 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:55,081 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:55,081 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@621c4d15
2023-05-21 20:26:55,081 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).username) 
2023-05-21 20:26:55,081 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).role]

2023-05-21 20:26:55,081 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:55,081 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,081 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,081 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))@1364675667 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,081 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,081 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:26:55,081 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)): admin
2023-05-21 20:26:55,097 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@48ff452
2023-05-21 20:26:55,097 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:26:55,097 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:26:55,097 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:26:55,097 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$wkTjgmKnYAHfn4Lt/6unwu/utYSIqTWktmHMY9ec4rMo4KtdppCpm]
2023-05-21 20:26:55,097 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:26:55,097 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#admin
2023-05-21 20:26:55,097 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e7bd826
2023-05-21 20:26:55,160 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:26:55,160 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:26:55,160 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52c272c2
2023-05-21 20:26:55,160 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700).id) 
2023-05-21 20:26:55,160 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700).apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700).url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700).username]

2023-05-21 20:26:55,160 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700)) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:26:55,160 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,160 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,160 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44483384614700))@2059286523 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:26:55,160 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:26:55,270 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:55,270 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,270 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 20:26:55,443 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 20:26:55,491 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 20:26:55,491 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 20:26:55,507 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 20:26:55,512 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:55,512 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:55,512 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 20:26:55,512 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 20:26:55,512 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 20:26:55,512 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:55,512 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,512 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,512 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,523 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:26:55,523 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:26:55,523 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,570 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,570 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:55,570 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:55,570 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,570 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1980227540 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,570 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,570 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 20:26:55,570 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,570 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:55,570 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:55,570 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:26:55,570 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:55,570 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:55,570 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$7id12Uo30A.6h8W4.1Uo9.7/RJAlEZ0.wGqBYel0ej4eLR2oQrzT., role=USER, email=null, username=test}
2023-05-21 20:26:55,570 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:55,585 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:55,601 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:55,601 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:55,601 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43d186ca
2023-05-21 20:26:55,601 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).username) 
2023-05-21 20:26:55,601 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).role]

2023-05-21 20:26:55,601 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:55,601 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,601 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,601 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))@1870498110 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,601 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:26:55,601 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)): test
2023-05-21 20:26:55,601 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@46131545
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$7id12Uo30A.6h8W4.1Uo9.7/RJAlEZ0.wGqBYel0ej4eLR2oQrzT.]
2023-05-21 20:26:55,601 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:26:55,601 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#test
2023-05-21 20:26:55,601 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@452440c0
2023-05-21 20:26:55,633 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:55,633 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,633 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:55,633 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:55,633 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800).role]

2023-05-21 20:26:55,633 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:55,633 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,633 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,633 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800))@1413230197 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,633 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)): admin
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@1ee3181d
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$wkTjgmKnYAHfn4Lt/6unwu/utYSIqTWktmHMY9ec4rMo4KtdppCpm]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#admin
2023-05-21 20:26:55,633 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)): tester
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@73800309
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$JAO5iyO/22fz.XEAAeTJGeh3MXiSeko03BWCrggl9tMttMYW7N7oW]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#tester
2023-05-21 20:26:55,633 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)): user
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@1838e02
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$RAGBb7cQyfnPGD6JppJy6OK7karU5fkleo560vLV1mEO5taF8dium]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#user
2023-05-21 20:26:55,633 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)): test
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@7264ddf
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$7id12Uo30A.6h8W4.1Uo9.7/RJAlEZ0.wGqBYel0ej4eLR2oQrzT.]
2023-05-21 20:26:55,633 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:26:55,633 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44485703085800)#test
2023-05-21 20:26:55,633 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:26:55,633 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,648 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:55,648 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,648 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:55,648 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,648 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@299472374 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,648 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,648 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,648 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:55,648 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,648 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,648 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,648 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,664 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:26:55,664 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:26:55,664 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,712 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,712 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:55,712 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:26:55,712 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,712 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@357529703 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,712 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,712 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:26:55,712 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,712 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:55,712 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:55,712 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:26:55,712 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:55,712 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:55,712 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$Ovl3w7TxLpdcFmUVYmFwJeYOz2r8N3Ik1Cik6Z.vRjhd0peoF8Ioe, role=USER, email=null, username=test1}
2023-05-21 20:26:55,712 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:26:55,712 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:55,727 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:26:55,727 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,727 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,727 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,727 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,727 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:26:55,727 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,727 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:26:55,727 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:26:55,727 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c7aa844
2023-05-21 20:26:55,727 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).username) 
2023-05-21 20:26:55,727 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100).role]

2023-05-21 20:26:55,727 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:26:55,727 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:26:55,727 [main] DEBUG results - Initializer list
2023-05-21 20:26:55,727 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100))@1260577554 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:26:55,727 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:26:55,727 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)): test
2023-05-21 20:26:55,727 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@610a19e6
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$7id12Uo30A.6h8W4.1Uo9.7/RJAlEZ0.wGqBYel0ej4eLR2oQrzT.]
2023-05-21 20:26:55,727 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:26:55,727 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44483354986100)#test
2023-05-21 20:26:55,727 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3dec5ca6
2023-05-21 20:26:55,727 [main] DEBUG TransactionImpl - begin
2023-05-21 20:26:55,727 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:26:55,727 [main] DEBUG TransactionImpl - committing
2023-05-21 20:26:55,727 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:26:55,727 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:26:55,727 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 20:26:55,727 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:26:55,727 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:26:55,727 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$7id12Uo30A.6h8W4.1Uo9.7/RJAlEZ0.wGqBYel0ej4eLR2oQrzT., role=USER, email=null, username=test}
2023-05-21 20:26:55,727 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:26:55,727 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:26:55,951 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 20:26:55,966 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@26c8051d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 20:26:55,966 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 20:26:55,966 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 20:26:55,966 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:7347822b-4065-4fc5-b21e-eddcb3cc6f97 user=ADMIN: (connection evicted)
2023-05-21 20:26:55,966 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 20:27:08,840 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 20:27:10,620 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 20:27:10,668 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 20:27:10,715 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 20:27:10,731 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 20:27:10,731 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 20:27:10,779 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 20:27:11,001 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 20:27:11,001 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:27:11,017 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 20:27:11,017 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 20:27:11,033 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 20:27:11,129 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ca5456e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5b5b9038
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@56912047
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@32a8ce3
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@258227dd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@225fb905
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:27:11,145 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8cad98b
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ee3a026
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@570b2d9b
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b5b6df4
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ad11552
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6626ae40
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@684f20ea
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@81bc4da
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a022b0e
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 20:27:11,161 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@285cf30a
2023-05-21 20:27:11,161 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2] into BootstrapContext; was [null]
2023-05-21 20:27:11,161 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2) [was null]
2023-05-21 20:27:11,161 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6f2df0b3] into BootstrapContext; was [null]
2023-05-21 20:27:11,177 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1a60b0c4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@48c6107a]
2023-05-21 20:27:11,192 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 20:27:11,192 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c732cc2]
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 20:27:11,209 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 20:27:11,224 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 20:27:11,557 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:27:11,557 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:27:11,557 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 20:27:11,589 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:27:11,621 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:27:11,638 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36db2ef8]
2023-05-21 20:27:11,653 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 20:27:11,653 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,669 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,684 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,684 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 20:27:11,701 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,716 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,732 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,732 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:27:11,738 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:27:11,748 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,748 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 20:27:11,748 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 20:27:11,764 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,779 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN
2023-05-21 20:27:11,779 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,779 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:27:11,779 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:27:11,779 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 20:27:11,795 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:27:11,795 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 20:27:11,795 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 20:27:11,795 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - Building property id
2023-05-21 20:27:11,795 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 20:27:11,795 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 20:27:11,795 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 20:27:11,795 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 20:27:11,795 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 20:27:11,795 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 20:27:11,795 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 20:27:11,795 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 20:27:11,795 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - Building property url
2023-05-21 20:27:11,795 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:27:11,795 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 20:27:11,795 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:27:11,795 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 20:27:11,795 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:27:11,811 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:27:11,811 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 20:27:11,811 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:27:11,811 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:27:11,811 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property email
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property password
2023-05-21 20:27:11,811 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 20:27:11,811 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 20:27:11,811 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 20:27:11,811 [main] DEBUG PropertyBinder - Building property role
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 20:27:11,811 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 20:27:11,826 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 20:27:11,826 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 20:27:11,874 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 20:27:11,939 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:27:11,939 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 20:27:11,939 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6eec5a54, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire8173947597070830547\surefirebooter2454769409135079817.jar C:\Users\nisha\AppData\Local\Temp\surefire8173947597070830547 2023-05-21T20-27-06_865-jvmRun1 surefire2334054119646137085tmp surefire_0345277000297657990tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1b75f094, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire8173947597070830547\surefirebooter2454769409135079817.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.9152570767503268863, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=8896, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.9152570767503268863, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@39f9b4fc, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 20:27:11,939 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 20:27:11,953 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 20:27:12,048 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 20:27:12,048 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@79a1d276] under count; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@71312bcb] under every; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@19d49942] under any; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6] under position; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@25e79799] under overlay; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@57304755] under trim; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7c47f5b0] under cast; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f42576a] under collate; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1ace122d] under extract; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5bfa9a7] under ifnull; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4eb016a7] under pad; prior registration was null
2023-05-21 20:27:12,064 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6617fa99] under str; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1376ea26] under format; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4ba148fb] under timestampadd; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@21e7206a] under timestampdiff; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@123b8431] under current_date; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e89f305] under current_time; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d83ed58] under current_timestamp; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f7d3d82] under local_date; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51293850] under local_time; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6009e8ab] under local_datetime; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under offset_datetime; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24b5863a] under instant; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@52f85a6c] under sql; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6831b1f6] under count; prior registration was org.hibernate.dialect.function.CountFunction@79a1d276
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2b06fc00] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51293850
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6009e8ab
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e971f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@be6b0d6
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76968f03] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7c4b7f2e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1376ea26
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5e74dac2] under listagg; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e2ea153] under mode; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2faab150] under percentile_cont; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@39fcefea] under percentile_disc; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@a2ee97c] under rank; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@78a3a68b] under dense_rank; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@209a490a] under percent_rank; prior registration was null
2023-05-21 20:27:12,079 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f9e5d0e] under cume_dist; prior registration was null
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 20:27:12,095 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 20:27:12,095 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75f69816] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 20:27:12,190 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:27:12,190 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:27:12,428 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:27:12,428 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:27:12,460 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 20:27:12,460 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 20:27:12,460 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 20:27:12,460 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:27:12,460 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 20:27:12,460 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:27:12,460 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 20:27:12,460 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 20:27:12,476 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:27:12,476 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:27:12,508 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:27:12,508 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:27:12,524 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:27:12,524 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 20:27:12,524 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:12,524 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:27:12,524 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 20:27:12,524 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:12,524 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:12,524 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:27:12,524 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:12,539 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 20:27:12,539 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 20:27:12,602 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 20:27:12,602 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 20:27:12,618 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:27:12,618 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 20:27:12,618 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4adc3ae6
2023-05-21 20:27:12,618 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: 0dd35503-7ba4-48b8-a9f1-c83ab9d8ccdb (<unnamed>)
2023-05-21 20:27:12,618 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 20:27:12,746 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 20:27:12,888 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:27:12,966 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:27:13,220 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
2023-05-21 20:27:13,236 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user/{username}]}: getUser(String)
	{GET [/api/user]}: getAllUsers()
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{PUT [/api/user]}: addUser(User)
2023-05-21 20:27:13,236 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
	{GET [/setting/usermanagement]}: getUserManagementPage()
2023-05-21 20:27:13,240 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 20:27:13,240 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 20:27:13,363 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 20:27:13,823 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:13,823 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:13,902 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:13,902 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:13,917 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400).role]

2023-05-21 20:27:13,917 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:13,917 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:13,940 [main] DEBUG results - Initializer list
2023-05-21 20:27:13,940 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44503906347400))@975500183 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:13,940 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:27:13,949 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:14,013 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:14,013 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:14,013 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:14,028 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:14,028 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:14,028 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:27:14,028 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:14,028 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:14,028 [main] DEBUG results - Initializer list
2023-05-21 20:27:14,028 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1483620370 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:14,028 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:14,040 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 20:27:14,044 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:14,044 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:14,044 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:14,044 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:27:14,044 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:14,044 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:14,044 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$8dhTeoPEZjpGQ.kftAM5weLpI0IQieOXYnYfjt7mTmRF1OANfSjpy, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 20:27:14,060 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:14,060 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:14,107 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:14,107 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:14,107 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:14,107 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:14,107 [main] DEBUG results - Initializer list
2023-05-21 20:27:14,107 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1775757149 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:14,107 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:14,123 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 20:27:14,123 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:14,123 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:14,123 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:14,123 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:27:14,123 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:14,123 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:14,123 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$xlz2ofnXr/LFlCceqfluWea.oPELMDj8p0woIPOYZuZP0y7Cyj.uu, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 20:27:14,123 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:14,123 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:14,171 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:14,171 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:14,171 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:14,171 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:14,171 [main] DEBUG results - Initializer list
2023-05-21 20:27:14,171 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1127540746 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:14,171 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:14,171 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 20:27:14,171 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:14,171 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:14,171 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:14,171 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:27:14,171 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:14,171 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:14,171 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$yAmKVZavrg9iO38GmolrMO74E8fDrael2OHwKA4SDgLgOTOyftvbq, role=USER, email=user.com, username=user}
2023-05-21 20:27:14,171 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:14,171 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:14,769 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:14,769 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:14,769 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@621c4d15
2023-05-21 20:27:14,769 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).username) 
2023-05-21 20:27:14,785 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).role]

2023-05-21 20:27:14,785 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:14,785 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:14,785 [main] DEBUG results - Initializer list
2023-05-21 20:27:14,785 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))@1364675667 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:14,785 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:27:14,785 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)): admin
2023-05-21 20:27:14,785 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@48ff452
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$8dhTeoPEZjpGQ.kftAM5weLpI0IQieOXYnYfjt7mTmRF1OANfSjpy]
2023-05-21 20:27:14,785 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:27:14,785 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#admin
2023-05-21 20:27:14,785 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e7bd826
2023-05-21 20:27:14,864 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:27:14,864 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:27:14,864 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@52c272c2
2023-05-21 20:27:14,864 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800).id) 
2023-05-21 20:27:14,864 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800).apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800).url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800).username]

2023-05-21 20:27:14,864 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800)) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:27:14,864 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:14,864 [main] DEBUG results - Initializer list
2023-05-21 20:27:14,864 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44503042232800))@2059286523 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:27:14,864 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:27:14,960 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:14,960 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:14,976 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 20:27:15,149 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 20:27:15,196 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 20:27:15,196 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 20:27:15,211 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 20:27:15,211 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:15,211 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:15,211 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 20:27:15,211 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 20:27:15,211 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 20:27:15,211 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:15,211 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,211 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,211 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,211 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:27:15,211 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:27:15,211 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,275 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,275 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:15,275 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:15,275 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,275 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1980227540 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,275 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,275 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 20:27:15,275 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,275 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:15,275 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:15,275 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:27:15,275 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:15,275 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:15,275 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$/2dTxpmIz2w8qs8gOIngK.szDFDUd/PCJV9FkjkpyvajaM1sp9v1G, role=USER, email=null, username=test}
2023-05-21 20:27:15,275 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:15,291 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:15,307 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:15,307 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:15,307 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@43d186ca
2023-05-21 20:27:15,307 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).username) 
2023-05-21 20:27:15,307 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).role]

2023-05-21 20:27:15,307 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:15,307 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,307 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,307 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))@1870498110 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,307 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:27:15,307 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)): test
2023-05-21 20:27:15,307 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@46131545
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$/2dTxpmIz2w8qs8gOIngK.szDFDUd/PCJV9FkjkpyvajaM1sp9v1G]
2023-05-21 20:27:15,307 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:27:15,307 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#test
2023-05-21 20:27:15,307 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@452440c0
2023-05-21 20:27:15,342 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:15,342 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,342 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:15,342 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:15,342 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100).role]

2023-05-21 20:27:15,342 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:15,342 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,342 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,342 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100))@1413230197 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,342 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)): admin
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@1ee3181d
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$8dhTeoPEZjpGQ.kftAM5weLpI0IQieOXYnYfjt7mTmRF1OANfSjpy]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#admin
2023-05-21 20:27:15,342 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)): tester
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@73800309
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$xlz2ofnXr/LFlCceqfluWea.oPELMDj8p0woIPOYZuZP0y7Cyj.uu]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#tester
2023-05-21 20:27:15,342 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)): user
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@1838e02
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$yAmKVZavrg9iO38GmolrMO74E8fDrael2OHwKA4SDgLgOTOyftvbq]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#user
2023-05-21 20:27:15,342 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)): test
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@7264ddf
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$/2dTxpmIz2w8qs8gOIngK.szDFDUd/PCJV9FkjkpyvajaM1sp9v1G]
2023-05-21 20:27:15,342 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:27:15,342 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44505411006100)#test
2023-05-21 20:27:15,342 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b99c232
2023-05-21 20:27:15,342 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,354 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:15,354 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,354 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:15,354 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,354 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@299472374 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,354 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,354 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,369 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:15,369 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,369 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,369 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,369 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,369 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:27:15,369 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:27:15,369 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,432 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,432 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:15,432 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:27:15,432 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,432 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@357529703 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,432 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,432 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:27:15,432 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,432 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:15,432 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:15,432 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:27:15,432 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:15,432 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:15,432 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$NA8Ik4wjRmC2BeXFEh8QeeXhjQaMQ2lN3hfcaiWqXkm.piQr4lJkC, role=USER, email=null, username=test1}
2023-05-21 20:27:15,432 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:27:15,432 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:15,442 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:27:15,442 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,442 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,442 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,442 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,448 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@16feeaa3
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:27:15,448 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,448 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:27:15,448 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:27:15,448 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c7aa844
2023-05-21 20:27:15,448 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).username) 
2023-05-21 20:27:15,448 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600).role]

2023-05-21 20:27:15,448 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:27:15,448 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:27:15,448 [main] DEBUG results - Initializer list
2023-05-21 20:27:15,448 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600))@1260577554 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:27:15,448 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:27:15,448 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)): test
2023-05-21 20:27:15,448 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@610a19e6
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$/2dTxpmIz2w8qs8gOIngK.szDFDUd/PCJV9FkjkpyvajaM1sp9v1G]
2023-05-21 20:27:15,448 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:27:15,448 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44503006157600)#test
2023-05-21 20:27:15,448 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3dec5ca6
2023-05-21 20:27:15,448 [main] DEBUG TransactionImpl - begin
2023-05-21 20:27:15,448 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:27:15,448 [main] DEBUG TransactionImpl - committing
2023-05-21 20:27:15,448 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:27:15,448 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:27:15,448 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 20:27:15,448 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:27:15,448 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:27:15,448 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$/2dTxpmIz2w8qs8gOIngK.szDFDUd/PCJV9FkjkpyvajaM1sp9v1G, role=USER, email=null, username=test}
2023-05-21 20:27:15,448 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:27:15,448 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@710b09e3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6c76e4dc]
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:9f19a82b-ec52-456b-b304-1ebaa48dfe17 user=ADMIN: (connection evicted)
2023-05-21 20:27:15,713 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 20:33:04,523 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 20:33:06,187 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 20:33:06,234 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 20:33:06,297 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 20:33:06,312 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 20:33:06,312 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 20:33:06,360 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:33:06,580 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 20:33:06,580 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 20:33:06,595 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 20:33:06,705 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7d932611
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2a09e0d4
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1e019687
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ef35d1f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ef35d1f
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:33:06,721 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@385d9880
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73174f4f
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73174f4f
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2e4084e0
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2e4084e0
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6a022b0e
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3985cca0
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@285cf30a
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7e37cfcf
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@596d15c
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1261fd82
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5dea9867
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1de36da2
2023-05-21 20:33:06,736 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2e4c4373
2023-05-21 20:33:06,736 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1a60b0c4] into BootstrapContext; was [null]
2023-05-21 20:33:06,736 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1a60b0c4) [was null]
2023-05-21 20:33:06,736 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@194ef183] into BootstrapContext; was [null]
2023-05-21 20:33:06,736 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@71f01211] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5fd81b2c]
2023-05-21 20:33:06,753 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1a60b0c4]
2023-05-21 20:33:06,753 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1a60b0c4]
2023-05-21 20:33:06,784 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 20:33:06,799 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 20:33:07,154 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:33:07,154 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:33:07,154 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 20:33:07,176 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 20:33:07,207 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 20:33:07,207 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 20:33:07,207 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 20:33:07,207 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:33:07,207 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:33:07,223 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:33:07,223 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a1af882] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2063d1c8]
2023-05-21 20:33:07,254 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 20:33:07,254 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,270 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,270 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 20:33:07,285 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,301 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,317 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,317 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:33:07,332 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:33:07,332 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,332 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 20:33:07,332 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 20:33:07,348 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,364 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,364 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,364 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:33:07,364 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:33:07,364 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 20:33:07,364 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 20:33:07,380 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN
2023-05-21 20:33:07,380 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 20:33:07,380 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - Building property id
2023-05-21 20:33:07,380 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 20:33:07,380 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 20:33:07,380 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 20:33:07,380 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 20:33:07,380 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 20:33:07,380 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 20:33:07,380 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 20:33:07,380 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 20:33:07,380 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - Building property url
2023-05-21 20:33:07,380 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:33:07,380 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 20:33:07,380 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:33:07,380 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 20:33:07,380 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:33:07,395 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:33:07,395 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:33:07,395 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 20:33:07,395 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:33:07,395 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:33:07,395 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property email
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property password
2023-05-21 20:33:07,395 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 20:33:07,395 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 20:33:07,395 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 20:33:07,395 [main] DEBUG PropertyBinder - Building property role
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 20:33:07,395 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 20:33:07,411 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 20:33:07,411 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 20:33:07,458 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 20:33:07,521 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:33:07,536 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 20:33:07,536 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5a52e060, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire8677260580831744174\surefirebooter7618791851601853915.jar C:\Users\nisha\AppData\Local\Temp\surefire8677260580831744174 2023-05-21T20-33-02_489-jvmRun1 surefire860192634858085348tmp surefire_01700357874272664511tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3068f882, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire8677260580831744174\surefirebooter7618791851601853915.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.11943079761941929990, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11524, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.11943079761941929990, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@40c952f6, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 20:33:07,536 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 20:33:07,555 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2e703a4c] under count; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2dc537ac] under every; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@e3b9b44] under any; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@47c81691] under position; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@57304755] under overlay; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@41a6e7d0] under trim; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@257fe516] under cast; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@763ee217] under collate; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4b2dd504] under extract; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6b907f80] under ifnull; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3199d939] under pad; prior registration was null
2023-05-21 20:33:07,631 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@421e2baf] under str; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@13a46f54] under format; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@69020b9a] under timestampadd; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2d83ed58] under timestampdiff; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525230df] under current_date; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24b5863a] under current_time; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cc6d144] under current_timestamp; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13253ac7] under local_date; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@503224b4] under local_time; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@583eecde] under local_datetime; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52f85a6c] under offset_datetime; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6831b1f6] under instant; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@63796a19] under sql; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@661d8946] under count; prior registration was org.hibernate.dialect.function.CountFunction@2e703a4c
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@44173c2b] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@503224b4
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@583eecde
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63828988] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@47c81691
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@88ad411] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@54c6506d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@13a46f54
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 20:33:07,646 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@2482b6f0] under listagg; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6b308b7c] under mode; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a2ee97c] under percentile_cont; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@78a3a68b] under percentile_disc; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@25d48650] under rank; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@189fc9c9] under dense_rank; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1bde703a] under percent_rank; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e6285d3] under cume_dist; prior registration was null
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 20:33:07,655 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 20:33:07,662 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 20:33:07,662 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a1af882] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6aa4f45]
2023-05-21 20:33:07,756 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:33:07,756 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:33:08,039 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:33:08,039 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:33:08,070 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 20:33:08,070 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 20:33:08,070 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 20:33:08,086 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:33:08,086 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 20:33:08,086 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:33:08,086 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 20:33:08,086 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 20:33:08,102 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:33:08,102 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:33:08,156 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:33:08,156 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:33:08,165 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:33:08,165 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 20:33:08,165 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:08,165 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:33:08,165 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 20:33:08,165 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:08,165 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:08,165 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:33:08,165 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:08,180 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 20:33:08,180 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 20:33:08,259 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 20:33:08,259 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 20:33:08,275 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:33:08,275 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 20:33:08,275 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@171908b7
2023-05-21 20:33:08,275 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: aa9a8311-273c-4ba4-9083-cf7e049cb42e (<unnamed>)
2023-05-21 20:33:08,275 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 20:33:08,416 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 20:33:08,558 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:33:08,657 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:33:08,934 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
2023-05-21 20:33:08,950 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{GET [/api/user]}: getAllUsers()
	{PUT [/api/user]}: addUser(User)
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 20:33:08,950 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/login]}: getLoginPage()
	{GET [/home]}: getHomePage()
	{GET [/setting/usermanagement]}: getUserManagementPage()
2023-05-21 20:33:08,958 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 20:33:08,966 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 20:33:09,091 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 20:33:09,559 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:09,559 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:09,609 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:09,609 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:09,625 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800).role]

2023-05-21 20:33:09,625 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:09,640 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:09,640 [main] DEBUG results - Initializer list
2023-05-21 20:33:09,640 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44859627180800))@2133996790 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:09,656 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:33:09,659 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:09,735 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:09,735 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:09,735 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:09,735 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:09,735 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:09,735 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:33:09,735 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:09,750 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:09,750 [main] DEBUG results - Initializer list
2023-05-21 20:33:09,750 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@621654813 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:09,750 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:09,750 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:09,766 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:09,766 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:09,766 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:09,766 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:09,766 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:09,766 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:09,766 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$2P6xdR9VadwXGDJNpKNFt.l7.aqMH3mqj635yAyWGuXTFarqIPOSS, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 20:33:09,766 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:09,766 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:09,829 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:09,829 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:09,829 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:09,829 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:09,829 [main] DEBUG results - Initializer list
2023-05-21 20:33:09,829 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1247541543 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:09,829 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:09,829 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:09,829 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:09,829 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:09,829 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:09,829 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:09,829 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:09,829 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:09,829 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$.4JCe8KWLZq2sG./5mVJTusqq3j2/DhHR54k2znQjX5SAppqyVcJ6, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 20:33:09,829 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:09,829 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:09,892 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:09,892 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:09,892 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:09,892 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:09,892 [main] DEBUG results - Initializer list
2023-05-21 20:33:09,892 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@751996498 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:09,892 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:09,892 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:09,892 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:09,892 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:09,892 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:09,892 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:09,892 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:09,892 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:09,892 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$DbLaUoWqnNJpcLvgPzOfRus9wL70eBMEE0afHZTpdwCvj8xJ0OypC, role=USER, email=user.com, username=user}
2023-05-21 20:33:09,892 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:09,892 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:10,460 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:10,460 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:10,460 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d9f97e4
2023-05-21 20:33:10,460 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).username) 
2023-05-21 20:33:10,460 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).role]

2023-05-21 20:33:10,460 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:10,460 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:10,460 [main] DEBUG results - Initializer list
2023-05-21 20:33:10,460 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))@383572862 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:10,460 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:33:10,472 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)): admin
2023-05-21 20:33:10,472 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@c7c82b0
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$2P6xdR9VadwXGDJNpKNFt.l7.aqMH3mqj635yAyWGuXTFarqIPOSS]
2023-05-21 20:33:10,472 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:33:10,472 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#admin
2023-05-21 20:33:10,472 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478902a6
2023-05-21 20:33:10,645 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:10,645 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:10,645 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:10,645 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:33:10,645 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:33:10,645 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:33:10,645 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:33:10,645 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:10,645 [main] DEBUG results - Initializer list
2023-05-21 20:33:10,645 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)@987797185 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:33:10,645 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:33:10,645 [main] DEBUG AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:10,645 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:10,645 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:10,645 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:10,645 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:10,645 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:10,645 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:10,660 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting{apiKey=11ee84e97dbc4da1ddc4f3bdde05d3bfc8, id=1, url=http://103.160.144.199:8080, username=nishad}
2023-05-21 20:33:10,660 [main] DEBUG SQL - insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:33:10,660 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:10,660 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:33:10,660 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:33:10,660 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25d26ee1
2023-05-21 20:33:10,660 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300).id) 
2023-05-21 20:33:10,660 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300).apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300).url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300).username]

2023-05-21 20:33:10,660 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300)) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:33:10,660 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:10,660 [main] DEBUG results - Initializer list
2023-05-21 20:33:10,660 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300))@719058259 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:33:10,660 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:33:10,660 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:33:10,660 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300)): 1
2023-05-21 20:33:10,660 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300)#1] : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting@2d5dbebc
2023-05-21 20:33:10,660 [main] DEBUG results - Extracted JDBC value [1] - [11ee84e97dbc4da1ddc4f3bdde05d3bfc8]
2023-05-21 20:33:10,660 [main] DEBUG results - Extracted JDBC value [2] - [http://103.160.144.199:8080]
2023-05-21 20:33:10,660 [main] DEBUG results - Extracted JDBC value [3] - [nishad]
2023-05-21 20:33:10,660 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44858725771300)#1
2023-05-21 20:33:10,660 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@58d9a729
2023-05-21 20:33:10,692 [main] DEBUG InternalHttpClient - ex-0000000001 preparing request execution
2023-05-21 20:33:10,692 [main] DEBUG RequestAddCookies - ex-0000000001 Cookie spec selected: strict
2023-05-21 20:33:10,707 [main] DEBUG RequestAuthCache - ex-0000000001 Auth cache not set in the context
2023-05-21 20:33:10,707 [main] DEBUG ProtocolExec - ex-0000000001 proxy auth state: UNCHALLENGED
2023-05-21 20:33:10,707 [main] DEBUG ConnectExec - ex-0000000001 acquiring connection with route {}->http://103.160.144.199:8080
2023-05-21 20:33:10,707 [main] DEBUG InternalHttpClient - ex-0000000001 acquiring endpoint (3 MINUTES)
2023-05-21 20:33:10,707 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint lease request (3 MINUTES) [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2023-05-21 20:33:10,707 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint leased [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:33:10,707 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 acquired ep-0000000001
2023-05-21 20:33:10,707 [main] DEBUG InternalHttpClient - ex-0000000001 acquired endpoint ep-0000000001
2023-05-21 20:33:10,707 [main] DEBUG ConnectExec - ex-0000000001 opening connection {}->http://103.160.144.199:8080
2023-05-21 20:33:10,723 [main] DEBUG InternalHttpClient - ep-0000000001 connecting endpoint (3 MINUTES)
2023-05-21 20:33:10,723 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connecting endpoint to http://103.160.144.199:8080 (3 MINUTES)
2023-05-21 20:33:10,723 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connecting to /103.160.144.199:8080
2023-05-21 20:33:10,770 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connection established 192.168.68.110:52946<->103.160.144.199:8080
2023-05-21 20:33:10,770 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connected http-outgoing-0
2023-05-21 20:33:10,770 [main] DEBUG InternalHttpClient - ep-0000000001 endpoint connected
2023-05-21 20:33:10,770 [main] DEBUG MainClientExec - ex-0000000001 executing GET / HTTP/1.1
2023-05-21 20:33:10,770 [main] DEBUG InternalHttpClient - ep-0000000001 start execution ex-0000000001
2023-05-21 20:33:10,770 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 executing exchange ex-0000000001 over http-outgoing-0
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> GET / HTTP/1.1
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> Accept-Encoding: gzip, x-gzip, deflate
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> Host: 103.160.144.199:8080
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> Connection: keep-alive
2023-05-21 20:33:10,770 [main] DEBUG headers - http-outgoing-0 >> User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "GET / HTTP/1.1[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "Host: 103.160.144.199:8080[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "Connection: keep-alive[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)[\r][\n]"
2023-05-21 20:33:10,770 [main] DEBUG wire - http-outgoing-0 >> "[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "HTTP/1.1 200 OK[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Date: Sun, 21 May 2023 15:03:11 GMT[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Content-Type-Options: nosniff[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Content-Type: text/html;charset=utf-8[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Expires: Thu, 01 Jan 1970 00:00:00 GMT[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Cache-Control: no-cache,no-store,must-revalidate[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Hudson-Theme: default[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Referrer-Policy: same-origin[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Cross-Origin-Opener-Policy: same-origin[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Set-Cookie: JSESSIONID.ce58f1e1=node06myt7nvxzb5z9cu9kkea7k667.node0; Path=/; HttpOnly[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Hudson: 1.395[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Jenkins: 2.387.3[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Jenkins-Session: 0408bb8f[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Frame-Options: sameorigin[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Content-Encoding: gzip[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Content-Length: 6816[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "Server: Jetty(10.0.13)[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[\r][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0x1f][0xffffff8b][0x8][0x0][0x0][0x0][0x0][0x0][0x0][0xffffffff][0xffffffed]\k[0xffffff93][0xffffffdb][0xffffffc6][0xffffff95][0xfffffffd][0xffffffee]_[0xffffffd1][0xffffffa1]?([0xffffffd9][0x10]`[0xffffffbf][0xffffffd0]hx[0xffffffa5]I[0xffffffc9]c[0xffffffa7][0xffffffec][0xffffffd4][0xffffffc8][0xfffffff6]Z[0xffffff8e][0xffffffb3][0xffffff9b][0xffffffad]-[0x15][0xffffff86][0xffffffc4][0xc]![0xffffff81][0x4][0x3][0xffffff80]#[0xffffff8d][0x7f][0xfffffffd][0xffffff9e][0xffffffd3][0x0]_3[0x1c]iF[0xf][0xffffffc7][0xffffff95][0xffffff8a][0xffffffec]![0xffffff81]F[0xfffffff7][0xffffffed][0xffffffdb][0xfffffff7]}o7[0xfffffff8][0xffffff99][0x10][0xffffff9f][0x9][0xfffffff1][0xfffffff8]w_}[0x7f][0xfffffffa][0xffffffd3][0xffffffff][0xfffffffc][0xfffffff0][0xffffffb5][0xffffff98]w[0xffffff8b][0xffffffea][0xffffffe4][0xfffffff1][0xfffffff0]Y[0xffffffe4]3[0xffffffd1][0x14][0xffffffed]_[0x7f]<{2[0xffffff9a][0xffffffb4]][0xffffffde][0xffffff95][0xffffffd3][0xffffff89][0xffffffb4][0xffffffd2][0xffffff9f][0xffffff9f][0xfffffffb][0xffffff8b][0xffffff91][0xffffff98][0xffffffe5]][0x1e]5u[0xffffffdd][0xffffffad][0xffffff9b][0xffffffea][0xffffffc9]hs_[0xffffffb4][0xffffffe1][0xfffffff6][0xffffff8e][0xffffffee][0xffffffc5][0xffffff9b][0xffffffae]X[0xffffffb6]e[0xffffffbd]l[0xffffffa3][0xfffffffc]*/[0xffffffab][0xfffffffc][0xffffffbc]*[0xffffff9e][0xffffff8c][0xffffffba]f][0xc][0x1d][0xffffffd6][0xffffffcb][0xffffffb2][0xffffff8b][0xffffffba][0xffffffa2][0xffffffed][0xffffff9e][0xffffff8c].[0xfffffff2][0xffffffaa][0xffffffdd]4[0xffffff97][0xffffff8b][0xfffffffc][0xfffffff2][0xe][0xffffffc8][0xffffff93][0xfffffffe][0xffffffd9][0xffffffd0]q[0xffffffda][0xffffffac][0x17][0xffffffe7][0x11]1/[0xffffff9a]'[0xffffffa3][0xffffffbf][0x14][0xffffffcb]W%[0xffffffe6]:e[0xffffffeb]A[0xffffff8f][0xffffffab][0xffffffbc]Zcfg[0xffffff95]Lr[0x7f][0xffffff9e][0xffffffcc].[\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0xffffffaf][0xffffffac]73[0xffffff9b][0xffffffa7]E*g2w[0xffffffc6][0xffffffa6][0xffffffd3]ir>=O[0xffffffcc][0xffffffb4]p[0xffffffe6][0xffffffdc][0xffffffe5][0xffffffb3]s[0xffffff99][0xffffff9e][0xffffffab]s[0xffffffa5][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0xffffffe9][0xffffff8a]4K[0xffffffd4]tt[0x2][0xffffffea][0x5][0x12][0xffffffe2]#|>[0xffffffee][0xffffffca][0xffffffae]*N[0xffffffbe][0xffffffca][0xffffffdb][0xfffffff9]y[0xffffff9d]73[0xfffffff1][0xffffffbf][0x3][0x12][0xffffffff][0xfffffff7]x[0xffffffd2]?z\[0xffffff95][0xffffffcb]W[0xffffffa0]+[0xffffffd6][0xffffffd2]v[0xffffffd7]U[0xffffffd1][0xffffffce][0xffffff8b][0xffffffa2][0x1b][0xffffff89]yS\[0x1c]Y[0xffffffdd][0xffffffcb][0xfffffff6]|[0xffffffbd][0xffffff9c][0xffffffa1][0xffffffd7][0xffffffa4][0xffffffef][0x1c]O[[0xffffffac][0xffffffb5][0xffffffbb]^[0xffffff91]n [0xffffffe7][0xffffff84][0xfffffff7][0xf][0xffffff84][0xffffff89]![0x13]0j[0x5]6[0xffffff94]WEt[0xffffffd9][0xffffff94][0xffffffb3]w[0xffffff82]-[0xffffffa7][0xfffffff5][0xfffffff2]N[0xffffff80][0x17][0xfffffff9][0x15][0xffffff9f][0xffffffc7][0xffffffed][0xffffffd5][0xffffffe5][0x6]H[0xffffffe0][0xffffffca][0x4][\r][0x7f]|[0xffffffb3][0xffffffa8]6[0xffffff90][0xffffffda][0xfffffff2][0xffffff97][0xffffffa2]}2[0xffffffca][0xffffff97][0xffffffd7][0xffffffa3][0x1e]j^uE[0xffffffb3][0xffffffcc][0xffffffbb]B[0xffffffdc][0xb]>>n[0xffffff80]R^[0xffffffbe][0xffffffc1][0xffffffdf][0x6][0xffffffdc]jU[0x15]QW[0xffffffaf][0xffffffa7][0xfffffff3][0xffffffe8][0xffffffad][0x0]ov[0xffffff8c]W[0xffffffcb][0xffffffcb][\r][0xffffffe4]i][0xffffffd5][0xffffff90][0xffffff9d][0xffffffcf]U[0xffffffa6]R[0xffffff95][0xe][0xffffff90][0x17]y[0xfffffffb][0xffffffea][0xffffffed] [0xffffffb7]=[0x2][0x15]N[0x1e]/[0xffffff8a].[0x17][0xffffffcb]|A[0xffffff82][0xffffffce][0xffffff8b]E[0x11][0x5][0xffffffb8]#[0xffffff80]_B[0x7] [0xffffffdf][0xffffff9f]_[0xffffff84][0x7f][0xffffffe8][0xffffffda]N[0xffffff9b]r[0xffffffd5][0xffffff89][0xffffffb6][0xffffff99][0x1e][0xffffff81][0xffffffdb]?l'[0xffffffab][0xffffffa6][0xffffffee]j[0xffffffd2]6~y[0xffffffc8][0xffffffa9][0xffffff97][0xffffffd0][0xffffffa4][0xffffffbe][0x13]@[\r][0xffffffdd][0xffffffef][0x9][0xfffffff3][0xffffffbc][0xffffff98][0xffffff83][0xffffffb2]u[0xfffffff3]`[0xffffff90][0xffffff8f]&[0xfffffff9][0xffffffec][0xffffffe5]z9[0x5][0xffffff8c]-[0xffffffd0][0xffffffba][0xffffffb9][0xffffff9c][0xffffffbc][0xffffffaa][0xffffffe7][0xffffffed][0xfffffffa]U[0xffffffc1][0x9]A[0xffffffe0]fr^.g[0x0][0xfffffffe][0xffffffa8][0x7][0xfffffffe][0xffffffe8][0x6][0xfffffff0]G[0xf][0xffffffc5][0xfffffff7]z]N[0xffffffae][0xfffffff3]y][0xfffffff7][0xffffff9f][0xffffffd1][0xffffffa2]\[0x12][0xfffffff5][0xfffffff7][0x1]3[0xffffffab][0x17][0xfffffffc][0xfffffffb][0x10][0x10][0xffffffc5][0x15][0xfffffff8][0xffffffd8][0x7f]~[0x8][0xffffff98]|[0x9]][0xffffffe9]`[0x13]wW[0x1f][0xffffffb4][0xffffffb0]&[0xffffffbf][0xffffff9c]5[0xfffffff5]j{[0xfffffff1]![0xffffffc0]([0xffffffac]y[0xffffffb9][0x4]'[0xffffffb7]W[0x1f][0x8]nYL[0xffffffc3]Zw[0xffffff97][0x1f][0xffffffb4]XX[0xfffffff4][0xffffffb6]^7[0xffffffd3]b[0xffffffef][0xfffffff2][0xffffff83][0xffffff98][0xffffffb1][0xffffffee][0xffffffea]i[0xffffffbd][0xffffff80][0xfffffff0]v[0xffffffc5][0xffffffc1][0xffffffcd][0xffffff87][0x0]][0x14][0xffffffcb]u[0xfffffff8][0xfffffff8] i[0xffffffab]`D(o[0xfffffffd][0xfffffff7][0xffffff87][0xffffff80]:_w[0x1d]X[0xffffffd0][0x7f]}[0x8][0xffffffa0][0xffffffb6][0xffffffab][0xffffff9b]`[0xffffffe6][0xfffffffb][0xffffffef][0xfffffff7][0x5]5_[0xffffffcf]Z [0xfffffff2][0xffffffde][0xffffffd6][0xffffffe8]n[0xffffffc8]m[0xffffffdd]t[0xffffff8c]1[0xffffffee][0x7][0xfffffff2]AN[0xfffffff4][0xffffffb8][0xffffff9a][0xffffffe4]m[[0xffffffa0]q[0xffffffdb][0xfffffff0]1[0xffffffdc][0xfffffff5][gj[0x19][L[0xffffffda]|[0xfffffff1][0xffffffe9][0xffffffe6][0xc][0xffffffe2]{k:[0xffffffb6][0xffffffbe]{[0xffffffa6]"o[0xffffffa6][0xfffffff3][0xffffffed],[0xfffffff5][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0xffffffd1]_h[0xffffff8a][0x19][0x15][0xc]#[0xffffffe9][0xffffff8c][0xffffffcb]io[0x2]w=fE[0xffffff8f][0x3]Z[0xffffffff][0xffffffd8]wf[0xfffffff4][0xffffffb4][0xffffff8d][0xffffffe9][0xe]=[0xffffffec][0xffffff8f][0xffffffdf][0x7f][0xfffffff9][0xfffffffd]O[0xffffffcf][0xfffffff7][0xffffff9c][0xffffffeb][0xffffffb7][0xffffffdf]}[0xfffffff5][0xfffffff5][0x7f][0xffffff8f][0xffffffbf][0xfffffffb][0xfffffffe][0xffffffcf][0xffffffdf][0xffffff9f][0xffffff9d]}[0xffffffff][0xffffffb7][0xffffffc3][0xffffffce]We[0xfffffff1]z[0x5][0xffffffc1][0xffffffd8][0xffffffeb][0xfffffffe][0xffffffba][0xffffff9c]u[0xfffffff3]'[0xffffffb3][0x2]aF[0x11][0xffffff85][0xffffff9b][0xffffffb1]([0x11][0xffffff8a][0xffffff96]y[0x15][0xffffffb5][0xffffffd3][0x1c][0xfffffff3][0xffffffaa][0xffffff83]um[0xffffffe3][0xffffff96][0xffffffed][0xffffffd2][0xffffff9a][0xffffffb6]}Z[0xffffffdd][0xffffffc2][0xfffffff2][0xffffff8b][0xffffffbc][0xffffffaa][0xffffffc4][0xffffffef][0xfffffff9]q[0xffffffbe].[0xffffffab]Y[0xfffffffb][0xffffff87]ck[0xffffffce][0xffffffbb]z[0xffffffb1][0x1f]%[0xffffffbd]u[0xffffff86]?]T[0xfffffff9][0x15][0xffffffe2][0x13][0xffffffdc]i[0xfffffff9][0xffffffce][0xffffffe9][0xffffffc4][0xffffffef][0x7f]|[0xfffffffe]\[0xffffffe8]X[0x1e][0xffffff9d][0x18]0[0xffffffee]7[0xffffffef][0xffffff9f][0x11][0xffffffaa][0x17][0xffffffb3][0xffffffe3][0xffffffb3]][0xffffff84]g[0x1f]g}[0xfffffffd]<[0xfffffff7]X[0xffffffe2][0xffffffe1][0xffffffa4][0xfffffff7]][0xffffffe5][0x3][0xfffffffc]T[0xfffffffd][0xffffffaa],[0xffffff86][0xffffffaf][0xffffffbb][0xffffffad]Z9[0xffffff83][0xffffff84]O[0xffffff9b][0xffffffa2]X[0xfffffffe]X[0xffffffb4]u[0xffffffb5][0xe][0xffffffde]l0+C:[0xffffffd3][0x16]Q[L[0xffffffd7][\r][0xffffffc3]?[0x2][0xffffffdb][0xffffffa4]5[0xfffffff7][0xf][0xffffffab]z[0xffffffe3]8Y[0xffffffd4][0xffffffb3][0xffffffa2][0xffffff9a][0xfffffffc][0xc][0xffffffd1][0xffffff9d][0xfffffff4]S2[0xffffffd5][0x1a][0xffffffe6][0xfffffffc][0x8][0x11][0xffffffd6].[0xffffffcd]@83[0xffffffab][0xffffff9b][0xfffffff6]#[0x18][0xffffffe1][0x1d][0xffffffcc][0x15][0xffffff9d][0x3][0xfffffff5][0xffffffe9][0xffffffa3]B[0xffffffdd][0x18][0xfffffff7][0xffffff88][0xffffff91]N[0xffffffc4]P[0xffffffe7]A[0xffffffe0]g[0xffffffc5][0x5]s[0xffffffc4]>[0xfffffff9]|[0xffffffd7]\[0x10][0xffffffa8][0xfffffffb][0x1][0xffffff9f]0[0xfffffff7]<y|^[0xffffffcf][0xffffffae]{[0x11][0x8][0xffffff8c][0xffffff8b][0xfffffffa]q=/[0xffffffe3][0xffffffd0][0x14]C[0xffffff99][0xffffffc9][0xffffffce]Q[0x10][0xffffffa3][0xffffff97][0xffffff83]U[0x13][0xffffffd3][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0xffffff96][0xfffffff6][0xffffffc9][0x8]R[0x18][0xffffffd1][0xffffffd6]F0[0xffffffb5][0xffffffa2]{]3{X/[0xffffff96]b[0xffffffe8][0x17][0xffffffe9][0xffffffd8][0xfffffff8]46[0xffffff83][0xffffff98]][0x15][\r][0xffffff93][0xffffffea]'[0xffffffa3]M[0xfffffff3][0xffffffc9][0xffffffe3]|P[0xffffffab][0xffffffcf][0x1]e[0xffffffa5][0x7]C[0xffffffb7][0x5][0xffffffcf]F[0xffffffea][0xffffffe2][0xffffffe8][0xffffffe4]9[0xffffffae]DWoL[0xffffffe1][0xffffffe3]I[0xffffffde]'[0xfffffffe]E[0x13][0xfffffff0][\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "[0xffffff9c][0xffffffeb][0xffffffef][0xffffffb7][0xffffff83][0xfffffff7][0xffffffdb]N[0x1e][0xffffffcf][0xffffffca][0xffffffab]#[0xf]^[0xffffffbc]8o[0xfffffff2][0xffffffe5][0xffffffec][0xfffffff0]yU_[0xffffffd6][0x1][0xffffffb5][0xffffffbd][0x15]G[0xfffffff3][0x1a][0xffffffb9]Q[0xffffffc0]ec[0x8][0xffffffd0][0xffffffa5]\\[0xffffffde][0xffffffc1][0xffffff92]>[0xffffffdb]gb[0xffffffd9]N[0x8][0xffffffaf][0xffffffcf]9aM[0xffffff9e][0xffffff8c][0xffffffb6][0xffffff99][0xfffffff6][0xffffffe8]p[0x2] [0xffffffd4][0xffffffa7]n[0xfffffff7][0xffffff80][0x1b][0xffffff8c][0xffffffcd][0x1e][0xffffffcc][0xffffff8d][0xffffffb7][0x11][0xffffffbd][0xffffff87][0x18])[0xffffff93][0x1d]B[0xffffffa7]K[0xffffffd9]$[0xffffff86]Ey9[0xffffffc7][0x18]c)[0x10][0xffffffa0][0xffffffe3][0x4]k[0xffffffdf]qbr[0xffffff8c][0xffffff80][0x3][0xffffff9d]z[0x2]|[0xfffffff8][0xffffffba][0xffffffef][0xffffff9e] [0xffffff8c][0xffffffa7][\r]\[0xffffffe5][0xffffffcb][0xffffffb7]t[0xffffffe3]rF'[0x3]@H5z[0xffffffef][0xffffffaf]e[0xffffff8f][0xffffff99][0xffffffbd][0xffffff97]>[0xffffffaf][0xffffffdf][0xffffff88]y9[0xffffff9b][0xffffffc1][0x1e][0xffffffbd][0xffffffa1][0xffffff89][0xffffffbc][0xffffffa8][0xffffff9b][0xffffff85]hj[0x1a][0xffffffec][0xffffff8d][0xffffffef][0xffffff87][0xffffffe7][0xffffff9d][0xffffffd7][0xffffffa0][0xffffffd8]%[0xffffffc3][0xffffff8d][0xffffffde][0x3]o[0x1e][0xffffffe5]![0x1][0xffffffe0]jC[0x3]([0x14]B[0x13]`V[0xffffffb7]%[0x1f]}[0x1]_[0x1]:\[0x15][0xffffffff][0xffffffb9]][0xffffffdb][0xffffffb2][0xffffff8e]^[0xffffffb6][0xffffff81][0xffffff99]D&[0xffffff98][0xffffffe0]08[0x2]*[0x11][0xffffffab][0x2][0x14][0xffffffca][0x1d][0xffffffb6][0xffffffbb][0xe]D[0xffffff8d]$^[0xffffffae][0xffffffd6][0xffffffdd][0x1][0xffffff8a][0x18][0xffffffb8]A[0xffffffec][0x1f]#[0xffffffb1][0xffffffaa][0xfffffff2]i1[0xffffffaf][0xffffffab]P@z> z8[0xffffffcd][0x16][0xffffff97]EN[\r][\r][0xffffffed]/^[0x4][0xffffffc0]7(|[0xffffffd8][0x1]R[0x12]U w[0x19][0xffffff8a][\r]`[0xffffffa0][0xffffffc8][0xffffff9b]2[0xffffff8f]z[0xfffffffa]m,[0x11]\[0xffffffd5][0x12]#[0xffffffe7]][0xffffffb7][0xfffffffa]b2y[0xfffffffd][0xfffffffa]u[0xfffffffc][0xffffffda][0xffffffc4][0xffffffcc][0xffffffad][0xffffffb5][0xffffff94]r[0x12][0xffffffb8].[0x18][0xffffffc1]|Y[0xffffffbf]y2[0xffffff92]B[0xffffff8a]Di[0xfffffffe][0x1][0xffffffe2]P_[0xffffffda][0xffffffd4][0xffffff99]Vy7[0x17]@[0xfffffffc][0xffffff99][0xffffffd6]*[0xffffff96][0xffffff99]p6WI[0xffffffca][0xffffffab][0xffffffe1]K[\n]"
2023-05-21 20:33:11,299 [main] DEBUG wire - http-outgoing-0 << "%[0xf]Z[0xffffff9e][0xfffffff2]K[0xffffff89][0xfffffffe][0x13][0xffffffb0][0xffffffe5]v[0xffffffe4]/#qQV[0x15][0xffffffc9][0xffffffbf][0xffffffa4][0xffffffb9][0xffffffec][0xffffff9a][0xfffffffa][0x15][0xffffffe8][0x5][0xffffffcf][0xffffffd6][0xffffffc0]j[0xffffff9c][0xfffffff6][0xffffffa5][0xffffff8d][0xffffffbe][0x15][0xfffffffe][0x12][0xffffffae][0xffffffbd]*[0xfffffff1][0x5]}[0xffffff91][0xffffffdb][0xffffffe6]A[0xffffff83][0xffffff8c][0x1e]M[0x6][0xffffffdc][0xffffffee][\r][0x11][0xffffffda]QL[0xfffffff3][0xffffffd5][0xffffff93]QS[0xffffffc3][0x1e][0xffffffdf][0x7f][0xffffffa2][0xffffffb0]zc|[0xffffffac]3[0xffffffd1][0x7f][0xffffff9d]Y[0xffffffeb][0x5][0xfffffffe][0xffffff88][0x3][0xffffff89]y[0xffffffb2][0xffffff91][0xfffffff1][0xffffff8d][0xffffff96][0xffffff92][0xffffffee][0xffffffed]@[0xfffffff8]A[0xffffffc7][0xffffffe3][0xffffffb2][0xffffff9e]4[0xffffffc5][0xffffffac]l[0xffffff90][0xffffffaf]N[0xffffffde])[0x5]dr[0xffffffd7] >[0xfffffff9]P.[0xffffffdf][0xffffffc1][0xffffffe4][0x1d]W[0x13]'[0xffffffac][0xffffffcc][0xffffffb5]r[0xffffff82][0x7f]d[0xffffffe6]p[0xfffffffd]t[0xffffffd7][0x6][0x16][0xffffff86]n[0x1f][0xffffff91][0x7f]~[0xffffffcb][0xffffffbf][0xffffff80][0xffffff85][0xffffff94]BK[\r][0xffffffd2][0xffffffb6][0xffffffb1][0xffffffb7][0xffffff91]J[0xffffffe3]D[0xffffffa8],N[0xffffffd2][0xffffffc8]h|[0xffffff9e]j#c[0xffffffe7][0xffffff85]r2NS[0xffffffa1][0xffffffad][0xffffff85]t[0xfffffff9]XyA[0xffffffbc]p9U2[0xffffffce]L[0x14]+[0xb]0[0xffffffb1][0xffffff83]$[0xffffffc6][0xe][0xfffffffd]\[0xffffff9c][0x18]ac[0xb]`[0x12][0xffffffdf])[0xffffffd6][0xffffff93][0xffffffc5]6[0x5][0x1c]x[0xffffffb8][0xffffffe1][0xffffffda][0xffffffaa]^[0xffffff88][0xffffffb5][0xffffffc3][0xffffffb4][0xffffffc2][0xffffffa4][0xffffffb1]W[0xffffff91][0xffffffc1][0xfffffff3]T$2[0xfffffff6][0xffffffcf]u[0xffffffa2][0xffffff84][0xfffffff6]*[0xffffffb6]F[0xffffff84][0xffffffcb][0xffffffcc]=[0xffffff80][0x6][0xffffffef]'q[0xffffff81]4[0xffffffd3][0xffffffb2][0xffffff99]V[0xffffff85][0xffffff98][0xffffff82]s:A[0xffffff9f][0xffffffe9]5[0xffffff9e]8[0xffffff96]([0xffffffd9][0xffffffb0][0xffffffc1][0xffffffe1]`[0xffffffd6][0xffffff9d]0[0xffffffe6]G[0xffffffcd][0xffffffda]P[0xffffff84]([0xffffffe9]e[0xffffff82][0xffffffc3][0x1f][0xffffff9e][\r][0x5][0xfffffff1][0xffffffc1]xn[0xffffffcc][0xffffffde];[0x2][0xffffffca]A[0xffffffaa]'[0xffffff94][0xffffffaf]v2[0xffffff98][0xfffffffa]o[0xffffff82][0x17][0xffffffd8][0xffffff93][0xffffffee][0xfffffffb][0xffffffc5][0xffffff94][0xfffffffd][0xffffff84][0x13][0xffffff9a][0xffffffd6]#.[0x2]~[0xffffffaa]\[0xffffff8a][0x3]/3[0x7][0xffffffc4][0xffffff86][0xffffffce][0xffffffae][0xffffffdd]3[0xffffffe0]We[2[0xffffff8e][0xffffffcb][0x17][0x8][0x12][0xffffffdb][0xffffffa2]"
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << HTTP/1.1 200 OK
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Date: Sun, 21 May 2023 15:03:11 GMT
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Content-Type-Options: nosniff
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Content-Type: text/html;charset=utf-8
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Expires: Thu, 01 Jan 1970 00:00:00 GMT
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Cache-Control: no-cache,no-store,must-revalidate
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Hudson-Theme: default
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Referrer-Policy: same-origin
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Cross-Origin-Opener-Policy: same-origin
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Set-Cookie: JSESSIONID.ce58f1e1=node06myt7nvxzb5z9cu9kkea7k667.node0; Path=/; HttpOnly
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Hudson: 1.395
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Jenkins: 2.387.3
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Jenkins-Session: 0408bb8f
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Frame-Options: sameorigin
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Content-Encoding: gzip
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Content-Length: 6816
2023-05-21 20:33:11,299 [main] DEBUG headers - http-outgoing-0 << Server: Jetty(10.0.13)
2023-05-21 20:33:11,299 [main] DEBUG MainClientExec - ex-0000000001 connection can be kept alive for 3 MINUTES
2023-05-21 20:33:11,299 [main] DEBUG ResponseProcessCookies - ex-0000000001 Cookie accepted [JSESSIONID.ce58f1e1="node06myt7nvxzb5z9cu9kkea7k667.node0", domain:103.160.144.199, path:/, expiry:null]
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffe9][0x17]z[0xffffffcc]I[0xffffffa1][0xffffffc7][0xffffffeb][0x6][0xffffffb1][0xffffffd8][0x11]#[0xffffffbf][0x1][0xffffff82]p[0xfffffffb][0xfffffffd][0x0]m[0xfffffffd]4[0xffffff82][0xfffffff6]f[0xffffffb2],[0xffffffdb]y>[0xffffffdb][0xffffffe9]x[0xffffff88][0xffffffe2][0x6]/M[0xffffff9d][0x1e][0xffffffda][0xffffff83][0xffffffba]/[0xffffffd0][0xffffffef][0xffffffd3][[0xfffffff2]#r3[0xffffffd8][0x1][0x1f]g[0xffffffc2][0xfffffffa]S[0x5][0xffffff85][0xffffffc8][0xffffffb4][0xffffffb0].[0xffffffb6][0xffffff9b][0xffffffcf]M[0x13][0xffffffd5][\r][0xffffffbd][0xffffffa6]*[0xffffffa6][0xffffffd6])[0x1d][0xffffffab]Ld:[0xffffffce][0xffffffa0][0x16][0xffffffd2][0xffffffc4][0x9]u/[0xffffff89][0xffffffd5][0xfffffff0][0xffffffa9][0xffffffa0]M[0xffffffd0]BX[0x10][0x1d][[0x1f]e[0x6][0xffffffe0]5[0xffffffd4][0xffffffd4][0xfffffffb][0xffffffa8][0xffffffff]:[0xffffffb5][0xe]O[0xffffffa0][0xffffffc9]V[0x12][0xffffff84]I[0xffffff83]"[0xffffffda][0xffffff8c][0xffffffc0]7[0xffffffd8][0xfffffffc][0xffffffb2]P:[0xffffffa0]`t[0x1a][0xffffffeb]$[0xffffffb7][0xffffffc2][0xffffffd2][0x1c][0xffffffa9][0xffffffc8]A[0xffffffd5][0xffffffa3][0xffffffd8][0x0]7mc[0xffffff9d]n[0xffffffbe]h[0xffffffaa]h2L[0x12]A[0xffffffbb][0xffffff93][0xffffffec][0xffffffd4][0xffffffc0][0xfffffff5]@[0xffffff95][\r]L[0xffffffb7][0xfffffff6]Y[0xffffffac]0[0xffffff8f][0xffffff96][0xffffffc1]j[0xffffffe0][0xffffffbb][0xffffff8d]\[0xffffffc2][0xffffffa7]Y[0xffffff94][0x1]!*xl[0xffffffe0][0xffffffdd][0x8][0xffffffca][0xffffff8a][0xffffffe1]k[0x7][0xffffff91][0xfffffff6]"[0xffffff81][0xffffffd9][0xffffffdf]G[0x1][0x18]<Ui[0x12][0x10][0xffffffe9][0xffffffbf][0xfffffff8][0xffffffc8]s[0xffffff86]l[0x1a]a[0xfffffff9]&[0xffffffca][0x10]I+[0xffffff91][0xffffffc2]mh[0x18][0x18]O#[0xffffffc4][0xffffffae]0m*[0xffffffcd][0xffffff9e][[0xffffff8e][0xffffffc4]b[0xffffffbd][0x12][0xffffffbc][0x4]b[0xfffffff9]mx[0x11][0xffffffd8]@[0xffffffeb][0x7][0xffffff8b][0xffffffa8][0xffffff93]_n8[0xffffffbe]c[0xffffffac][0xffffffc4][0x14][0xffffffd6]b[0xfffffffe],N[0x1]![0xffffff82]QK[0x12][0x1]<[0xffffffb2][0x8]6Mk[0xffffffda]H[0xffffffaf][<[0x7][0x15][0xffffff82][0xffffffb1][0xffffff85][0xffffffb1][0x3][0xffffff8b][0xffffffcd][0xffffffa9][0xffffffca][0x14]iD[0x8]t[0xffffffda][0x9][0xffffffba][0xfffffffa][0xffffffde][0xffffffc8][0xffffffe2][0xffffffbb]u[0x16]T[0x2]1[0xffffff84]K[0xffffffe3]4[0xffffff8b][0xffffffc0]0m![0xc][0xffffffe0].g[0xffffffb2][0x11][0x1e]G[0xfffffff0][0xffffff8f]*[0x18]p[0xffffffe7]#[0xffffffc0][0xfffffff4][0xfffffffa]T[0xffffff83][0xfffffff5][0xffffff86][0xffffffb1][0xffffff81]"[0xffffffb7]5[0xffffffd7][0xffffff9e][0x11]?1[0xffffffe0][0xfffffff9][0xffffffcb][0xffffffce]p[0xffffffed][0x7]=[0xffffffdb]xp[0x13][0x19][0xffffffb6][0xffffff88][0xffffffbb]z}[0xffffffda][0xffffff8f]([0xffffffb7][0xfffffffa][0xffffffc6]p[0xffffffb6][0xffffff8f][0xffffff9c][0xfffffffe])z[0x15]b[0x4]i[0x11] [0xffffffb8]+[0xfffffff8]S[0xb][0x7f]#[0x7][0xffffffe6][0xfffffff1][0xfffffff2][0x1b]%[0xffffffed]a#[0xfffffffe][0xffffffff]Y[0x19][0xffffffb7][0xffffffd7][0x18][0xffffffda][0xffffffe6]*[0xffffffd1]S[0xffffffad]{[0xffffff9f][0x4][0xffffff8d][0x3]%[0xffffffa1][0x1c][0xc]7$[0xffffffe0]>3[0xffffff90][0x3]LQy[0x19]m[0xfffffffe][0x7f][0xffffffa6][0xffffffe8][0xffffffd7][0x12]7[0xffffffc7][0xffffffdf][0xffffff87][0xfffffffb]&6[0xffffffbf][0xffffffac][0xffffffcb][0xffffffe5][0xffffffcd][0xfffffff6][0xffffff83][0xffffffb8][0xffffffeb][0xffffff9e][0xffffffdc][0x2]K[0x4]xr;[0x1][0xffffff98][0xfffffff4][0x6][0xfffffff4][0xffffffde]9[0xfffffffa][0xffffffab][0xffffffe2]:l[0xffffff83]F[0xffffffed][0x1c][0xffffffd9][0xfffffffa]t[0xffffffdd]=[0xffffffbc][0xffffffb0]p[0xffffffcc][0xffffff87]U[0xffffffe5][0xfffffff9][0xffffffa4][0xffffffca][0xffffffaf][0xffffff81][0xffffffe2][0xffffffe4][0xffffffbc][0x1]FaS[0xffffffb7][0xffffffbd][0xffffff9f][0xffffffcf][0xffffffda]8[0xffffff8c][0xffffffdd][0xffffffc0]/[0xfffffff3]]r[0xffffffbb][0xffffffc9][0xffffffeb][0xfffffff6][0xffffffc0][0xe]BX[0xffffffe5][0xffffffe7],\[0xffffffed][0x1e][0x0][0xffffffdf][0xffffffba]z[0xffffffcb][0xffffffb8][0x17]/[0xffffffaa][0xffffffb2][0xffffffed]F7&[0xffffffeb][0xb][0xffffffa4][0xffffffef][0x1c][0x16]![0xffffffd2]X[0xffffff8c][0xffffff8e]e[0xffffff8f][0xfffffffb][0xffffffae]h[0xffffffbb][0xffffffcd][0xffffffdc][0xffffffb3][0xffffffa8]*[0x3][0xffffffec][0xffffff9b]#[0xffffffa6][0xfffffff3][0xffffffb2][0xffffff9a]A[0xffffff8e]FC[0xffffff97]I][0xffffffdd][0xfffffff4][0xffffff9e][0xffffffbb][0xfffffff9][0xffffffa3][0xffffffb0]Q[0xffffffd1][0xffffffe5][\r][0xfffffff3][0xffffffb5][0xffffff9b][0xffffffdd][0xffffff82][0xf]emc[0xb][0x1b]>4[0xffffffda][0xffffffb6][0xffffff8a][0xffffff83][0xffffffbb]([0xffffffda]+\ $[0xffffffca][0xffffff9b][0xfffffffd][0xffffffa4][0xffffffad][0xffffff9c][0x15][0xffffffe8][0xffffffba],[0xffffffaa][0xffffffe3][0xffffffa0]^[0xffffffbc]`[0xffffff8f][0xfffffff3][0xffffff83]1][0xffffffde]n[0xffffffe3][0xffffff86]a[0xc][0xffffff9b][0xffffffc4][0xffffff8d][0xffffffa4][0xffffff8b]m[0xffffff81]>[0x1b][0x17]/[0xffffff86]m[0xfffffffa][0xffffffcd][0xffffffbf][0xffffff83][0xffffff9b][0x1d][0xffffff85]i3&yUM[0xffffff96][0xffffffc5][0xffffffeb][0xffffffbf][0xffffffd4][0xffffffe7][0xffffffa3][[0xfffffff0][0xffffff8e]N[0xffffffd4]gu[0xffffffbb][0xffffffc0][0xffffffe0][0xffffffd7][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0x4]>[0xffffffa5][0xffffffa1][0xffffffd8]9#[0xffffffa5][0xffffffaf][0xffffffe0]?[0xffffff9e]Y[0x19]\[0xffffffef]7[0xffffffb8][0xffffffbf][0xffffff95]9[0x1d]'=[0x15]pt[0xfffffff2]][0xfffffff1]Z|[0xb]A>0$[0xffffffc3][0xffffffe5][0xffffffcd]h[0xfffffff1]c[0xffffffb2]2o[0xffffffaf][0xffffff97][0xffffffd3][0xfffffff9][0xf]E[0xffffff8d][0xffffffb0]y[0xfffffff2][0xffffff9e][0xffffff8c][0xffffffdc][0xfffffff7]D[0xc][0x9][0xffffffc5]'[0xfffffff2]I['d%b[0x7][0xffffffe7][0xffffffa7][0x11][0x2]3$?[0xffffffc8][0xffffff86][0xffffff90]D[0x19][0x4]d[0xffffffa9][0xffffff8e][0xffffff9c][0xffffffc3]'[0xffffffa2][0x1e][0xffffffdc][0xffffffea][0xffffffc8] 2bS[0xffffff94][0xffffffea]id"[0xffffffab][0x19][0xffffffa7]hf>h[0x11][0xffffffa1][0xffffffbd]E&[0xffffff85][0xffffffcc][0xffffffcb]:[0x11]F>$[0xfffffffd][0xfffffffb][0x10][0xfffffff7][0xffffffb2]s[0xffffffa8][0x6]q[0xffffff9a]D$[0xffffff83]8[\r][0xffffffe1][0xffffffa4][0xffffff8c][0x14][0xffffffc2]@[0xf]'[0xffffffab][0xffffff89][0xffffffa5][0xffffffb2]![0xffffffe8][0xffffffcc][0xffffff92][0xffffffd8]*[0xffffffac]Vz[0xffffffe1][0x11][0xffffffbf][0x9],.a[0xffffff86][0xffffffc7](C1[0x0][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffd7]s[0xffffff8d]U[0xffffffbb]d[0xffffffea][0x19][0xffffffec] [0xffffffcb]5H$#[0x4]eI[0xffffffdf])[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffff9d][0x10][0xffffff92][0xffffff9a][0xffffffd8]'[0xfffffff0][0xffffffb0][0xffffff88][0xffffffbd][0xffffff98][0xfffffff0]*[0xffffffe6][0xffffff98][0xffffff83][[0xffffffe7][0xfffffff7]')`l[0x12]`[0xffffffe5][0xffffff93]8[0xffffffb3]d[0xffffff9c][0x9]KD\[0x5]v`[0x1][0xffffff88][0xf][0xffffffa5][0xffffff8b][0xffffff90][0xffffffca][0xffffff86][0xffffff8b][0xffffff96]A\[0x1a][0xffffffe9][0x10]C&&[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffff8d][0xffffffa7][0x8][0xffffffdc][0x1c]k.:[0xffffffac]^1[0xffffff92]E[0x8][0xffffff8b][0xfffffff8][0xffffff81][0xffffffe9][0xffffffae][0xfffffff6]m[0xffffff92]0[0x8]CL[0xffffff8b][0xfffffffc][0xffffff99][0xffffff90][0x10]V<h5[0x1f][0xffffff85][0xffffff9f]Z[0xffffff92][0xffffff8a][0xe][0xffffff91])pNH[0xfffffffe][0xffffff94][0xffffffc1])2w0[0xffffffc1]&Q[0xffffff92]m.[0x18][0xffffffb6]*[0xffffffa9][0xffffff99]M$[0xffffffe0][0x8][0xffffff9a]-[0xffffffb8]'R[0x17]k[0xffffff86][0xffffffd5][0xffffff89]@D[0xffffff8c][0xffffffa8][0xffffff87][0xfffffff9]=X[0x9].f[0xc][0xffffffe4][0xffffffc3][0xffffffe5]7*[0xffffffb1][0xffffff9f]<G[0x7f][0xffffff98][0x1][0xffffffeb]M[0xffffffc8][0xffffffaf]m[0xffffffbe][0xffffffb6][0xffffff9e][0xffffffa8][0xffffffdf][0xffffffe0][0xfffffffa][0xffffffcd]z[0xffffffa2][0xffffffa0][0xffffffe9][0xffffffd0]j[0xffffff8f](Y[0xffffffd3]p90[0xffffffdf][0xffffff82][0xffffffb1][0xffffffc8]([0x18][0xfffffff7][0xffffff9e]1[0xfffffff1]L[0xfffffff5][0x15][0xffffffdc]Fn[0xffffff99]^[0xffffff88][0xfffffffe][0xffffff93][0xffffffa9][0x19];[0xfffffff8]9r[0xffffffb9]#O0[0xfffffffa]g[0xffffff8c][0xffffffab]"&9[0xffffff88][0xffffffaa]#$[0xffffff85][0xffffffd0][0x1b][0x13][0xffffff82]o<}P9[0xffffffeb][0xfffffffe][0xffffff82][0xfffffffe]+9[0xffffffd6][0xffffff9e](s$P[0xffffffcf]BJ;\+$[0xffffffea][0xffffffb8][0xffffffce][0xffffff9d][0x15][0xffffffae]'[0x4][0xffffffad][0x0][0xffffff92][0xffffff84][0xffffff90]i[0xffffffdb][0xffffffb9][0xffffffd6][0xffffffe8][0xffffff83][0x16]-}H[0x18][0x1e]"[0xffffffc6]_R[0xffffff8e][0xffffffc4]7%[0xf]j\[0xffffffff][0xffffffda][0xffffffd2][0xffffffbc][0xffffffc8][0xffffff97][0xffffffdc]{x[0xffffffb8][0x10][0xffffffff][0x9][0xffffffe2]*[0xffffffb6]{[*[0xffffff86]2[0x17][0xffffffcb]i[0xffffffcd][0xfffffffa][0xfffffff9][0xffffff93][0xffffffd1]_[0x7f][0xfffffffa]s[0xffffffe4]G[0x7f]:[0xfffffff9][0xffffffec].Y[0x1f][0xffffffa8][0xe][0xffffffe9]][0xffffffbd][0xffffffd9]m[0xffffffce][0xc][0xffffffb7]G[0xffffff85]|[0x7f].u/e[0x9]][0xffffffbe]xC|[0xffffff8f]uTY[0xffffff96]M[0xffffffde][0xfffffff4][0xffffffab][0xffffffe9]O[0xffffff87]^n[0x5]k_[0xffffffcc]6[0x12][0xffffffa2][0xe][0xffffffc5][0xffffff9a][0xffffffd7]Q[0xffffffb3][0xffffffe6]N[0x5]O[0xffffff99][0xffffffd5][0xffffffb3][0xffffffd9][0x1e][0xffffffc1][0x1][0xffffffaa]k[0xfffffff2]e[0xffffffcb][0xffffffda][0x1b][0xffffff97][0xffffff8c][0xffffffcb]*[0xffffffef][0xffffff8a][0xffffffdf][0xffffffc3][0xffffffc5][0xffffff98][0xffffffd4]'R[0xffffff8e][0x5][0x2][0x3][0x19][0xfffffffe][0xfffffffd][0xffffffe1][0x1d][0xfffffff2][0xffffffbc][0x13][0xffffffd0]C[0xffffff86][0xffffffee][0xffffffd9][0x7f]X[0xfffffff7][0xc][0xffffffce]i[0xffffffac][0x8]_[0xffffff89]S[0xffffffba]<)[0xffffff93][0xffffffd4][0xffffff9b]1[0x1c][0x15][0xffffffec][0xffffffba]N[0xffffff99][0xfffffff3]&[0xffffffb0][0xffffffe6]F;[0xffffff95][0xffffff8d][0xffffff95][0xffffff83][0xf][0xfffffff0][0xffffff99]S[0xffffff8a][0xffffff9e],N][0xffffff96]J7V[0x1e][0xffffffe6][0x1f][0x11]ej[0x1][0xffffffc2][0xffffffc0]'H[0xffffff97]ffL[0xfffffff0][0xffffffd2]ye|(Yi[0xffffffeb][0xffffffd3]d[0xffffffac][0x11][0x2])[0xffffff93]j[0xffffffa9]B[0xfffffff9][0xffffffd8]8L[0xffffff82][0xffffffd6][0xffffff84][0xffffffb5][0x14][0xffffff9b][0xffffffa5][0x9] [0xffffffa4][0x19]|[0xffffffad][0xffffffd5]Y6[0xffffffd6])B[0xffffff88]T[0xffffffa3][0x15][0xfffffffa][0x11]'[0x9][0xffffffdc][0xffffffbe][0x1e]ko[0x10]a[0xffffffd8]T[0xffffffa6]B[0xffffffc3]-g[0xffffff99]v[0xffffffda][0xffffffa1][0xffffffab][0xffffff82]c[0xffffffc2]X[0xffffffe0][0xffffffa0][0xffffffe1]N[0xffffffad]Q[0xffffffde][0x3][0x2][0xffffffe6][0x0]f[0xffffffde][0xffffffc3]s[0xffffffa1]G[0xffffffe6][0xffffff80][0x3]@[0x18][0xffffffb8]/[0xffffff95][0xffffffa4][0xffffff8a]Ei,[0xffffff8e]4[0xffffffd0][0x12][0xffffffeb][0x1][\r][0xffffffb4][0xffffffc3][0x2][0xffffff9c][0xffffffd1][0x16][0xffffffab]MS (3[0x6]b ;`%[0xe][0xffffffad][0xffffff89][0xffffff89]M[0xffffffe2]C[0xfffffff9][0xfffffff9][0x6][0x1][0xffffffcf]n6[0xfffffffc]]<[0xffffffb3][0xffffffac][0xffffff85]+[0xffffff87][0x9][0x0]M[0xffffffc1]5[0xffffff9e]Z[0xffffff86]82u2[0x1d][0xffffffb3][0xffffff94][0xffffff9d]8[0xb][0xffffffd2][0xffffff89][0xffffffd0]O[0xffffff9a][0xffffffd4]a-[0xffffff9e][0xffffffc5],[0xffffff80][0xffffffa0][0xffffffb9][0xfffffff5][0xffffffb1][0xffffffc3]Z[\r][0xffffffc6]g2[0xffffff96][0x16][0xffffffa3][0xffffffc4][0x19]h[0xffffff82][0xffffffc5][0xffffff9a][0xc]}[\r]+E[0xffffffa9]EdxjRD[0xffffff97][0x12][0xffffff8b]b+[0xffffffdc][0xffffffb4][0xffffffd3][0x12][0xfffffffe][0xffffffd8][0xffffffb8][0x14][0xffffffc3]$fB++[[0xffffffd6][0xffffffb0][0x11][0x0]$[0xfffffff0]4[0xffffffa4]O[0x6][0xffffffa4][0xfffffff8][0xffffffcc]zm[0xffffffd3][0xc]m [0xffffffa5]4.C[0xffffffb4][0xffffff89][0xffffffb5]zGf[0xffffff8c]9[0x4][0xffffff96]Lz[0xffffffb4]Z[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0x4][0xffffffe0][0xffffffe8][0xffffffd0][0xffffffd7]9[0xffffffad][0xffffffa4][0x1]VZ[0xffffffc6][0xffffff89][0xffffffd6]$[0xffffffb0][0x1][0x7] [0xffffffaf]Y[0xffffffe0]F[0xffffff96][0xffffffc5]>[0x5][0xffffffe5]m@KJ[0xffffffef]i[0x13][0xffffffb3]8[0xfffffff3][0xffffff9e]4[0xffffff80][0x8][0xffffff80][0x19]2c1[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "SXc=[0xfffffff0][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffc1][0xffffff97][0xffffffb3]X[0xffffffc0][0xffffff99][0xffffffe6][0x1c][0xffffffe8]k[0xffffffcd][0xffffffd8]*nJ8[0xffffff83][0xffffff88][0xffffffe3][0xffffff94]2[0xffffff93][0xffffffb9]L[0x3][0xffffffae]e[0xffffffb8][0x8]"JV[0xffffffb1][0xffffffd2]X[0xffffff93]2~l[0xffffff81][0xf][0x17][0xffffff8e]HDc[0x1d][0xffffffa9][0xffffffc1]z[0xffffffad][0xffffffa6][0xfffffff0][0xffffff84][0xffffffd1][0x14][0xc][0xc]b?F[0xffffffd9][0xffffffc6][0xffffffb2][0xffffffbc]fA7[0xffffffcc][0xffffff8b][0xfffffff5]ZZe[0xffffff88]-H[0x0][0xffffff89][0xf][0xffffffb7]g[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffc2][0xffffffc2][0xffffff95][0xffffff80][0xffffffc2][0xffffffbc]?U,XJ[0xffffff8f]%[0xffffff87]{[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "t[0xffffffe6]po[0x2]L[0xffffff88] [0xfffffff7]k[0xffffffb8][0xfffffff1][0xffffff96]H[0xffffffd7][0xffffffcf][0xffffff9d][0x10]sJP[0xffffff96][0xffffffb9]T[0xffffffaa][0xffffff80]#[0xffffffd5],[0xffffffb1][0xffffffa1]"[0x7][0x1d] [0xffffff92]XN[0xffffffa6][0xffffffad][0xffffff83][0xffffffdc]+[0x16]`![0xffffffc9]I[0x12][0xffffffd6][0xe][0xffffffb1]A>q[0x6][0xffffff95][0xffffffa2][0x8][0xffffff82]$[0xffffff81]P[0x14]F[0xffffffa3][0xffffffa9]{Xpb[0x1c][0xffffffd4][0xffffff97]D[0xffffffc5][0x5]T[0x15][0xffffffd1]'[0xffffffd8][0xffffffa2]2[0xffffffa8]5[0xffffffe8]o[0xffffffa9][0x2][0xe]1[0xffffffb5][0x7][0xfffffff1][0x12][0xffffff88][0xffffff9b]1[0xffffff81]Y>[0xfffffff3][0x10][0xffffffa1]3r[0xffffffde]eN[0xffffffeb][0xffffff9e][0xffffffb3]hM=[0xffffffd6][0xffffff89][0xe]`7[0xfffffffe]sA[0xc][0x12][0xb]@[0x8]Z[0xffffff81][0xf]D[0xffffffd5]f>[0xffffffb4][0xffffff82][0xffffff83][0xffffffa9][0xffffffa3][0xffffffc7][0xffffff87]|[0xffffffc3]R[0xffffff99] [[0xffffff88][0xfffffffa]O[0xffffffad]E[0xffffffb6][0x0])[0xffffffe0][0xffffffe8][0xffffff84]E_[0xffffff8d][0x15][0xffffff87]TH&[0xffffffb0][0x1f][0x10][0xffffffad][0x4][0xfffffff2][0xffffffee][0xffffffb4]a8[0xffffffca][0xffffff85]e[0xffffffe0][0xb]D [0xffffffa1][0xffffffc0]9[0x16][0xffffffae][0xffffffcf]4[0x9][0xffffff97][0xffffffb9][0xffffffc4][0xffffffa4]A[\r]LP[0xffffff83]S\[0xffffffc8]L[0x1b][0xffffff93][0xffffffa5]&[0xffffffe8][0xffffff8c][0xffffffed]u&[0x2][0x15]0[0x19]L[0xffffff8f][0xffffffee]5[0xffffffcc][0xfffffff7][0x1a]FIw[0xffffffc0]L[0xffffffb3];[0xffffff94][0xffffffd1]R[0x19][0xffffffe1][0x14]$[0xffffffa4][0xffffffd7][0xffffffb2]+[0xffffffc4]/[0xffffff93][0xffffffb0]A`<[0xfffffff8]c2[0xffffffc8][0xe]Z[0x1d]40[0xfffffff1][0xe][0xffffffeb][0xffffff85][0xfffffff2](X[0xffffffb1][0xffffff84][0xffffff8d][0x10]dH[0x19][0xffffffd2][0xffffff91]3J[0x14][0xffffffe8]l[0xffffffa1][\r][0xffffffb4][0x12][0x6][0x2][0x11][0x14][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xfffffff8][0xffffffc0][0xe]B[0xffffff9a][0xffffffc6][0x1a]Asj[0xffffffbc]f[0xfffffff2][0x2][0xffffffb6]d[0xffffffc0][0xffffff97][0xffffffe6][0x11][0xfffffff1][0xffffffb4][0xffffffcd]$X+[0x8]"[0x5][0xf][0xffffff95][0x1d][0xffffff87][0xffffffac]C:[0x9][0xffffffc1]9[0xffffffe3][0xffffffa8]LADR[0x18]^[0xffffffe6]Q[0xffffff89][0xffffffa2][0xffffff95]f&[0xffffff99][0xffffffc2]n[0x1]9[0xffffff9a][0xffffffe6][0xffffffc4]I[0xffffff8b][0x9]ik-x[0xffffffe1][0xffffffd8][0xffffff9a][0x10][\r]@[0xffffffe4][0xffffff9a][0xfffffffd]f[0xffffffcd][0xffffffb4]I[0xffffff88][0xffffffeb]NI[0xffffff9f][0x14]V[0xffffffca]C[0xffffffee]`[0xffffffe7]Y[0xffffffd0][0xffffff97])k[0xffffffdb][0x1]w[0xffffff9f][0xffffff85][0xffffffbe][0xffffff90]|[0xf][0xffffffa6][0x19][0x6][0xfffffff5][0xffffffd0]h[0xffffffcc][0xffffff8c][0xffffffbe]L[0xe]|[0xffffff96]RR[0xffffffc8]([0xffffff9f][0xffffff91]pcd[0x1][0x12][0xffffffc8]K[0xffffffae][0xffffff9a]\[0xffffffa5]q[0xffffffb4][0xffffffc9][0x18][0xffffffd4][0xffffffc4][0x0][0x8][0x5][0xffffffc2]@[0xb][0xffffff9f][0x0][0xfffffffb][0xffffff9b][0xffffffa9]14[0x8][0x13];[0xffffff8a]1E[0xffffffc5][0xfffffff6][0xffffffa2][0xffffffc2][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffb6][0xffffffc4]p[0xffffff8a][0xffffff94][0x3]Ji:[0xffffff86][0x0][0xffffffab][0xffffff8c][0xfffffff2][0x11][0xffffffb2]#[0xffffff93][0xffffffda][0x14][0xffffffba]0[0x6][0xffffffdd][0x1]F[0xffffffc3][0xffffffcb][0x8][0x17]L-[0x16][0xffffffec][0xffffffd9][0x17][0xffffffba][0x6]t *[0xffffffc8][0xffffffbc]4[0xffffffc4][0x1a]fn[0xc]{[0xffffff88]1[0xffffff99][0xfffffff5][0xe]|[0xffffffa6][0xffffffd1][0xffffff85]R[0x11]_[0xffffffd8]>[0x13][0xfffffff0][0x2]9![0xffffffcc][0x10]xL[0xffffff87]a[0xffffff98]O*f0[0xffffffc4][0xffffffd1]Pc1[0x5][0xffffff8d]/[0xfffffffc][0xffffffc2]Y[0xffffffd0][0xffffffc4][0xffffffd4][0xffffffa7]J[0xffffff83][0xffffff90]@[0xffffffc2][0x18][0x6][0xffffffc9][0xffffffa7]Ak[0xffffffbd][0xffffff82][0xffffffae][0xffffff8e][0xffffff99]+[0xffffffa9][0x4]rL][0xffffffb6]0t[0xfffffff4]Rc(?[0xffffff84][0xffffffc3][0xffffffc1][0xffffffe8][0x6]C@[0xffffffe7]`[0xffffffa1][0xffffffb1][0x14]=[0xffffff9a][0xb]8!B[0xffffff84][0xffffffff]t[0xffffff89][0xfffffff5]t[0xffffff8a][0xffffffcc][0x15]a[0xffffffb3][0xffffffd4][0x18])([0xffffffa8][0x5][0xffffff86]@[0xffffffec]psFkd[0xffffffad][0xffffff83][0x8][0xffffffe2][0xffffffee][0xffffff94][0xffffffa6]*3[0x14][0xffffff9b]1[0xffffffcb]8d[0xffffffb4][0xffffff86][0xffffffc3][0x1a][0xffffffd3][0xffffffa1]@k[0xffffffad][0x1a][0xffffff8c][0x1e][0xffffff97][0x1]S[0xffffff94][0xfffffff4]n[0x11][0xffffffa3][0xffffff9c][0x4][0x9][0xffffffa8]B[0xffffffb0][0xffffff91][0xffffffdc]d[0xffffffa1]![0xffffff86][0xffffffd5][0xfffffff6][0xffffffc4]_B^3[0xffffffee][0x1c]9[0xffffffba]([0xb][[0xffffffcd][0xffffffc5][0x1a][0x4][0xffffffad]P[0x5]`[0x0][0xffffffd2]a[0xfffffffe],[0xffffff98]G[0xffffffa4][0xffffff8c]P=[0xffffffc2][0xfffffff5]T8[0x9][0xffffffdf]A*[0x2]s%%[0xb][0x15][0x14]3[0xffffffe8]V[0x16][0x8][0xffffffee]!c[0xffffffdc][0xffffffb0][0xffffffd7]P8[0x3]K[0xffffff9c][0xffffff92];[0xffffff92]m[0xffffffa0]mp([0x10][0x9][0x15][0xffffffd8][0xe]$ [0x4][0xffffffc1]'[0xffffffc1][0xfffffffb]@[0x11]a[0xffffffa3]A[0x15][0xb]>r[0xffffffe3][0xffffff88][0xffffff9e][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffe2][0xffffff88];[0xffffffb6]f[0x10]~d[0xffffffd2][0xffffffc1][0xffffffa1][0xffffffd1][0xffffffc0]C[0xffffff92][0xffffffb0][0xfffffff4][0xffffffd3][0xffffffe0][0xfffffff5]RDI[0xffffffe8][0x4][0xffffffa7][0xffffffe7]S[0xffffffd2]T[0x4][0xf][0xffffffc9][0xffffff89][0xffffff80][0x13][0xffffffe4][0x1b][0xffffffce][0x16]^'8S[0xffffff8c][0xffffffa5]d[0xffffff80][0xffffffb1][0x1a][0xffffffd3][0xffffff81]Yg[0xffffffc1][0xfffffff3][0xffffffa6][0xffffffc1][0xfffffff3]R[0xffffffee]a{[0xffffffa0][0xc][0xffffffa7][0xffffffc1]K[0xffffff9b][0xffffffe0][0xffffffa5][0xffffffa9]"I[0xffffffe2]-[0xffffffb7][0xffffffe2](\&xt[0xffffffea][0xffffff93][0xffffff82]S[0xffffff86][0x1c][0xffffff85][0xffffffbe][0xffffffd6][0xfffffff5][0xffffffc1]@[0xffffff92]&[0xfffffffd]he%[0xffffff8d][\r]uT[0xffffffc2][0x3][0xffffffd2]db&L[0xf]5[0xe][0xfffffffa][0xc][0xffffff9d]IC[0xffffffa2][0xffffff95][0xffffffd0][0xffffff9b]C([0xffffff82][0xfffffff2]K::[0xffffff92][0xffffff8a][0xfffffff6][0x1e]*[0x2][0xffffff91][0xffffff80]M[0xffffffa7][0xffffffd7][0xfffffff3]4c[0xffffff90][0xfffffff8]8M[0xffffffa0].[0xffffffb0]6[0xffffffd2][0xffffffc1][0xfffffff7][0xffffff82][0xffffffc2][0xffffffdc]>[0xffffffa7][0xffffffa8][0xffffffc1][0xffffff93][0xffffffc3]4i[0xf]a[0xffffff83]w[0x0][0xffffffad]<[0xffffffe4][0x10]Zj[0x19][0xffffff8d]A35[0xffffffe2][0x4][0xffffffcb][0x5]'[0xffffffb0][0xffffffc2]^[0xffffff87][0xffffffa8][0x9]~[0x2]a[0xffffff81][0xf][0x1a][0xffffff8d][0x1c][0xffffffce]H[0x4]_[0xffffffc1][0x14]Zh[0xffffff87][\r]KS[0xffffffa0][0xffffff98][0xffffffb5][0xffffffc1]j[0xffffffc2]a[0xffffffd0]![0xffffffdc][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "u[0xfffffffe][0xffffffce]Z3[0xffffffc3][0xffffffcd][0xffffffbd][0x8]wr9D[0xffffffcd][0xffffffbc][0xffffffb8][0x7f][0xffffffb2][0xfffffff3],[0xffffffe4][0x1b][0xffffffe2][0xffffffd8]![0xffffffa6]_#[0xffffffdb])&[0xffffff8b][0xffffffeb](l[0xffffffae][0xffffffff][0x16][0xfffffff3]v[0x1e]b[0x11][0xffffffe8]d[0xfffffffd]H\[0xfffffff3][0x5][0xffffffb8]m[0xffffffa2][0xffffff84]Pb[0xffffffef][0xc][0xffffff9b][0xffffffc7][0xffffff83]f[0xffffffe8][0xffffffd7]\[0xfffffff7][0xffffffdf][0xffffff9f],[0xffffffe5][0xffffffbe][0xffffffbd][0x13][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "G[0x1d]#[0xfffffff6]s[0xfffffff6][0x1b][0xffffffd6][0xffffff8f][0xffffff94]?[0xffffff85][0xffffff98]8[0x1e]D[0xffffffe2][0xffffff86]ZfY*c[0xffffffba][0x1][0xffffffa3][0xffffffac][0x7f]F[0x14];Wn*#FP[0xffffff8e][0xffffffbb][0xffffff9c]F[0xffffffe3][0xffffff93][0xffffffb5][0xffffff85]i8[0x4][0xffffffc3]=Yn[0x1b][0xffffffe3][0x7f]t[0xffffffbc][0xffffff8a] [0xffffffc9]~[0x1a]6We[0xffffffd8]mvY[0x4][0x1b][0xffffffc0][0xffffff8a]*f[\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffff97][0xffffffbb][0xffffff9d][0xffffffcd][0xffffffcf][0xffffffee]%q[0xffffffd7][0xffffff82]G9[0xffffffef][0xffffff96][0xffffffb5][0x1b][0xffffff9b]-[0xffffffcc][0xffffffc6][0xffffffff]k][0xffffffac]wI[0xfffffff1][0xffffffee][0xfffffff5][0xffffff9a][0xffffff8b]j][0xffffffce][0x4]wF[0xffffffa2][0xffffff8b]&_[0x14][0xffffffcc][0xfffffff2][0xffffffa6][0xffffffaf][0xffffffa2]E[0xffffffbd]n[0xb]Q[0xffffffbc][0xffffffc1][0xffffff83]Yq[0xffffffe3]\eS[0xffffffbf]>l[0xffffff98][0xffffffd6]U[0xfffffff4][0xffffffa6][0xffffff8d][0xffffffb4][0xffffffed][0xffffffe1]l[0xffffffcf]j[0x1e][0x1e][0xfffffffe][0xffffffdb]>[0xffffff89][0xffffff82]ll[0xffffffaa][0x4][0x1][0xffffffb1][0xffffff9b][0xffffffc7][0xffffffa2]&]}yY[0x15][0xffffffe0]P[0xffffff95][0xffffffaf][0xffffffda][0xffffffe2]O[0x1c][0xfffffffd][0xffffffed][0xffffffec][0xffffffc9][0xfffffffe]J[0xffffff86]s[0xffffffda][0xffffffd3][0xffffffa1][0xffffffcb][0xffffffde][0xffffffd2][0xffffff86][0xffffff86][0x7f][0xffffff91][0xfffffffd][0x11]j[0x2]E[0x14][0xffffffce]X(o[0xffffffab][0xffffffa1]>[0xffffffc3][0xffffffbf][0x8][0x7f][0xffffff87][0xffffff87]yn[0xffffffb2][0x7f][0xffffffc7][0xffffffb1][0xffffff9e]5[0xffffff9b][0xffffff83][0xffffffb9]X[0x9][0xffffff8f]2[0xffffffef]3G[0xffffff8c][0xffffffee][0xffffffb5][\r][0xffffffca][0xfffffffc][0x7f]BY[0xc][0x1f][0xfffffff7][0xffffffdb][0x2][0xffffffed][0x1a][0xfffffffc][0xffffffcd][0xfffffff6]'[0xffffffe3][0xffffffbb][0x10][0x15]Y[0xfffffffe]d[0x4][0xffffffb2]~W[0xf]G[0xffffffeb]E[0xffffffb9][0x14][0xffffffdd][0xffffffbc][0x10][0xffffffff] [0xffffff8b]c[0xffffff90]yFZ7[0xfffffffc] [0xffffffba][0xffffffb7][0xffffffd7][0xffffffd7][0xffffffbf][0xffffffad]{\[0xffffffc6]A[0xffffffbf][0xffffffcb][0xffffffa2][0xffffff8b] OM[0xffffffd1][0xffffffce][0xfffffff9]][0xffffff80]'[0xffffffd3][0xffffffed][0xffffffab][0xffffffbf][0xffffffe1]0S[0xfffffffe]2[0x7f][0xfffffff3][0xffffffe5]n[0xffffffec]=[0xffffffcf]4[0xffffff91][0x10][0xffffffc3]A[0xfffffff9][0xffffffc3]Y[0x1e][0xffffffb6]%\[0xffffffbc])[0xffffffa6][0xffffffeb][0xffffffae]n[0xffffffda][0xffffffdf][0xffffff96]^n[0xffffffb4][0xfffffff0][0xffffffd1][0xffffff84][0x7][0xffffffc1][0xffffffd6]][0xffffffd1]L[0x1e][\r][0xffffffca][0xfffffffa][0xfffffff5][0xffffff80][0xffffffb1]x[0xffffffde][0xffffffe5][0xffffffdd][0xffffffba][0xffffffdd][0xffffffb7]<[0xffffffef]P[0xffffffdd][0xffffffbd][0xffffffb5][0xfffffffe][s?[0xffffffbe][0xffffffe6][0xffffff82]v[0xffffff97]@b[0x15][0xffffffae]6.[0xffffffd6][0xffffffc8][0xffffffd1][0xffffffc1]=[0xffffffa8][0xfffffff4][0x1f]7Z[0xffffffc2][0xffffffd9][0xfffffff1][0xffffffdd][0xffffffe0]^[0xffffffd7][0xffffff9a][0xffffffe3]*[0xffffff9b]W[0xffffffe5]%[0xffffffd7]J[0xffffff97][0xffffffbd]=:}[0xffffffc5]co[0xffffffd3][0xffffffbc][0xffffff8a][0xffffffc2][0xffffffd3]/DW[0xffffffaf]F'[0xffffffaa]W[0xffffffdd][0x1b][0x0]N[0xffffffbe][0xffffff9d]qo[0xffffffe3][0xffffffd8][0xffffff93][0xffffffb7][0xffffffb5]~[0x4]|[0xfffffff4]G[0xffffffc7][0xffffffe7][0xffffff9d][0x6][0xffffffe9][0xffffffb6]n[0xffffffdf][0xffffffdb][0x1e]}[0xffffffbd][0x1d]z[0xffffffdc][0xffffff9f][0xffffff87][0x3][0xffffffc0][0xfffffffd]Y[0x6][0xffffffaa][0xffffffdd]p[0xffffffc6]}[0xffffffff][0xffffffbd][0xffffff8b][0xffffffc3][0xffffff93][0xffffff9d][0xffffffd4][0xffffff88]hQ[0xffffffb4]m[0x7f]$[0x7f]{$[0xffffffe2][0xffffffba][0xffffffed][0xffffff8a][0xffffffc5][0xffffffae][0xfffffffd]p[0xffffff92][0xffffffbd][0xfffffff7][0xffffffe1]n[0x1d]V[0xfffffff9]][0xffffffb4][0xffffffc8][0xffffff9b]K q^w][0xffffffbd][0xffffff88]d[0xf][0xfffffff5][0xffffff88][0xfffffff8]n[0xffffffcf][0xffffff9b][0xffffff84]w?[0xffffffdb][0xffffff88][0xffffffe2]|[0xffffffa4]-[0xffffff8a][0xffffffca]%[0x19]w?[0x17]4X[0xffffffde]bV[0xe][0xffffffef][0xffffffe3][0xffffffec]P[0xffffffbd][0xffffff9f][0xfffffffd][0xffffffcd]o[0xffffffae][0xfffffff0][0xffffffe0][0xffffff85][0x10][0xffffffc2][0xfffffffd][0xffffffea]-[0xffffffab][0xffffffef][0xfffffff1][0xffffffbe][0xffffffb1][0xffffff8c][0x8][0xffffffa1][0x19][0x4]/o[0xffffffae]o[0xffffffd8][0xffffffd7][0xffffffe1][0x0][0xfffffffe][0xffffffe6][0xffffff8d][0xffffff90][0x7f][0xffffffc1]=[0xffffff86]C[0xffffffcb][0xfffffffa][0xffffffd1][0xfffffff7][0x1d]v;[0x7f][0x19]Bg[0xffffffe9]3e[0xffffffc7]I[0xffffffca][0xffffff8c][0x15]y[0xffffffa5]g[0xffffffb9][0xffffff88][0xffffffb7]H\Y[0xffffffe0]d)[0xffffff97][0xffffff87]E[0xffffff91][0xffffffa8][0x1b][0xffffffa4][0xffffffca][0xffffffd6][0xfffffff8]8M[0xffffff9d][0xffffffd5]n[0xffffff8c],Tk[0xffffff93]8[0xffffffad]X[0xfffffff6][0xffffffe3][0xffffff91]O[0xffffff8d]Tu[0xffffffec]-[0xffffffab]e[0xffffffda][0x19][0xffffffa4][0xffffffb5]I2[0xffffffce]|[0xffffff8c][0xffffffe6],ae(a[0xffffffdd]D[0xffffffc7]&[0x3]T[0xffffff87]A[0xffffffbc][0xffffffe7]Aq[0xffffffe7][0xffffffac][0xffffffe3][0xffffffa1][0xfffffffe][0x1e][0xffffff86]D[0xffffffab][0xffffff95]qj[0xffffffb5][0xffffffe6][0xffffffa0][0xffffffdd][0xffffff84],[0xffffffbf] [0x9][0x7]&H`[0xffffff8f]7[0xfffffff3][0x10]%$[0xffffffdb][0xffffffb1]"[0xffffff89][0xffffffc5][0xffffffe9][0xffffffcc]$[0x19][0xb]B^[0xffffffc7][0xffffffda][0xffffffb0][0xffffffdc]<[0xe])[0xffffffae]T[0xffffffc8][0xffffff9f][0xffffff85]J[0x15]S[0xfffffff5]D[0xfffffffb][0xffffffb1]E[0xffffff8e][0xffffffe2]1[0xffffffce][0xffffffd9][0xffffffb0][0x3][0xffffff82][0xffffffec];5[0xe][0xffffffad]Y,[0xffffff91]2[0xffffffc3][0xffffffc3][0xffffff9c][0xffffffdd][0xffffffd1][0xffffffcc][0xffffffc3][0xffffffb2]Ff[0xffffffa9][0x2][0xc][0x16]\[0xffffffbd][0xfffffff1]L[0xffffffa4][0xffffffd1]l2/[0xffffff8d]N[0xffffffd0][0x1c][0xfffffff6]Y[0xffffffbc]J[0xffffffc3][0xffffffce][0xffffffbf]D[0xf][0xffffff99][0xffffff86][0xffffffce])[0xffffffb1]K[0xffffffd8][0xffffff9a][0xffffff80]<[0xffffff96][0xffffff85]f[0xffffffb4]Z[0xffffffcb][0xffffffea]P[0xffffffa8][0xffffffc3]"[0xffffffbb]7[0xffffffa1][0xffffffb8][0xffffffcd][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "S[0xffffffa6]XON\[0xffffff9c]e[0xffffff96][0xffffffb5]6[0xffffffb4][0xffffff9a][0xffffff98][0xffffffb5]Co[0x9][0x2][0x17][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffff92][0x14]ZA[0xffffffde]Dk w[0xffffffbc][0xffffff99][0xffffffe7][0xffffff86][0xffffffd3]Tg.[0xffffff94]]Y< 7[0xffffff90][0xffffffaf])[0xffffffd6][0xffffffd5]}:6 [0xffffffbf][0xffffffd5][0xffffffc6]s3G[0xffffffb2],[0xffffff93][0xfffffffa][0x4][0xffffff9d][0xffffff91]h[0xffffffa5][0xffffffce][0xffffffa5][0xffffff99][0xe][0x7][0xffffff90]S[0xffffffc9][0xffffffea][0xffffffd0][0xffffff98][0x1b][0x1],[0x1e][0xffffffe8][0xc]4:[0xffffffde][0xffffffcc][0xffffffda][0xffffffb0][0x5][0xffffff85][0xffffffa5]:[0xffffff90][0x19][0xffffff9e]:[0xffffffd6]I[0xffffffca][0xffffffe2][0xffffffdd][0xffffff9e][0xffffff80][0xffffffb1][0xffffffe6]a[0xffffff8d][0xffffff91][0xffffffa0]3[0xffffff84][0xfffffff0]PB[0xffffffff]~[0xffffffef]][0xffffffb0]}[\r][0xffffff80]J[0xfffffffc]R4[0xfffffff5][0xffffff91][0xfffffff2][0xffffffc4][0xffffffaa][0xffffffae][0xffffffae][0x19]q[0x1c]Mb[0xffffff8f][0xffffffee][0xffffffcd][0xffffffb1][0xfffffff4][0xffffffe4]2[0xffffff96][0xffffff8d][0xffffffc6][0xffffffa1][0xffffffee][0xffffffa7][0xffffffc2][0xfffffff5][0x1f]DSw|l[0xffffff93][0xffffffcd]~[0xffffff9d][0xffffffd8][0xffffff8d][0xffffff89][0xfffffff6][0x7]E[0xfffffffb][0xffffffa3]Fb[0xffffff85]X[0xffffffa7]k[0x19]W[0xfffffff8][0xffffffa1]U[0xffffffb0][0xffffffde]?\[0xffffffb2][0xffffff82][0xffffff9e][0xffffff81][0xfffffff9][0xffffffc6][0xffffffed][0xffffffb7]B[0x8][0xffffff8f][0xfffffff4][0xffffffdd]oe-t[0xffffff80][0xffffffe0][0xffffffc2][0xffffff96][0x3][0xb]6[0xfffffffb][0xffffffad]{[0xffffffb3]m[[0x3]}[0x6][0xffffff82][0xffffffdc]U[0xffffffb5]y:[0xffffff9b][0xffffff89]=#[0x7f]+[0xffffffcc][0xffffffda]z[0xffffffab][0x3][0xffffff97]U,V[0xffffffdd]u[0xffffffc4]#[0xffffffa6]Et^[0xffffffd5]S[0xffffff96]I[0xffffffe6][0xffffffea][0xffffffe4]oE[0xffffff85]h[0xffffffb8][0xffffffe0][0xffffffbb][0xffffff8b]C[0xffffffa5][0xffffffe7]w[0xffffff8f]'h[0x7f][0xffffffbc]:[0xfffffff9]i^[0xffffffb6][0xffffffe1][0xffffffb5][0x3][0xffffff81][0xffffffef][0xffffffd7]sxuq][0xffffffaf][0xffffff9b]M?[0xfffffff1][0xffffffb2]>G{[0xffffffc9][0xffffffd7][0xffffffa4][0xb]1+[0xffffffdb]U[0xffffff95]_[0x17][0xffffffb3]X[0xfffffffc]T[0xb][0x4][0x4][0x10][0xffffff87][0xffffffbc][0xffffffe9][0xffffff8a][0xffffffd9][0xffffff98][0xffffff83][0xffffffc4][0x14][0xffffff9e][0xffffffa3]E[0xffffffe3]z[0xffffffc5][0xffffff9e]]S[0xffffffc2][0xffffffbd]l[0xffffffdf]<[0x16][0x8][0xffffffbc]C[0xffffffef][0xfffffffe][0x1e]>C[0xffffffe4][0xffffffa2][0xffffffad]/[0xffffffba][0xffffffd7]9[0xffffffe6]\5[0xfffffff5][0xffffffcb]b[0xffffffda][0xffffffc5][0xffffff8f][0xffffffdb][0xfffffffe][0xffffff87].[0xffffff8e]-hx[0xffffffc4]%[0xffffffe9][0xffffffed][0xffffff89]\[0xffffffc4][0xffffff80][0xffffffcf][0xf][0xffffffa1][0x6][0xfffffff4]o[0x2][0xffffffc6]r[0xfffffff5][0xffffffc9][0xffffffe3]u[0xfffffff5][0x16][0xffffffb8]Q8[0xffffff81][0xffffffba][0x7f][0xffffffe0]t[0xffffff88]H[0xffffffb6][0xffffff94][0xffffffdc]d[0x9]7[0xffffffce]<[0x1e]t[0xffffffe3][0xffffff89][0xffffffd4][0xffffffbe]:E.[0xffffff9e]6[0x5][0x7f][0xffffffb0]''[0x19][0xffffff8f][0x16]G[0xffffff86][0xffffff97][0xffffff9f]6[0x1e][0xfffffff6][0xffffff9f][0xfffffff9][0xffffffb6][0xffffffc4][0xffffffa7]?$[0x19]N[0xfffffff7][0xffffffeb]j/[0xffffff8d][0x10][0xffffffe1]`G[0xffffffa6][0xfffffffb][0x3][0xffffff93]R[0xffffffde]:[0xffffffa8][0xffffffb1]=[0xffffffaa];Y[0xfffffff3][0x1c][0xffffffee][0xffffffc0][0xffffffaa][0xffffff93][0xfffffff7][0x12][0xffffff93]^2[0xfffffff3][0xffffffdb][0xffffffb2][0xfffffff9]Q[0xffffff85]c[0xffffff9b]v.[0xfffffff9][0xffffffbe][0xfffffff2][0xffffffbb]Ed[0xffffff83][0xffffffd6]R@[0x9][0xffffff97][0xffffffdd][0xffffffbf][0xffffffa5][0xffffffe4]C[0xffffffa4][0xffffffe4]>[0xffffffec]Y^[0xffffff94][0xffffff97][0xffffffeb][0xffffffa6]8[0xffffffad][0xffffffea][0xfffffff5][0xffffffac][0xffffffbd][0xffffff97][0x12]o[0xffffff86]@v[0xffffffa6][0x1c][0xfffffff5]o[0x1e]}Z[0x1e][0xffffffbd][0xffffffeb][0xffffffbd][0xffffffd2]=[0x5][0xffffff8e]6[0xffffffa7][0xfffffffe][0xfffffffa]C[0xfffffff8]OF/[0xffffffce][0xffffffab][0xffffff9c][0xffffffe9][0xffffffd0][0xffffffdd]l[0x15]7[0xffffffda][0xffffffe6]E[0xffffffb5][0xffffff8a][0xfffffff6][0xfffffff9]}V[0xffffffe4][0xffffffcd]R,j2[0xfffffffc][0xffffffbc]^wG[0xffffff9c][0xffffffd9]oW[0x2][0xfffffffa][0x3][0xffffffa8][0xc]h[0xfffffff4]<r6GL[0xffffff9e][0xffffff85][0xffffff97][[0xffffff95][0xffffff8c][0x10]}[0xffffffcc][0xffffff9d][\r]/[0xfffffff0]('[0xffffffe7][0xffffff87]O[0x5][0xffffff9f]b[0xffffffc4]3n[0xffffff8b][0xfffffff1]E[0xffffffb2][0xffffffc4][0xffffffcd][0xffffff95][0xffffffe7]v[0xfffffffe][0xffffffa7]??{[0xfffffffb][0xffffff80][0xffffffde]]v[0xffffffff]v[0x8][0xffffffd4][0x7f]^[0xffffffd4]5l[0xffffffee][0xffffffc1][0xffffffeb][0xffffff8b]}[0xffffffd3][0xffffffcd][0xffffffa2][0xffffffe2]A[0xffffff89][0xfffffff2][0xffffffc8]O2[0xfffffff4][0xffffffa3]^[0xffffffbc][0xffffffb8][0xffffffa8][0xffffff8a]7[0xffffffd1][0xffffffad][0xffffffa2][0xffffffe4]a[0xffffff97][0xfffffff0][0x1d][0xffffff95][0xffffffb3]h[0xffffffef]=[0xfffffff8][0xfffffffe][0x15][0xffffff96][0xffffffed][0xffffffdc]=v[0xffffffdb][0xffffff9f]ry[0xffffffb4][0xfffffffb]9[0xffffffa1]G[0xffffff9b]:[0xffffffe5][0xffffffdd]o[0xffffff9d][0xfffffff6][0xffffff87][0x1][0xffffffc3]/Y=[0xffffff9d]-[0xffffffca]%[0xffffffc5]0[0xffffffbc][0xffffffe1][0xffffffff][0xffffffac]^[0xffffff96][0xffffffac][0xffffffb1]|ULk[0xffffffb4][0xffffffd4][\r][0x7f][0xffffffa2]0[0xfffffffc][0xffffff9e]W[0xfffffff8][0xffffffcd][0xffffffc3][0xffffff83]*B[0xffffffb8][0xffffff9f][0xffffffdc][0xfffffffb]M[0xffffffd7][0xfffffff7][0xffffff9a][0xfffffff3]A[0xffffff85][0xffffffe3][0xffffffbd]7X[0xffffffb7][0xffffffec][0xffffffd8][0xffffffbd][0xffffffd7][0xffffffb2][0xffffffdf][0xfffffff8][0xffffff8e][0xffffffd7]V[0xffffffdf]9:?6[0xffffffaa]/yl[0xffffffea]%[0xffffff9f]o+[0xffffffba]?[0xffffff85][0xffffffd8][0xffffff97]![0xffffffa3][\n]"
2023-05-21 20:33:11,312 [main] DEBUG wire - http-outgoing-0 << "[0xffffffbf][0xffffffb5]pU[0xffffff88][0xfffffff0]k4ew-[0xfffffff2][0x3]J[0xffffffc0]4[0xfffffff4][0xffffffa4][0xffffff88][0xfffffff7]'[0x1e]*+[0xffffff9b]1[0xffffff98]j[0xffffffa8][0xffffff8d]m^[0xffffffb3]8J[0xffffffcd][0xffffffa7][0xffffffab]r[0xffffffb2][0x19][0xfffffff2]C[0xffffffbd]Z[0xffffffaf]N[0xffffffb7]U[0xffffffb0][0x7f][0xffffffa2][0xfffffffd][0xffffffe0][0xffffffb1][0x7][0xffffff9e][0xffffffb0][0xffffffe2]i[0xfffffffa]*[0xffffff89]y[0xffffffa4][0x3][0xffffffd9],[0xffffffcf][0xffffffcd]DJ+d[0xffffff9b]yh[0xc][0x1f][0xffffffe1][0xffffffd5][0xffffffd1][0xffffff84]oJ[0xffffffba][0xffffffb9][0xffffffbc][0xffffffdd][0xe]O[0xffffff91]`[0xffffffc0][0xffffffaf]z[0x8][0xffffffff]m[0xffffffaf][0xffffff8c][0x1a]/[0xfffffff9][0xffffff8a]-[0xffffffcf][0x12][0xffffff93][0x18][0xfffffff0]b2[0xffffffea]o[0xfffffff4][0xfffffff0][0xffffffd2]b[0xffffffb8][0xfffffffc][0xffffffe5][0xffffffe0]D?_[0xffffff98]P![0x15]7i8[0x13][0xffffff80]Ue.f[0xe]m[0x1c][0xffffff8f]7[0xfffffffa][0xfffffff0][0xfffffffa]}[0xfffffff8][0xfffffff9][0x0]?[0xffffff8d]0[0x5][0xffffffda]xR[0xffffff89]G[0xfffffffa][0xfffffff9][0xffffff92]([0xf][0xffffffe5][0x18][0x13][0xfffffff1]0[0xffffffa4][0x12][0xffffffce][0x6]0H[0xffffffe0][0xffffffd1]'[0xffffff8b][0xffffff95][0x11]<[0xffffffbd][0xffffffc9][0xffffff97]ny[0xffffffbc]/[0xffffffeb][0xffffffc1]8;UH[0xffffffcf]u[0xffffffe4]bd[0xfffffff0][0xffffffc8][0xffffffe4]c[0x13]e6[0xfffffff6][0xffffffa9][0x8]@"[0x1e]Pt[0xffffffe6][0xffffffd7]"[0xffffffeb][0xffffffb0][0xffffffbd][0xffffffbb]g[0x9]![0xfffffff1][0xffffff83][0x1a][0xfffffff0][0xffffffd7]<f[0xfffffffc][0x1][0xffffffa9][0xffffffba]A[0xffffffd3]yY[0xffffffed][0xffffffed]D[0xffffffed][0xffffffb9][0xffffffc7][0xfffffffd][0x1]S[0xffffffcc][0xffffffd4][0xffffff85]J[0xfffffffb][0xffffffce][0xffffffda][0xffffffdf][0xffffffa1][0xffffffe4][0xfffffffd]k[0xffffff81];[0x18]C[0x1c]~[0xffffffc7][0xffffff8e][0xffffffc3][0xffffff81]}[0xe][0xffffffaf][0xffffffce][0xfffffff3]Gy[0xffffffbb][0x17][0xfffffff9][0xffffffaa]<[0xfffffff8][0xffffffe9][0xffffff95]M[0xffffffa4][0xffffff81][0xfffffff6][0xffffffc9][0xffffffe8][0xffffffe4][0xffffffc7][0xffffffaf][0xffffff9f][0xffffffff]$[0xffffff9e][0xfffffffe][0xfffffff0][0xffffffed][0xfffffff1][0x1f]o9[0x2][0xfffffff3]vS[0x14][0xffffffbd][0xffffff9e][0xffffff97][0xffffffc8][0xfffffff4][0x6]3[0xfffffffa][0xffffffe2]j0@[0xffffffe1][0xfffffff7][0xffffffbb][0xffffff96]5[0x7f][0xffffffaa][\r][0xffffffee]iY[0xffffff87][0xffffffc2]yC[0xffffff93][0xfffffff5][0xffffffd6]P[0xffffffe7]V<[0xffffffb3][0xfffffff9][0xffffff99][0x19]1[0xfffffffc]j[0xffffffd1][0x1d][0xfffffff5][0xffffff80]I[0xffffff8f][0x14].[0xfffffff8]^ _A[0xffffffe5][0xffffffaf][0x13][0xffffffff]?[0x13][0x3]l[0xffffff90][0xffffffb9]X[0x0][0x0]"
2023-05-21 20:33:11,312 [main] DEBUG InternalHttpClient - ep-0000000001 releasing valid endpoint
2023-05-21 20:33:11,312 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 releasing endpoint
2023-05-21 20:33:11,312 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection http-outgoing-0 can be kept alive for 3 MINUTES
2023-05-21 20:33:11,312 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection released [route: {}->http://103.160.144.199:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:33:11,312 [main] DEBUG PoolingHttpClientConnectionManager - Shutdown connection pool GRACEFUL
2023-05-21 20:33:11,312 [main] DEBUG DefaultManagedHttpClientConnection - http-outgoing-0 close connection GRACEFUL
2023-05-21 20:33:11,312 [main] DEBUG PoolingHttpClientConnectionManager - Connection pool shut down
2023-05-21 20:33:11,343 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:11,343 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,343 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 20:33:11,547 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 20:33:11,579 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 20:33:11,594 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 20:33:11,594 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 20:33:11,594 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:11,594 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:11,610 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 20:33:11,610 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 20:33:11,610 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 20:33:11,610 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:11,610 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,610 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,610 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,610 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55d60d3
2023-05-21 20:33:11,610 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:33:11,610 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,673 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,673 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:11,673 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:11,673 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,673 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1397567149 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,673 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,673 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:11,673 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,673 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:11,673 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:11,673 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:11,673 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:11,673 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:11,673 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$mBjRwy4gxV86CeVNz28EI..F0uVYLD3X58GbyfeLF7yG1twVPGajq, role=USER, email=null, username=test}
2023-05-21 20:33:11,673 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:11,673 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:11,689 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:11,689 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:11,689 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2bd3faf0
2023-05-21 20:33:11,689 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).username) 
2023-05-21 20:33:11,689 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).role]

2023-05-21 20:33:11,689 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:11,689 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,689 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,689 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))@1958273732 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,689 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:33:11,689 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)): test
2023-05-21 20:33:11,689 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@3ebd549b
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$mBjRwy4gxV86CeVNz28EI..F0uVYLD3X58GbyfeLF7yG1twVPGajq]
2023-05-21 20:33:11,689 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:33:11,689 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#test
2023-05-21 20:33:11,689 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@d202f4a
2023-05-21 20:33:11,720 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:11,720 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,720 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:11,720 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:11,720 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900).role]

2023-05-21 20:33:11,720 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:11,720 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,720 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,720 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900))@898919847 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,735 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)): admin
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@56e52961
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$2P6xdR9VadwXGDJNpKNFt.l7.aqMH3mqj635yAyWGuXTFarqIPOSS]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#admin
2023-05-21 20:33:11,735 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408a8f4f
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)): tester
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@118db290
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$.4JCe8KWLZq2sG./5mVJTusqq3j2/DhHR54k2znQjX5SAppqyVcJ6]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#tester
2023-05-21 20:33:11,735 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408a8f4f
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)): user
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@51fe7abb
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$DbLaUoWqnNJpcLvgPzOfRus9wL70eBMEE0afHZTpdwCvj8xJ0OypC]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#user
2023-05-21 20:33:11,735 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408a8f4f
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)): test
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@2e2fefc4
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$mBjRwy4gxV86CeVNz28EI..F0uVYLD3X58GbyfeLF7yG1twVPGajq]
2023-05-21 20:33:11,735 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:33:11,735 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44861796460900)#test
2023-05-21 20:33:11,735 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@408a8f4f
2023-05-21 20:33:11,735 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,735 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:11,735 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,735 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:11,735 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,735 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1237779233 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,735 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,735 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,751 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:11,751 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,751 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,751 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,751 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,751 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55d60d3
2023-05-21 20:33:11,751 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:33:11,751 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,814 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,814 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:11,814 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:33:11,814 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,814 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@38123129 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,814 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,814 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:33:11,814 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,814 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:11,814 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:11,814 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:33:11,814 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:11,814 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:11,814 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$uanHuTtXE87EiU11J3UrxeJD6jFBEfhqAFvMYSU1T5qXFScIy/Lqu, role=USER, email=null, username=test1}
2023-05-21 20:33:11,814 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:33:11,814 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:11,814 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:33:11,814 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,814 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,814 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,814 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,814 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@55d60d3
2023-05-21 20:33:11,814 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:33:11,814 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,830 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:33:11,830 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:33:11,830 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@fcad0bd
2023-05-21 20:33:11,830 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).username) 
2023-05-21 20:33:11,830 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300).role]

2023-05-21 20:33:11,830 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:33:11,830 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:33:11,830 [main] DEBUG results - Initializer list
2023-05-21 20:33:11,830 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300))@289161482 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:33:11,830 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:33:11,830 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)): test
2023-05-21 20:33:11,830 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@345bbc4
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$mBjRwy4gxV86CeVNz28EI..F0uVYLD3X58GbyfeLF7yG1twVPGajq]
2023-05-21 20:33:11,830 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:33:11,830 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44858692865300)#test
2023-05-21 20:33:11,830 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70028eb7
2023-05-21 20:33:11,830 [main] DEBUG TransactionImpl - begin
2023-05-21 20:33:11,830 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:33:11,830 [main] DEBUG TransactionImpl - committing
2023-05-21 20:33:11,830 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:33:11,830 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:33:11,830 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 20:33:11,830 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:33:11,830 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:33:11,830 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$mBjRwy4gxV86CeVNz28EI..F0uVYLD3X58GbyfeLF7yG1twVPGajq, role=USER, email=null, username=test}
2023-05-21 20:33:11,830 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:33:11,830 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:33:12,062 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 20:33:12,062 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@65057d96] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6aa4f45]
2023-05-21 20:33:12,062 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 20:33:12,062 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 20:33:12,066 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:ba4b69bb-5428-43b1-9650-928a0f0d29c8 user=ADMIN: (connection evicted)
2023-05-21 20:33:12,066 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 20:34:10,454 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 20:34:12,191 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 20:34:12,238 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 20:34:12,285 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 20:34:12,301 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 20:34:12,301 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 20:34:12,364 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:34:12,584 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 20:34:12,584 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 20:34:12,600 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 20:34:12,694 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:34:12,710 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ef35d1f
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@385d9880
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@385d9880
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@497c267a
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@497c267a
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@38f553d0
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@38f553d0
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@507a53b6
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56b972a8
2023-05-21 20:34:12,725 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56b972a8
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@206421da
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@206421da
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7e37cfcf
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@596d15c
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1261fd82
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5dea9867
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1de36da2
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2e4c4373
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33dc36d5
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3afca969
2023-05-21 20:34:12,741 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3c744de9
2023-05-21 20:34:12,741 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192] into BootstrapContext; was [null]
2023-05-21 20:34:12,741 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192) [was null]
2023-05-21 20:34:12,741 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2591f310] into BootstrapContext; was [null]
2023-05-21 20:34:12,741 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4bbddcc8] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3aac3f34]
2023-05-21 20:34:12,757 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192]
2023-05-21 20:34:12,757 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192]
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 20:34:12,788 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 20:34:13,133 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:34:13,133 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:34:13,133 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 20:34:13,165 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:34:13,197 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:34:13,213 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5521f423] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7852d8ed]
2023-05-21 20:34:13,244 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 20:34:13,244 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,260 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,260 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 20:34:13,276 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,292 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,308 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,308 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:34:13,308 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:34:13,324 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,324 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 20:34:13,324 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 20:34:13,340 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,354 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,356 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,356 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:34:13,356 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:34:13,356 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 20:34:13,356 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 20:34:13,356 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 20:34:13,372 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN
2023-05-21 20:34:13,372 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - Building property id
2023-05-21 20:34:13,372 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 20:34:13,372 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 20:34:13,372 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 20:34:13,372 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 20:34:13,372 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 20:34:13,372 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 20:34:13,372 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 20:34:13,372 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 20:34:13,372 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - Building property url
2023-05-21 20:34:13,372 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:34:13,372 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 20:34:13,372 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:34:13,372 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 20:34:13,372 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:34:13,372 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:34:13,372 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:34:13,372 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 20:34:13,372 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 20:34:13,387 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:34:13,387 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:34:13,387 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property email
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property password
2023-05-21 20:34:13,387 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 20:34:13,387 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 20:34:13,387 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 20:34:13,387 [main] DEBUG PropertyBinder - Building property role
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 20:34:13,387 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 20:34:13,387 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 20:34:13,387 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 20:34:13,454 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 20:34:13,513 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:34:13,513 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 20:34:13,513 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@29a08daf, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire290015139473605169\surefirebooter686837183464323839.jar C:\Users\nisha\AppData\Local\Temp\surefire290015139473605169 2023-05-21T20-34-08_439-jvmRun1 surefire15677639642807990903tmp surefire_013800412456437656554tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@64bc291b, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\.m2\repository\io\github\nishadchayanakhawa\test-companion-library\1.0.0\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire290015139473605169\surefirebooter686837183464323839.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.17384470066115351069, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=2264, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.17384470066115351069, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@13e771e6, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 20:34:13,513 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 20:34:13,529 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@692e4a35] under count; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2fbe13f3] under every; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2bc239ff] under any; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@69530799] under position; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@231e72e1] under overlay; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3059e367] under trim; prior registration was null
2023-05-21 20:34:13,607 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5881e498] under cast; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cc226b0] under collate; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4eb016a7] under extract; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@e93f8b4] under ifnull; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7f4358b8] under pad; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2c1e726b] under str; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@438e6a90] under format; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@be906aa] under timestampadd; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6009e8ab] under timestampdiff; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13253ac7] under current_date; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@503224b4] under current_time; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@583eecde] under current_timestamp; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52f85a6c] under local_date; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6831b1f6] under local_time; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29673fc0] under local_datetime; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6906e2e] under offset_datetime; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16ab7faa] under instant; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5e971f6a] under sql; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@76968f03] under count; prior registration was org.hibernate.dialect.function.CountFunction@692e4a35
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@54c6506d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6831b1f6
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@29673fc0
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29cdc8ba] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@69530799
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e74dac2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@80b741] under format; prior registration was org.hibernate.dialect.function.FormatFunction@438e6a90
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1e2ea153] under listagg; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@209a490a] under mode; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4f9e5d0e] under percentile_cont; prior registration was null
2023-05-21 20:34:13,623 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32862888] under percentile_disc; prior registration was null
2023-05-21 20:34:13,638 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e6285d3] under rank; prior registration was null
2023-05-21 20:34:13,638 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f856849] under dense_rank; prior registration was null
2023-05-21 20:34:13,638 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@93235f1] under percent_rank; prior registration was null
2023-05-21 20:34:13,638 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6185cb4d] under cume_dist; prior registration was null
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 20:34:13,638 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 20:34:13,638 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5521f423] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@671d7871]
2023-05-21 20:34:13,755 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:34:13,755 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:34:14,019 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:34:14,019 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:34:14,067 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 20:34:14,067 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 20:34:14,067 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 20:34:14,067 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:34:14,067 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 20:34:14,067 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:34:14,067 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 20:34:14,067 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 20:34:14,082 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:34:14,082 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:34:14,129 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:34:14,129 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:34:14,145 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:34:14,145 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 20:34:14,145 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:14,145 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:34:14,145 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 20:34:14,145 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:14,145 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:14,145 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:34:14,145 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:14,177 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 20:34:14,177 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 20:34:14,255 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 20:34:14,255 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 20:34:14,271 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:34:14,271 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 20:34:14,271 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16a7a6a
2023-05-21 20:34:14,271 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: bcf599f8-169f-4efe-9629-67b47f6e3263 (<unnamed>)
2023-05-21 20:34:14,271 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 20:34:14,413 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 20:34:14,556 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:34:14,649 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:34:14,918 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
2023-05-21 20:34:14,934 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{PUT [/api/user]}: addUser(User)
	{GET [/api/user]}: getAllUsers()
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 20:34:14,934 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/setting/usermanagement]}: getUserManagementPage()
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
2023-05-21 20:34:14,934 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 20:34:14,934 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 20:34:15,060 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 20:34:15,517 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:15,517 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:15,597 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:15,597 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:15,597 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600).role]

2023-05-21 20:34:15,597 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:15,612 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:15,628 [main] DEBUG results - Initializer list
2023-05-21 20:34:15,628 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44925595598600))@1075809828 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:15,628 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:34:15,644 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:15,707 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:15,707 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:15,707 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:15,722 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:15,722 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:15,722 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:34:15,722 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:15,722 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:15,722 [main] DEBUG results - Initializer list
2023-05-21 20:34:15,722 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@999419150 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:15,722 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:15,738 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:15,738 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:15,738 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:15,738 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:15,738 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:15,738 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:15,754 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:15,754 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$r/tuvHRVd8Rrz3EQ4jjJ.OuPRm5Qu7Eg.LaRqMmDl.wLjt78UCmSi, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 20:34:15,757 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:15,757 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:15,817 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:15,817 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:15,817 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:15,817 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:15,817 [main] DEBUG results - Initializer list
2023-05-21 20:34:15,817 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@767522397 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:15,817 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:15,817 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:15,817 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:15,817 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:15,817 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:15,817 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:15,817 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:15,817 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:15,817 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$23ra0jiAB/PFt3ty1ZSmreOzEhrZzMz7xHr5CgLMBg/RTtWQG2Dna, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 20:34:15,817 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:15,817 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:15,864 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:15,864 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:15,864 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:15,864 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:15,864 [main] DEBUG results - Initializer list
2023-05-21 20:34:15,864 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@146181755 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:15,864 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:15,864 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:15,864 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:15,864 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:15,864 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:15,864 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:15,864 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:15,864 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:15,864 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$uzQ4ZlMDt1bPwZv67AzYb.MtjlqeOL4w7n0OL6Vj3Nep06eaa4eZ2, role=USER, email=user.com, username=user}
2023-05-21 20:34:15,864 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:15,864 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:16,476 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:16,476 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:16,476 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@617560bd
2023-05-21 20:34:16,476 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).username) 
2023-05-21 20:34:16,476 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).role]

2023-05-21 20:34:16,476 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:16,476 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:16,476 [main] DEBUG results - Initializer list
2023-05-21 20:34:16,476 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))@1624082285 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:16,476 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:34:16,476 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)): admin
2023-05-21 20:34:16,476 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@1e6d6473
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$r/tuvHRVd8Rrz3EQ4jjJ.OuPRm5Qu7Eg.LaRqMmDl.wLjt78UCmSi]
2023-05-21 20:34:16,476 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:34:16,476 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#admin
2023-05-21 20:34:16,476 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@32b2a8d8
2023-05-21 20:34:16,649 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:16,649 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:16,649 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:16,649 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:34:16,649 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:34:16,649 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:34:16,649 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:34:16,649 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:16,649 [main] DEBUG results - Initializer list
2023-05-21 20:34:16,649 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)@506316570 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:34:16,649 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:34:16,649 [main] DEBUG AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:16,649 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:16,649 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:16,649 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:16,649 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:16,649 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:16,649 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:16,649 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting{apiKey=11ee84e97dbc4da1ddc4f3bdde05d3bfc8, id=1, url=http://103.160.144.199:8080, username=nishad}
2023-05-21 20:34:16,649 [main] DEBUG SQL - insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:34:16,649 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:16,665 [main] DEBUG InternalHttpClient - ex-0000000001 preparing request execution
2023-05-21 20:34:16,665 [main] DEBUG RequestAddCookies - ex-0000000001 Cookie spec selected: strict
2023-05-21 20:34:16,681 [main] DEBUG RequestAuthCache - ex-0000000001 Auth cache not set in the context
2023-05-21 20:34:16,681 [main] DEBUG ProtocolExec - ex-0000000001 proxy auth state: UNCHALLENGED
2023-05-21 20:34:16,681 [main] DEBUG ConnectExec - ex-0000000001 acquiring connection with route {}->http://103.160.144.199:8080
2023-05-21 20:34:16,681 [main] DEBUG InternalHttpClient - ex-0000000001 acquiring endpoint (3 MINUTES)
2023-05-21 20:34:16,681 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint lease request (3 MINUTES) [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2023-05-21 20:34:16,681 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint leased [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:34:16,696 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 acquired ep-0000000001
2023-05-21 20:34:16,696 [main] DEBUG InternalHttpClient - ex-0000000001 acquired endpoint ep-0000000001
2023-05-21 20:34:16,696 [main] DEBUG ConnectExec - ex-0000000001 opening connection {}->http://103.160.144.199:8080
2023-05-21 20:34:16,696 [main] DEBUG InternalHttpClient - ep-0000000001 connecting endpoint (3 MINUTES)
2023-05-21 20:34:16,696 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connecting endpoint to http://103.160.144.199:8080 (3 MINUTES)
2023-05-21 20:34:16,696 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connecting to /103.160.144.199:8080
2023-05-21 20:34:16,759 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connection established 192.168.68.110:52953<->103.160.144.199:8080
2023-05-21 20:34:16,759 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connected http-outgoing-0
2023-05-21 20:34:16,759 [main] DEBUG InternalHttpClient - ep-0000000001 endpoint connected
2023-05-21 20:34:16,759 [main] DEBUG MainClientExec - ex-0000000001 executing GET / HTTP/1.1
2023-05-21 20:34:16,759 [main] DEBUG InternalHttpClient - ep-0000000001 start execution ex-0000000001
2023-05-21 20:34:16,759 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 executing exchange ex-0000000001 over http-outgoing-0
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> GET / HTTP/1.1
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> Authorization: Basic aW52YWxpZDppbnZhbGlk
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> Accept-Encoding: gzip, x-gzip, deflate
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> Host: 103.160.144.199:8080
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> Connection: keep-alive
2023-05-21 20:34:16,759 [main] DEBUG headers - http-outgoing-0 >> User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "GET / HTTP/1.1[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "Authorization: Basic aW52YWxpZDppbnZhbGlk[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "Host: 103.160.144.199:8080[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "Connection: keep-alive[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)[\r][\n]"
2023-05-21 20:34:16,759 [main] DEBUG wire - http-outgoing-0 >> "[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "HTTP/1.1 401 Unauthorized[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "X-Content-Type-Options: nosniff[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "Set-Cookie: remember-me=; Path=/; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "WWW-Authenticate: Basic realm="Jenkins"[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "Cache-Control: must-revalidate,no-cache,no-store[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "Content-Type: text/html;charset=iso-8859-1[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "Content-Length: 450[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "Server: Jetty(10.0.13)[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "[\r][\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<html>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<head>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<title>Error 401 Unauthorized</title>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "</head>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<body><h2>HTTP ERROR 401 Unauthorized</h2>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<table>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<tr><th>URI:</th><td>/</td></tr>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<tr><th>STATUS:</th><td>401</td></tr>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<tr><th>MESSAGE:</th><td>Unauthorized</td></tr>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<tr><th>SERVLET:</th><td>Stapler</td></tr>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "</table>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "<hr/><a href="https://eclipse.org/jetty">Powered by Jetty:// 10.0.13</a><hr/>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "</body>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG wire - http-outgoing-0 << "</html>[\n]"
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << HTTP/1.1 401 Unauthorized
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << X-Content-Type-Options: nosniff
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << Set-Cookie: remember-me=; Path=/; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << WWW-Authenticate: Basic realm="Jenkins"
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << Cache-Control: must-revalidate,no-cache,no-store
2023-05-21 20:34:17,042 [main] DEBUG headers - http-outgoing-0 << Content-Type: text/html;charset=iso-8859-1
2023-05-21 20:34:17,058 [main] DEBUG headers - http-outgoing-0 << Content-Length: 450
2023-05-21 20:34:17,058 [main] DEBUG headers - http-outgoing-0 << Server: Jetty(10.0.13)
2023-05-21 20:34:17,058 [main] DEBUG MainClientExec - ex-0000000001 connection can be kept alive for 3 MINUTES
2023-05-21 20:34:17,058 [main] DEBUG ResponseProcessCookies - ex-0000000001 Cookie accepted [remember-me="", domain:103.160.144.199, path:/, expiry:Sun May 21 20:34:17 IST 2023]
2023-05-21 20:34:17,058 [main] DEBUG HttpAuthenticator - ex-0000000001 Authentication required
2023-05-21 20:34:17,058 [main] DEBUG HttpAuthenticator - ex-0000000001 103.160.144.199:8080 requested authentication
2023-05-21 20:34:17,058 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001 Authentication schemes in the order of preference: [Negotiate, Kerberos, NTLM, Digest, Basic]
2023-05-21 20:34:17,058 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Negotiate authentication scheme not available
2023-05-21 20:34:17,058 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Kerberos authentication scheme not available
2023-05-21 20:34:17,058 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for NTLM authentication scheme not available
2023-05-21 20:34:17,058 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Digest authentication scheme not available
2023-05-21 20:34:17,058 [main] DEBUG HttpAuthenticator - ex-0000000001 Selecting authentication options
2023-05-21 20:34:17,058 [main] DEBUG BasicScheme - ex-0000000001 No credentials found for auth scope [Basic 'Jenkins' http://103.160.144.199:8080]
2023-05-21 20:34:17,058 [main] DEBUG InternalHttpClient - ep-0000000001 releasing valid endpoint
2023-05-21 20:34:17,058 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 releasing endpoint
2023-05-21 20:34:17,058 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection http-outgoing-0 can be kept alive for 3 MINUTES
2023-05-21 20:34:17,058 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection released [route: {}->http://103.160.144.199:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:34:17,058 [main] DEBUG PoolingHttpClientConnectionManager - Shutdown connection pool GRACEFUL
2023-05-21 20:34:17,058 [main] DEBUG DefaultManagedHttpClientConnection - http-outgoing-0 close connection GRACEFUL
2023-05-21 20:34:17,058 [main] DEBUG PoolingHttpClientConnectionManager - Connection pool shut down
2023-05-21 20:34:17,074 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:34:17,074 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:34:17,074 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1e497b0d
2023-05-21 20:34:17,074 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000).id) 
2023-05-21 20:34:17,074 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000).apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000).url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000).username]

2023-05-21 20:34:17,074 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000)) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:34:17,074 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,074 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,074 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000))@848838120 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:34:17,074 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:34:17,074 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:34:17,074 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000)): 1
2023-05-21 20:34:17,074 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000)#1] : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting@2da427e6
2023-05-21 20:34:17,074 [main] DEBUG results - Extracted JDBC value [1] - [11ee84e97dbc4da1ddc4f3bdde05d3bfc8]
2023-05-21 20:34:17,074 [main] DEBUG results - Extracted JDBC value [2] - [http://103.160.144.199:8080]
2023-05-21 20:34:17,074 [main] DEBUG results - Extracted JDBC value [3] - [nishad]
2023-05-21 20:34:17,074 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(44924713509000)#1
2023-05-21 20:34:17,074 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e2028c7
2023-05-21 20:34:17,074 [main] DEBUG InternalHttpClient - ex-0000000002 preparing request execution
2023-05-21 20:34:17,074 [main] DEBUG RequestAddCookies - ex-0000000002 Cookie spec selected: strict
2023-05-21 20:34:17,074 [main] DEBUG RequestAuthCache - ex-0000000002 Auth cache not set in the context
2023-05-21 20:34:17,074 [main] DEBUG ProtocolExec - ex-0000000002 proxy auth state: UNCHALLENGED
2023-05-21 20:34:17,074 [main] DEBUG ConnectExec - ex-0000000002 acquiring connection with route {}->http://103.160.144.199:8080
2023-05-21 20:34:17,074 [main] DEBUG InternalHttpClient - ex-0000000002 acquiring endpoint (3 MINUTES)
2023-05-21 20:34:17,074 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 endpoint lease request (3 MINUTES) [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2023-05-21 20:34:17,074 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 endpoint leased [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:34:17,074 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 acquired ep-0000000002
2023-05-21 20:34:17,074 [main] DEBUG InternalHttpClient - ex-0000000002 acquired endpoint ep-0000000002
2023-05-21 20:34:17,074 [main] DEBUG ConnectExec - ex-0000000002 opening connection {}->http://103.160.144.199:8080
2023-05-21 20:34:17,074 [main] DEBUG InternalHttpClient - ep-0000000002 connecting endpoint (3 MINUTES)
2023-05-21 20:34:17,074 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connecting endpoint to http://103.160.144.199:8080 (3 MINUTES)
2023-05-21 20:34:17,074 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-1 connecting to /103.160.144.199:8080
2023-05-21 20:34:17,168 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-1 connection established 192.168.68.110:52955<->103.160.144.199:8080
2023-05-21 20:34:17,168 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connected http-outgoing-1
2023-05-21 20:34:17,168 [main] DEBUG InternalHttpClient - ep-0000000002 endpoint connected
2023-05-21 20:34:17,168 [main] DEBUG MainClientExec - ex-0000000002 executing GET / HTTP/1.1
2023-05-21 20:34:17,168 [main] DEBUG InternalHttpClient - ep-0000000002 start execution ex-0000000002
2023-05-21 20:34:17,168 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 executing exchange ex-0000000002 over http-outgoing-1
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> GET / HTTP/1.1
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> Accept-Encoding: gzip, x-gzip, deflate
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> Host: 103.160.144.199:8080
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> Connection: keep-alive
2023-05-21 20:34:17,168 [main] DEBUG headers - http-outgoing-1 >> User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "GET / HTTP/1.1[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "Host: 103.160.144.199:8080[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "Connection: keep-alive[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)[\r][\n]"
2023-05-21 20:34:17,168 [main] DEBUG wire - http-outgoing-1 >> "[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "HTTP/1.1 200 OK[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Date: Sun, 21 May 2023 15:04:17 GMT[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Content-Type-Options: nosniff[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Content-Type: text/html;charset=utf-8[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Expires: Thu, 01 Jan 1970 00:00:00 GMT[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Cache-Control: no-cache,no-store,must-revalidate[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Hudson-Theme: default[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Referrer-Policy: same-origin[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Cross-Origin-Opener-Policy: same-origin[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Set-Cookie: JSESSIONID.ce58f1e1=node01eltar30jf18y1bo0u7b6ggjuy68.node0; Path=/; HttpOnly[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Hudson: 1.395[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Jenkins: 2.387.3[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Jenkins-Session: 0408bb8f[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Frame-Options: sameorigin[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Content-Encoding: gzip[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Content-Length: 6816[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "Server: Jetty(10.0.13)[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[\r][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0x1f][0xffffff8b][0x8][0x0][0x0][0x0][0x0][0x0][0x0][0xffffffff][0xffffffed]\k[0xffffff93][0xffffffdb][0xffffffc6][0xffffff95][0xfffffffd][0xffffffee]_[0xffffffd1][0xffffffa1]?([0xffffffd9][0x10]`[0xffffffbf][0xffffffd0]hx5[0xffffff93][0xffffff92][0xffffffc7]N[0xffffffd9][0xffffffa9][0xffffff91][0xffffffed][0xffffffb5][0x1c]g7[[*[0xc][0xffffff89][0x19]B[0x2][0x9][0x6][0x0]G[0x1a][0xffffffff][0xfffffffa]=[0xffffffa7][0x1][0xffffffbe]f8[0xffffffd2][0xffffffe8][0xffffffe5][0xffffffb8]R[0xffffff91]=$[0xffffffd0][0xffffffe8][0xffffffbe]}[0xfffffffb][0xffffffbe][0xffffffef][0xffffffed][0x6]?[0x13][0xffffffe2]3![0x1e][0xffffffff][0xffffffee][0xffffffab][0xffffffef][0xffffffcf]~[0xfffffffa][0xffffff9f][0x1f][0xffffffbe][0x16][0xfffffff3]nQ[0xffffff9d]>[0x1e]>[0xffffff8b]|&[0xffffff9a][0xffffffa2][0xfffffffd][0xffffffeb][0xffffff8f][0xffffffe7]'[0xffffffa3]I[0xffffffdb][0xffffffe5]]9[0xffffff9d]H+[0xfffffffd][0xffffffc5][0xffffff85][0xffffffbf][0x1c][0xffffff89]Y[0xffffffde][0xffffffe5]QS[0xffffffd7][0xffffffdd][0xffffffba][0xffffffa9]NF[0xffffff9b][0xfffffffb][0xffffffa2][\r][0xffffffb7][0xfffffff7]t/^w[0xffffffc5][0xffffffb2]-[0xffffffeb]e[0x1b][0xffffffe5][0xffffffd7]yY[0xffffffe5][0x17]Uq2[0xffffffea][0xffffff9a]u1tX/[0xffffffcb].[0xffffffea][0xffffff8a][0xffffffb6];[0x19]][0xffffffe6]U[0xffffffbb]i.[0x17][0xfffffff9][0xffffffd5]=[0xffffff90]'[0xfffffffd][0xffffffb3][0xffffffa1][0xffffffe3][0xffffffb4]Y/."b^4'[0xffffffa3][0xffffffbf][0x14][0xffffffcb][0xffffff97]%[0xffffffe6]:c[0xffffffeb]A[0xffffff8f][0xffffffeb][0xffffffbc]Zcf#[0xfffffff3][0xffffffcb][0xffffff8b]<-[0xffffffa6]&[0xfffffff3][0xffffffa9]JR[0x7f]il[0xffffff91][0xffffffe8][0xffffff8b]|[0xffffff96][0xffffffa9][0xb]s15[0xffffffb3][0xffffffcb][0xffffffd4][0xffffffd8][0xffffffa9]-[0xffffffa4]K[0xffffffa7][0xffffff85]+[0xffffffbc][0xffffffd5]E[0xffffffae][0xffffff92][0xffffffe9][0xffffffa5][0xffffff9d]Io[0xffffffa5][0x1c][0xffffff9d][0xffffff82]z[0xffffff81][0xffffff84][0xfffffff8][0x8][0xffffff9f][0xffffff8f][0xffffffbb][0xffffffb2][0xffffffab][0xffffff8a][0xffffffd3][0xffffffaf][0xfffffff2]v~Q[0xffffffe7][0xffffffcd]L[0xfffffffc][0xffffffef][0xffffff80][0xffffffc4][0xffffffff]=[0xffffff9e][0xfffffff4][0xffffff8f][0x1e]W[0xffffffe5][0xfffffff2]%[0xffffffe8][0xffffff8a][0xffffffb5][0xffffffb4][0xffffffdd]MU[0xffffffb4][0xfffffff3][0xffffffa2][0xffffffe8]Fb[0xffffffde][0x14][0xffffff97]GV[0xfffffff7][0xffffffa2][0xffffffbd]X/g[0xffffffe8]5[0xffffffe9];[0xffffffc7][0xffffffd3][0x16]k[0xffffffed]nV[0xffffffa4][0x1b][0xffffffc8]9[0xffffffe1][0xfffffffd];[0xffffffc2][0xffffffc4][0xffffff90][0x9][0x18][0xffffffb5][0x2][0x1b][0xffffffca][0xffffffeb]"[0xffffffba]j[0xffffffca][0xffffffd9][[0xffffffc1][0xffffff96][0xffffffd3]zy/[0xffffffc0][0xffffffcb][0xfffffffc][0xffffff9a][0xffffffcf][0xffffffe3][0xfffffff6][0xfffffffa]j[0x3]$pe[0xffffff82][0xffffff86]?[0xffffffbe]^T[0x1b]Hm[0xfffffff9]K[0xffffffd1][0xffffff9e][0xffffff8c][0xfffffff2][0xffffffe5][0xffffffcd][0xffffffa8][0xffffff87][0xffffff9a]W][0xffffffd1],[0xfffffff3][0xffffffae][0x10][0xf][0xffffff82][0xffffff8f][0xffffff8f][[0xffffffa0][0xffffff94][0xffffff97][0xffffffaf][0xfffffff1][0xffffffb7][0x1][0xffffffb7]ZUE[0xffffffd4][0xffffffd5][0xffffffeb][0xffffffe9]<z#[0xffffffc0][0xffffffdb][0x1d][0xffffffe3][0xffffffd5][0xfffffff2]j[0x3]yZW5d[0xffffffe7]s[0xffffff95][0xffffffa9]T[0xffffffa5][0x3][0xffffffe4]E[0xffffffde][0xffffffbe]|3[0xffffffc8]m[0xffffff8f]@[0xffffff85][0xffffffd3][0xffffffc7][0xffffff8b][0xffffffa2][0xffffffcb][0xffffffc5]2_[0xffffff90][0xffffffa0][0xfffffff3]bQD[0x1][0xffffffee][0x8][0xffffffe0][0xffffff97][0xffffffd0][0x1][0xffffffc8][0xfffffff7][0xffffffe7][0xffffff97][0xffffffe1][0x1f][0xffffffba][0xffffffb6][0xffffffd3][0xffffffa6]\u[0xffffffa2]m[0xffffffa6]G[0xffffffe0][0xfffffff6][0xf][0xffffffdb][0xffffffc9][0xffffffaa][0xffffffa9][0xffffffbb][0xffffff9a][0xffffffb4][0xffffff8d]_[0x1c]r[0xffffffea][0x5]4[0xffffffa9][0xffffffef][0x4]PC[0xfffffff7][0x7][0xffffffc2][0xffffffbc]([0xffffffe6][0xffffffa0]l[0xffffffdd][0xffffffbc]3[0xffffffc8]G[0xffffff93]|[0xfffffff6]b[0xffffffbd][0xffffff9c][0x2][0xffffffc6][0x16]h[0xffffffdd]\M^[0xffffffd6][0xfffffff3]v[0xfffffffd][0xffffffb2][0xffffffe0][0xffffff84] p3[0xffffffb9]([0xffffff97]3[0x0][0x7f][0xffffffd4][0x3][0x7f]t[0xb][0xfffffff8][0xffffffa3]w[0xffffffc5][0xfffffff7]f]Nn[0xfffffff2]y][0xfffffff7][0xffffff9f][0xffffffd1][0xffffffa2]\[0x12][0xfffffff5][0xfffffff7][0x1]3[0xffffffab][0x17][0xfffffffc][0xfffffffb][0x10][0x10][0xffffffc5]5[0xfffffff8][0xffffffd8][0x7f]~[0x8][0xffffff98]|[0x9]][0xffffffe9]`[0x13]wW[0x1f][0xffffffb4][0xffffffb0]&[0xffffffbf][0xffffff9a]5[0xfffffff5]j{[0xfffffff1]![0xffffffc0]([0xffffffac]y[0xffffffb9][0x4]'[0xffffffb7]W[0x1f][0x8]nYL[0xffffffc3]Zw[0xffffff97][0x1f][0xffffffb4]XX[0xfffffff4][0xffffffb6]^7[0xffffffd3]b[0xffffffef][0xfffffff2][0xffffff83][0xffffff98][0xffffffb1][0xffffffee][0xffffffea]i[0xffffffbd][0xffffff80][0xfffffff0]v[0xffffffc5][0xffffffc1][0xffffffcd][0xffffff87][0x0]][0x14][0xffffffcb]u[0xfffffff8][0xfffffff8] i[0xffffffab]`D(o[0xfffffffd][0xfffffff7][0xffffff87][0xffffff80][0xffffffba]Xw[0x1d]X[0xffffffd0][0x7f]}[0x8][0xffffffa0][0xffffffb6][0xffffffab][0xffffff9b]`[0xffffffe6][0xfffffffb][0xffffffef][0xfffffff7][0x5]5_[0xffffffcf]Z [0xfffffff2][0xffffffde][0xffffffd6][0xffffffe8]~[0xffffffc8]m[0xffffffdd]t[0xffffff8c]1[0x1e][0x6][0xfffffff2][0xffffff9d][0xffffff9c][0xffffffe8]q5[0xffffffc9][0xffffffdb][0xffffffb6]@[0xffffffe3][0xffffffb6][0xffffffe1]c[0xffffffb8][0xffffffeb]7[0xffffffce][0xffffffd4]2[0xffffffb6][0xffffff98][0xffffffb4][0xfffffff9][0xffffffe2][0xffffffd3][0xffffffcd][0x19][0xffffffc4][0xfffffff7][0xffffffce]tl}[0xfffffffb]LE[0xffffffde]L[0xffffffe7][0xffffffdb]Y[0xffffffea][0x15][0xffffffa2][0xffffffbf][0xffffffd0][0x14]3*[0x18]F[0xffffffd2][0x19][0xffffff97][0xffffffd3][0xffffffde][0x4][0xffffffee]z[0xffffffcc][0xffffff8a][0x1e][0x7][0xffffffb4][0xfffffffe][0xffffffb1][0xffffffef][0xffffffcc][0xffffffe8]i[0x1b][0xffffffd3][0x1d]z[0xffffffd8][0x1f][0xffffffbf][0xffffffff][0xfffffff2][0xfffffffb][0xffffff9f][0xffffff9e][0xffffffed]9[0xffffffd7]o[0xffffffbf][0xfffffffb][0xffffffea][0xffffffeb][0xffffffff][0x1e][0x7f][0xfffffff7][0xfffffffd][0xffffff9f][0xffffffbf]??[0xffffffff][0xfffffffe]o[0xffffff87][0xffffff9d][0xffffffaf][0xffffffcb][0xffffffe2][0xffffffd5][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff82][0xffffffb1][0xffffffd7][0xfffffffd]U9[0xffffffeb][0xffffffe6]'[0xffffffb3][0x2]aF[0x11][0xffffff85][0xffffff9b][0xffffffb1]([0x11][0xffffff8a][0xffffff96]y[0x15][0xffffffb5][0xffffffd3][0x1c][0xfffffff3][0xffffffaa][0xffffff83]um[0xffffffe3][0xffffff96][0xffffffed][0xffffffd2][0xffffff9a][0xffffffb6]}R[0xffffffdd][0xffffffc1][0xfffffff2][0xffffff8b][0xffffffbc][0xffffffaa][0xffffffc4][0xffffffef][0xfffffff9]q[0xffffffb1].[0xffffffab]Y[0xfffffffb][0xffffff87]ck[0xffffffce][0xffffffbb]z[0xffffffb1][0x1f]%[0xffffffbd]q[0xffffff86]?]V[0xfffffff9]5[0xffffffe2][0x13][0xffffffdc]i[0xfffffff9][0xffffffd6][0xffffffe9][0xffffffc4][0xffffffef][0x7f]|[0xfffffff6]L[0xffffffe8]X[0x1e][0xffffff9d][0x18]0[0x1e]6[0xffffffef][0xffffff9f][0x11][0xffffffaa][0x17][0xffffffb3][0xffffffe3][0xffffffb3]][0xffffff86]g[0x1f]g}[0xfffffffd]<[0xf]X[0xffffffe2][0xffffffe1][0xffffffa4][0xf]][0xffffffe5];[0xfffffff8][0xffffffa9][0xfffffffa]eY[0xc]_[0xfffffff7][[0xffffffb5]r[0x6][0x9][0xffffff9f]6E[0xffffffb1][0xfffffffc][0xffffffb1]h[0xffffffeb]j[0x1d][0xffffffbc][0xffffffd9]`V[0xffffff86]t[0xffffffa6]-[0xffffffa2][0xffffffb6][0xffffff98][0xffffffae][0x1b][0xffffff86][0x7f][0x4][0xffffffb6]Ik[0x1e][0x1e]V[0xfffffff5][0xffffffc6]q[0xffffffb2][0xffffffa8]gE5[0xfffffff9][0x19][0xffffffa2];[0xffffffe9][0xffffffa7]d[0xffffffaa]5[0xffffffcc][0xfffffff9][0x11]"[0xffffffac]][0xffffff9a][0xffffff81]pfV7[0xffffffed]G0[0xffffffc2];[0xffffff98]+:[0x7][0xffffffea][0xffffffd3]G[0xffffff85][0xffffffba]1[0xffffffee][0x11]#[0xffffff9d][0xffffff88][0xffffffa1][0xffffffce];[0xffffff81][0xffffff9f][0x15][0xffffff97][0xffffffcc][0x11][0xfffffffb][0xffffffe4][0xfffffff3]msA[0xffffffa0][0x1e][0x6]|[0xffffffc2][0xffffffdc][0xfffffff3][0xfffffff4][0xfffffff1]E=[0xffffffbb][0xffffffe9]E 0.[0xffffffea][0xffffffc7][0xfffffff5][0xffffffbc][0xffffff8c]CS[0xc]e&;GA[0xffffff8c]^[0xc]VML+X[0xffffffda][0xffffff93][0x11][0xffffffa4]0[0xffffffa2][0xffffffad][0xffffff8d]`jE[0xfffffff7][0xffffffaa]f[0xfffffff6][0xffffffb0]^,[0xffffffc5][0xffffffd0]/[0xffffffd2][0xffffffb1][0xfffffff1]il[0x6]1[0xffffffbb].[0x1a]&[0xffffffd5]'[0xffffffa3]M[0xfffffff3][0xffffffe9][0xffffffe3]|P[0xffffffab][0xffffffcf][0x1]e[0xffffffa5][0x7]C[0xffffffb7][0x5][0xffffffcf]F[0xffffffea][0xffffffe2][0xffffffe8][0xfffffff4][0x19][0xffffffae]DWoL[0xffffffe1][0xffffffe3]I[0xffffffde]'[0xfffffffe]E[0x13][0xfffffff0][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff9c][0xffffffeb][0xffffffef][0xffffffb7][0xffffff83][0xfffffff7][0xffffffdb]N[0x1f][0xffffffcf][0xffffffca][0xffffffeb]#[0xf][0xffffff9e]?[0xffffffbf]h[0xfffffff2][0xffffffe5][0xffffffec][0xfffffff0]yU_[0xffffffd5][0x1][0xffffffb5][0xffffffbd][0x15]G[0xfffffff3][0x1a][0xffffffb9]Q[0xffffffc0]ec[0x8][0xffffffd0][0xffffffa5]\\[0xffffffdd][0xffffffc3][0xffffff92]>[0xffffffdb]gb[0xffffffd9]N[0x8][0xffffffaf][0xffffffcf]9aMNF[0xffffffdb]L{t8[0x1][0x10][0xffffffea]S[0xffffffb7][0x7][0xffffffc0][\r][0xffffffc6]f[0xf][0xffffffe6][0xffffffc6][0xffffffdb][0xffffff88][0xffffffde]C[0xffffff8c][0xffffff94][0xffffffc9][0xe][0xffffffa1][0xffffffd3][0xffffffa5]l[0x12][0xffffffc3][0xffffffa2][0xffffffbc][0xffffff9a]c[0xffffff8c][0xffffffb1][0x14][0x8][0xffffffd0]q[0xffffff82][0xffffffb5][0xffffffef]819F[0xffffffc0][0xffffff81]N=[0x1]>|[0xffffffdd][0xfffffff7]O[0x10][0xffffffc6][0xffffffd3][0x6][0xffffffae][0xfffffff2][0xffffffe5][0x1b][0xffffffba]q9[0xffffffa3][0xffffffd3][0x1] [0xffffffa4][0x1a][0xffffffbd][0xfffffff7][0xffffffd7][0xffffffb2][0xffffffc7][0xffffffcc][0xffffffde]K_[0xffffffd4][0xffffffaf][0xffffffc5][0xffffffbc][0xffffff9c][0xffffffcd]`[0xffffff8f]^[0xffffffd3]D^[0xffffffd6][0xffffffcd]B45[\r][0xfffffff6][0xffffffc6][0xfffffff7][0xffffffc3][0xfffffff3][0xffffffce]kP[0xffffffec][0xffffff8a][0xffffffe1]F[0xffffffef][0xffffff81]7[0xffffff8f][0xfffffff2][0xffffff90][0x0]p[0xffffffb5][0xffffffa1][0x1][0x14][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffa1][0x9]0[0xffffffab][0xffffffdb][0xffffff92][0xffffff8f][0xffffffbe][0xffffff80][0xffffffaf][0x0][0x1d][0xffffffae][0xffffff8b][0xffffffff][0xffffffdc][0xffffffae]mYG/[0xffffffda][0xffffffc0]L"[0x13]Lp[0x18][0x1c][0x1][0xffffff95][0xffffff88]U[0x1][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffe5][0xe][0xffffffdb]][0x7][0xffffffa2]F[0x12]/W[0xffffffeb][0xffffffee][0x0]E[0xc][0xffffffdc] [0xfffffff6][0xffffff8f][0xffffff91]XU[0xfffffff9][0xffffffb4][0xffffff98][0xffffffd7]U( =[0x1b][0x10]=[0xffffff9c]f[0xffffff8b][0xffffffcb]"[0xffffffa7][0xffffff86][0xffffff86][0xfffffff6][0xffffffe7][0xffffffcf][0x3][0xffffffe0][[0x14]>[0xffffffec][0x0])[0xffffff89]*[0xffffff90][0xffffffbb][0xc][0xffffffc5][0x6]0P[0xffffffe4]M[0xffffff99]G=[0xfffffffd]6[0xffffff96][0x8][0xffffffae]j[0xffffff89][0xffffff91][0xfffffff3][0xffffffae][}1[0xffffff99][0xffffffbc]z[0xfffffff5]*~eb[0xffffffe6][0xffffffd6]ZJ9[0x9]\[0x17][0xffffff8c]`[0xffffffbe][0xffffffac]_[0xffffff9f][0xffffff8c][0xffffffa4][0xffffff90]"Q[0xffffff9a][0x7f][0xffffff80]8[0xffffffd4][0xffffff97]6u[0xffffffa6]U[0xffffffde][0xffffffcd][0x5][0x10][0x7f][0xffffffaa][0xffffffb5][0xffffff8a]e&[0xffffff9c][0xffffffcd]U[0xffffff92][0xfffffff2]j[0xfffffff8][0xffffff92]B[0xffffffc9][0xffffff83][0xffffff96]'[0xfffffffc]R[0xffffffa2][0xffffffff][0x4]l[0xffffffb9][0x1d][0xfffffff9][0xffffffcb]H\[0xffffff96]UE[0xfffffff2]/i.[0xffffffbb][0xffffffa6]~[0x9]z[0xffffffc1][0xffffffb3]5[0xffffffb0][0x1a]g}i[0xffffffa3]o[0xffffff85][0xffffffbf][0xffffff84]k[0xffffffaf]J|A_[0xffffffe4][0xffffffb6]y[0xffffffd0] [0xffffffa3]G[0xffffff93][0x1][0xffffffb7][0x7]C[0xffffff84]v[0x14][0xffffffd3]|u2jj[0xffffffd8][0xffffffe3][0xffffff87]O[0x14]Vo[0xffffff8c][0xffffff8f]u&[0xfffffffa][0xffffffaf]sk[0xffffffbd][0xffffffc0][0x1f]q 1O72[0xffffffbe][0xffffffd1]R[0xffffffd2][0xffffffbd][0x1d][0x8]?[0xffffffe8]x\[0xffffffd6][0xffffff93][0xffffffa6][0xffffff98][0xffffff95][\r][0xfffffff2][0xffffffd5][0xffffffc9][[0xffffffa5][0xffffff80]L[0xffffffee][0x1a][0xffffffc4]'[0x1f][0xffffffca][0xffffffe5]{[0xffffff98][0xffffffbc][0xffffffe3]j[0xffffffe2][0xffffff84][0xffffff95][0xffffffb9]VN[0xfffffff0][0xffffff8f][0xffffffcc][0x1c][0xffffffae][0xffffff9f][0xffffffec][0xffffffda][0xffffffc0][0xffffffc2][0xffffffd0][0xffffffed]#[0xfffffff2][0xffffffcf]o[0xfffffff9][0x17][0xffffffb0][0xffffff90]Rh[0xffffffa9]A[0xffffffda]6[0xfffffff6]6Ri[0xffffff9c][0x8][0xffffff95][0xffffffc5]I[0x1a][0x19][0xffffff8d][0xffffffcf]3md[0xffffffec][0xffffffbc]PN[0xffffffc6]i*[0xffffffb4][0xffffffb5][0xffffff90].[0x1f]+/[0xffffff88][0x17].[0xffffffa7]J[0xffffffc6][0xffffff99][0xffffff89]be[0x1]&v[0xffffff90][0xffffffc4][0xffffffd8][0xffffffa1][0xffffff9f][0xffffff8b][0x13]#ll[0x1]L[0xffffffe2];[0xffffffc5]z[0xffffffb2][0xffffffd8][0xffffffa6][0xffffff80][0x3][0xf]7\[[0xffffffd5][0xb][0xffffffb1]v[0xffffff98]V[0xffffff98]4[0xfffffff6]*2x[0xffffff9e][0xffffff8a]D[0xffffffc6][0xfffffffe][0xffffff99]N[0xffffff94][0xffffffd0]^[0xffffffc5][0xffffffd6][0xffffff88]p[0xffffff99][0xffffffb9]w[0xffffffa0][0xffffffc1][0xfffffffb]I\ [0xffffffcd][0xffffffb4]l[0xffffffa6]U![0xffffffa6][0xffffffe0][0xffffff9c]N[0xffffffd0]gz[0xffffff83]'[0xffffff8e]%J6lp8[0xffffff98]u'[0xffffff8c][0xfffffff9]Q[0xffffffb3]6[0x14]!Jz[0xffffff99][0xffffffe0][0xfffffff0][0xffffff87]gCA|0[0xffffff9e][0x1b][0xffffffb3][0xfffffff7][0xffffff96][0xffffff80]r[0xffffff90][0xffffffea][0x9][0xffffffe5][0xffffffab][0xffffff9d][0xc][0xffffffa6][0xfffffffe][0xffffff9b][0xffffffe0][0x5][0xfffffff6][0xffffffa4][0xfffffffb]a1e?[0xffffffe1][0xffffff84][0xffffffa6][0xfffffff5][0xffffff88][0xffffff8b][0xffffff80][0xffffff9f]*[0xffffff97][0xffffffe2][0xffffffc0][0xffffffcb][0xffffffcc][0x1][0xffffffb1][0xffffffa1][0xffffffb3]k[0xfffffff7][0xc][0xfffffff8]u[0xffffffd9][0xffffff96][0xffffff8c][0xffffffe3][0xfffffff2][0x5][0xffffff82][0xffffffc4]"
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << HTTP/1.1 200 OK
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Date: Sun, 21 May 2023 15:04:17 GMT
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Content-Type-Options: nosniff
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Content-Type: text/html;charset=utf-8
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Expires: Thu, 01 Jan 1970 00:00:00 GMT
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Cache-Control: no-cache,no-store,must-revalidate
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Hudson-Theme: default
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Referrer-Policy: same-origin
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Cross-Origin-Opener-Policy: same-origin
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Set-Cookie: JSESSIONID.ce58f1e1=node01eltar30jf18y1bo0u7b6ggjuy68.node0; Path=/; HttpOnly
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Hudson: 1.395
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Jenkins: 2.387.3
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Jenkins-Session: 0408bb8f
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Frame-Options: sameorigin
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Content-Encoding: gzip
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Content-Length: 6816
2023-05-21 20:34:17,389 [main] DEBUG headers - http-outgoing-1 << Server: Jetty(10.0.13)
2023-05-21 20:34:17,389 [main] DEBUG MainClientExec - ex-0000000002 connection can be kept alive for 3 MINUTES
2023-05-21 20:34:17,389 [main] DEBUG ResponseProcessCookies - ex-0000000002 Cookie accepted [JSESSIONID.ce58f1e1="node01eltar30jf18y1bo0u7b6ggjuy68.node0", domain:103.160.144.199, path:/, expiry:null]
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffb6]h[0xfffffffa][0xffffff85][0x1e]sR[0xffffffe8][0xfffffff1][0xffffffaa]A,v[0xffffffc4][0xffffffc8]o[0xffffff80] [0xffffffdc]~?@[?[0xffffff8d][0xffffffa0][0xffffffbd][0xffffff99],[0xffffffcb]v[0xffffff9e][0xffffffcf]v:[0x1e][0xffffffa2][0xffffffb8][0xffffffc1]KS[0xffffffa7][0xffffff87][0xfffffff6][0xffffffa0][0xffffffee][0xb][0xfffffff4][0xfffffffb][0xfffffff4][0xffffff96][0xfffffffc][0xffffff88][0xffffffdc][0xc]v[0xffffffc0][0xffffffc7][0xffffff99][0xffffffb0][0xfffffffe]LA!2-[0xffffffac][0xffffff8b][0xffffffed][0xffffffe6]s[0xffffffd3]DuC[0xffffffaf][0xffffffa9][0xffffff8a][0xffffffa9]uJ[0xffffffc7]*[0x13][0xffffff99][0xffffff8e]3[0xffffffa8][0xffffff85]4qB[0xffffffdd]Kb5|*h[0x13][0xffffffb4][0x10][0x16]D[0xffffffc7][0xffffffd6]G[0xffffff99][0x1]x[\r]5[0xfffffff5]>[0xffffffea][0xffffffbf][0xffffffce][0xffffffac][0xffffffc3][0x13]h[0xffffffb2][0xffffff95][0x4]a[0xffffffd2][0xffffffa0][0xffffff88]6#[0xfffffff0][\r]6[0xffffffbf],[0xffffff94][0xe]([0x18][0xffffff9d][0xffffffc6]:[0xffffffc9][0xffffffad][0xffffffb0]4G*rP[0xfffffff5](6[0xffffffc0]M[0xffffffdb]X[0xffffffa7][0xffffff9b]/[0xffffff9a]*[0xffffff9a][0xc][0xffffff93]D[0xffffffd0][0xffffffee]$;3p=Pe[0x3][0xffffffd3][0xffffffad]}[0x16]+[0xffffffcc][0xffffffa3]e[0xffffffb0][0x1a][0xfffffff8]n#[0xffffff97][0xfffffff0]i[0x16]e@[0xffffff88][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0x1e][0x1b]x7[0xffffff82][0xffffffb2]b[0xfffffff8][0xffffffda]A[0xffffffa4][0xffffffbd]H`[0xfffffff6][0xfffffff7]Q[0x0][0x6]OT[0xffffff9a][0x4]D[0xfffffffa]/>[0xfffffff2][0xffffff9c]![0xffffff9b]FX[0xffffffbe][0xffffff89]2D[0xffffffd2]J[0xffffffa4]p[0x1b][0x1a][0x6][0xffffffc6][0xffffffd3][0x8][0xffffffb1]+L[0xffffff9b]J[0xffffffb3]g[0xffffff96]#[0xffffffb1]X[0xffffffaf][0x4]/[0xffffff81]X~[0x17]^[0x4]6[0xffffffd0][0xfffffffa][0xffffffc1]"[0xffffffea][0xffffffe4][0xffffff97][[0xffffff8e][0xffffffef][0x18]+1[0xffffff85][0xffffffb5][0xffffff98]?[0xffffff8b]S@[0xffffff88]`[0xffffffd4][0xffffff92]D[0x0][0xffffff8f],[0xffffff82]M[0xffffffd3][0xffffff9a]6[0xffffffd2][0xffffffeb][0x16][0xffffffcf]A[0xffffff85]`la[0xffffffec][0xffffffc0]bs[0xffffffa6]2E[0x1a][0x11][0x2][0xffffff9d]v[0xffffff82][0xffffffae][0xffffffbe]7[0xffffffb2][0xfffffff8]n[0xffffff9d][0x5][0xffffff95]@[0xc][0xffffffe1][0xffffffd2]8[0xffffffcd]"0L[[0x8][0x3][0xffffffb8][0xffffffcb][0xffffff99]l[0xffffff84][0xffffffc7][0x11][0xfffffffc][0xffffffa3][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0x6][0xffffffdc][0xfffffff9][0x8]0[0xffffffbd]>[0xffffffd3]`[0xffffffbd]al[0xffffffa0][0xffffffc8]m[0xffffffcd][0xffffffb5]g[0xffffffc4]O[0xc]x[0xfffffffe][0xffffffb2]3\[0xfffffffb]A[0xffffffcf]6[0x1e][0xffffffdc]D[0xffffff86]-[0xffffffe2][0xffffffae]^[0xffffff9f][0xfffffff6]#[0xffffffca][0xffffffad][0xffffffbe]1[0xffffff9c][0xffffffed]#[0xffffffa7][0x7f][0xffffff8a]^[0xffffff85][0x18]AZ[0x4][0x8][0xffffffee][0x1a][0xfffffffe][0xffffffd4][0xffffffc2][0xffffffdf][0xffffffc8][0xffffff81]y[0xffffffbc][0xfffffffc]FI{[0xffffffd8][0xffffff88][0xffffffff][0x7f]V[0xffffffc6][0xffffffed]5[0xffffff86][0xffffffb6][0xffffffb9]J[0xfffffff4]T[0xffffffeb][0xffffffde]'A[0xffffffe3]@I([0x7][0xffffffc3][\r][0x9][0xffffffb8]O[\r][0xffffffe4][0x0]ST^F[0xffffff9b][0xffffffff][0xffffff9f]*[0xfffffffa][0xffffffb5][0xffffffc4][0xffffffcd][0xfffffff1][0xfffffff7][0xffffffe1][0xffffffbe][0xffffff89][0xffffffcd]/[0xffffffea]ry[0xffffffbb][0xfffffffd] [0xffffffee]z [0xffffffb7][0xffffffc0][0x12][0x1][0xffffff9e][0xffffffdc]M[0x0]&[0xffffffbd][0x1]}p[0xffffff8e][0xfffffffe][0xffffffb2][0xffffffb8][0x9][0xffffffdb][0xffffffa0]Q;G[0xffffffb6]>]w[0xffffffef]^X8[0xffffffe6][0xffffffc3][0xffffffaa][0xfffffff2]bR[0xffffffe5]7@qr[0xffffffd1][0x0][0xffffffa3][0xffffffb0][0xffffffa9][0xffffffdb]>[0xffffffcc]gm[0x1c][0xffffffc6]n[0xffffffe0][0xffffff97][0xfffffff9].[0xffffffb9][0xffffffdd][0xffffffe4]u{`[0x7]![0xffffffac][0xfffffff2][0xb][0x16][0xffffffae]v[0xf][0xffffff80]o][0xffffffbd]a[0xffffffdc][0xfffffff3][0xffffffe7]U[0xffffffd9]v[0xffffffa3][[0xffffff93][0xfffffff5][0x5][0xffffffd2][0xffffffb7][0xe][0xffffff8b][0x10]i,F[0xffffffc7][0xffffffb2][0xffffffc7]}W[0xffffffb4][0xffffffdd]f[0xffffffee]YT[0xffffff95][0x1][0xfffffff6][0xffffffed][0x11][0xffffffd3]yY[0xffffffcd] G[0xffffffa3][0xffffffa1][0xffffffcb][0xffffffa4][0xffffffae]n{[0xffffffcf][0xffffffdd][0xfffffffc]Q[0xffffffd8][0xffffffa8][0xffffffe8][0xfffffff2][0xffffff86][0xfffffff9][0xffffffda][0xffffffed]n[0xffffffc1][0xffffff87][0xffffffb2][0xffffffb6][0xffffffb1][0xffffff85][\r][0x1f][0x1a]m[[0xffffffc5][0xffffffc1]][0x14][0xffffffed][0x15].[0x10][0x12][0xffffffe5][0xffffffcd]~[0xffffffd2]V[0xffffffce][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "t][0x16][0xffffffd5]qP[0xffffffcf][0xffffff9f][0xffffffb3][0xffffffc7][0xffffffc5][0xffffffc1][0xffffff98].o[0xffffffb7]q[0xffffffc3]0[0xffffff86]M[0xffffffe2]V[0xffffffd2][0xffffffc5][0xffffffb6]@[0xffffff9f][0xffffff8d][0xffffff8b][0x17][0xffffffc3]6[0xfffffffd][0xffffffe6][0xffffffdf][0xffffffc1][0xffffffcd][0xffffff8e][0xffffffc2][0xffffffb4][0x19][0xffffff93][0xffffffbc][0xffffffaa]&[0xffffffcb][0xffffffe2][0xffffffd5]_[0xffffffea][0xffffff8b][0xffffffd1][0x1d]xG'[0xffffffea][0xffffffb3][0xffffffba]]`[0xfffffff0]k[0x5][0x2][0xffffff9f][0xffffffd2]P[0xffffffec][0xffffff9c][0xffffff91][0xffffffd2][0xffffffd7][0xfffffff0][0x1f]O[0xffffffad][0xc][0xffffffae][0xfffffff7][0x1b][0xffffffdc][0xffffffdf][0xffffffc9][0xffffff9c][0xffffff8e][0xffffff93][0xffffff9e][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "8:[0xfffffffd][0xffffffae]x%[0xffffffbe][0xffffff85] [0x1f][0x18][0xffffff92][0xffffffe1][0xfffffff2]v[0xffffffb4][0xfffffff8]1Y[0xffffff99][0xffffffb7]7[0xffffffcb][0xffffffe9][0xfffffffc][0xffffff87][0xffffffa2]F[0xffffffd8]<yOF[0xffffffee]{"[0xffffff86][0xffffff84][0xffffffe2][0x13][0xfffffff9][0xffffffa4][0xffffffad][0x13][0xffffffb2][0x12][0xffffffb1][0xffffff83][0xfffffff3][0xffffffd3][0x8][0xffffff81][0x19][0xffffff92][0x1f]dCH[0xffffffa2][0xc][0x2][0xffffffb2]TG[0xffffffce][0xffffffe1][0x13]Q[0xf]nud[0x10][0x19][0xffffffb1])J[0xfffffff5]42[0xffffff91][0xffffffd5][0xffffff8c]S43[0x1f][0xffffffb4][0xffffff88][0xffffffd0][0xffffffde]"[0xffffff93]B[0xffffffe6]e[0xffffff9d][0x8]#[0xffffffdf]%[0xfffffffd][0xfffffffb][0x10][0xfffffff7][0xffffffb2]s[0xffffffa8][0x6]q[0xffffff9a]D$[0xffffff83]8[\r][0xffffffe1][0xffffffa4][0xffffff8c][0x14][0xffffffc2]@[0xf]'[0xffffffab][0xffffff89][0xffffffa5][0xffffffb2]![0xffffffe8][0xffffffcc][0xffffff92][0xffffffd8]*[0xffffffac]Vz[0xffffffe1][0x11][0xffffffbf][0x9],.a[0xffffff86][0xffffffc7](C1[0x0][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffd7]s[0xffffff8d]U[0xffffffbb]d[0xffffffea][0x19][0xffffffec] [0xffffffcb]5H$#[0x4]eI[0xffffffdf])[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff9d][0x10][0xffffff92][0xffffff9a][0xffffffd8]'[0xfffffff0][0xffffffb0][0xffffff88][0xffffffbd][0xffffff98][0xfffffff0]*[0xffffffe6][0xffffff98][0xffffff83][[0xffffffe7][0xfffffff7]')`l[0x12]`[0xffffffe5][0xffffff93]8[0xffffffb3]d[0xffffff9c][0x9]KD\[0x5]v`[0x1][0xffffff88][0xf][0xffffffa5][0xffffff8b][0xffffff90][0xffffffca][0xffffff86][0xffffff8b][0xffffff96]A\[0x1a][0xffffffe9][0x10]C&&[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff8d]g[0x8][0xffffffdc][0x1c]k.:[0xffffffac]^1[0xffffff92]E[0x8][0xffffff8b][0xfffffff8][0xffffff81][0xffffffe9][0xffffffae][0xfffffff6]m[0xffffff92]0[0x8]CL[0xffffff8b][0xfffffffc][0xffffff99][0xffffff90][0x10]V[0xffffffbc][0xffffffd3]j>[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "?[0xffffffb5]$[0x15][0x1d]"S[0xffffffe0][0xffffff9c][0xffffff90][0xfffffffc])[0xffffff83]Sd[0xffffffee]`[0xffffff82]M[0xffffffa2]$[0xffffffdb]\0lUR3[0xffffff9b]H[0xffffffc0][0x11]4[pO[0xffffffa4].[0xffffffd6][0xc][0xffffffab][0x13][0xffffff81][0xffffff88][0x18]Q[0xf][0xfffffff3]{[0xffffffb0][0x12]\[0xffffffcc][0x18][0xffffffc8][0xffffff87][0xffffffcb]oTb?y[0xffffff8e][0xfffffffe]n[0x6][0xffffffac]7![0xffffffbf][0xffffffb6][0xfffffff9][0xffffffda]z[0xffffffa2]~[0xffffff83][0xffffffeb]7[0xffffffeb][0xffffff89][0xffffff82][0xffffffa6]C[0xffffffab]=[0xffffffa2]dM[0xffffffc3][0xffffffe5][0xffffffc0]|[0xb][0xffffffc6]"[0xffffffa3]`[0xffffffdc]{[0xffffffce][0xffffffc4]3[0xffffffd5][0xffffffd7]p[0x1b][0xffffffb9]ez![0xfffffffa]O[0xffffffa6]f[0xffffffec][0xffffffe0][0xffffffe7][0xffffffc8][0xffffffe5][0xffffff8e]<[0xffffffc1][0xffffffe8][0xffffff9f]1[0xffffffae][0xffffff8a][0xffffff98][0xffffffe4] [0xffffffaa][0xffffff8e][0xffffff90][0x14]BoL[0x8][0xffffffbe][0xfffffff1][0xfffffff4][0xffffff9d][0xffffffca]Y[0xf][0x17][0xfffffff4]_[0xffffffc9][0xffffffb1][0xfffffff6]D[0xffffff99]#[0xffffff81]z[0x1a]R[0xffffffda][0xffffffe1]Z!Q[0xffffffc7]u[0xffffffee][0xffffffac]p=!h[0x5][0xffffff90]$[0xffffff84]L[0xffffffdb][0xffffffce][0xffffffb5]F[0x1f][0xffffffb4]h[0xffffffe9]C[0xffffffc2][0xfffffff0].b[0xfffffffc]%[0xffffffe5]H|S[0xfffffff2][0xffffffa0][0xffffffc6][0xffffffcd][0xffffffaf]-[0xffffffcd][0xffffff8b]|[0xffffffc9][0xffffffbd][0xffffff87]w[0x17][0xffffffe2]?A\[0xffffffc5]voK[0xffffffc5]P[0xffffffe6]b9[0xffffffad]Y??[0x19][0xfffffffd][0xfffffff5][0xffffffa7]?G~[0xfffffff4][0xffffffa7][0xffffffd3][0xffffffcf][0xffffffee][0xffffff93][0xfffffff5][0xffffff81][0xffffffea][0xffffff90][0xffffffde][0xffffffd5][0xffffffeb][0xffffffdd][0xffffffe6][0xffffffcc]p{T[0xffffffc8][0xfffffff7][0xffffffe7]R[0xf]R[0xffffff96][0xffffffd0][0xffffffe5][0xffffff8b][0xffffffd7][0xffffffc4][0xfffffff7]XG[0xffffff95]e[0xffffffd9][0xffffffe4]u[0xffffffbf][0xffffff9a][0xfffffffe]t[0xffffffe8][0xffffffd5]V[0xffffffb0][0xfffffff6][0xffffffc5]l#![0xffffffea]P[0xffffffac]y[0x1d]5k[0xffffffee]T[0xfffffff0][0xffffff94]Y=[0xffffff9b][0xffffffed][0x11][0x1c][0xffffffa0][0xffffffba]&_[0xffffffb6][0xffffffac][0xffffffbd]q[0xffffffc9][0xffffffb8][0xffffffac][0xfffffff2][0xffffffae][0xfffffff8]=\[0xffffff8c]I}"[0xffffffe5]X 0[0xffffff90][0xffffffe1][0xffffffdf][0x1f][0xffffffde]"[0xffffffcf];[0x1]=d[0xffffffe8][0xffffff9e][0xfffffffd][0xffffff87]u[0xffffffcf][0xffffffe0][0xffffff9c][0xffffffc6][0xffffff8a][0xfffffff0][0xffffff95]8[0xffffffa3][0xffffffcb][0xffffff93]2I[0xffffffbd][0x19][0xffffffc3]Q[0xffffffc1][0xffffffae][0xffffffeb][0xffffff94]9o[0x2]kn[0xffffffb4]S[0xffffffd9]X9[0xfffffff8][0x0][0xffffff9f]9[0xffffffa5][0xffffffe8][0xffffffc9][0xffffffe2][0xffffffd4]e[0xffffffa9]tc[0xffffffe5]a[0xfffffffe][0x11]Q[0xffffffa6][0x16] [0xc]|[0xffffff82]tif[0xffffffc6][0x4]/[0xffffff9d]W[0xffffffc6][0xffffff87][0xffffff92][0xffffff95][0xffffffb6]>M[0xffffffc6][0x1a]![0xffffff90]2[0xffffffa9][0xffffff96]*[0xffffff94][0xffffff8f][0xffffff8d][0xffffffc3]$hMXK[0xffffffb1]Y[0xffffff9a][0x0]B[0xffffff9a][0xffffffc1][0xffffffd7]Z[0xffffff9d]ec[0xffffff9d]"[0xffffff84]H5Z[0xffffffa1][0x1f]q[0xffffff92][0xffffffc0][0xffffffed][0xffffffeb][0xffffffb1][0xfffffff6][0x6][0x11][0xffffff86]Me*4[0xffffffdc]r[0xffffff96]i[0xffffffa7][0x1d][0xffffffba]*8&[0xffffff8c][0x5][0xe][0x1a][0xffffffee][0xffffffd4][0x1a][0xffffffe5]= `[0xe]`[0xffffffe6]=<[0x17]zd[0xe]8[0x0][0xffffff84][0xffffff81][0xfffffffb]RI[0xffffffaa]X[0xffffff94][0xffffffc6][0xffffffe2]H[0x3]-[0xffffffb1][0x1e][0xffffffd0]@;,[0xffffffc0][0x19]m[0xffffffb1][0xffffffda]4[0x5][0xffffff82]2c [0x6][0xffffffb2][0x3]V[0xffffffe2][0xffffffd0][0xffffff9a][0xffffff98][0xffffffd8]$>[0xffffff94][0xffffff9f]o[0x11][0xfffffff0][0xfffffffc]v[0xffffffc3][0xffffffdf][0xffffffc5]S[0xffffffcb]Z[0xffffffb8]r[0xffffff98][0x0][0xffffffd0][0x14]\[0xffffffe3][0xffffff99]e[0xffffff88]#S'[0xffffffd3]1K[0xffffffd9][0xffffff89][0xffffffb3] [0xffffff9d][0x8][0xfffffffd][0xffffffa4]I[0x1d][0xffffffd6][0xffffffe2]Y[0xffffffcc][0x2][0x8][0xffffff9a][[0x1f];[0xffffffac][0xffffffd5]`|&ci1J[0xffffff9c][0xffffff83]&X[0xffffffac][0xffffffc9][0xffffffd0][0xffffffd7][0xffffffb0]R[0xffffff94]ZD[0xffffff86]g&Et)[0xffffffb1]([0xffffffb6][0xffffffc2]M;-[0xffffffe1][0xffffff8f][0xffffff8d]K1Lb&[0xffffffb4][0xffffffb2][0xffffffb2]e[\r][0x1b][0x1]@[0x2]OC[0xfffffffa]d@[0xffffff8a][0xffffffcf][0xffffffac][0xffffffd7]6[0xffffffcd][0xffffffd0][0x6]RJ[0xffffffe3]2D[0xffffff9b]X[0xffffffab]wd[0xffffffc6][0xffffff98]C`[0xffffffc9][0xffffffa4]G[0xffffffab][0xffffffa5]@[0x0][0xffffff8e][0xe]}[0xffffff9d][0xffffffd3]J[0x1a]`[0xffffffa5]e[0xffffff9c]hM[0x2][0x1b]p[0x0][0xfffffff2][0xffffff9a][0x5]ndY[0xffffffec]SP[0xffffffde][0x6][0xffffffb4][0xffffffa4][0xfffffff4][0xffffff9e]61[0xffffff8b]3[0xffffffef]I[0x3][0xffffff88][0x0][0xffffff98]!3[0x16][0xffffffa3]0[0xffffff85]5[0xffffffd6][0x3][0xffffffaf][0x10]|9[0xffffff8b][0x5][0xffffff9c]k[0xffffffce][0xffffff81][0xffffffbe][0xffffffd6][0xffffff8c][0xffffffad][0xffffffe2][0xffffffa6][0xffffff84]3[0xffffff88]8[0xffffffce](3[0xffffff99][0xffffffcb]4[0xffffffe0]Z[0xffffff86][0xffffff8b] [0xffffffa2]d[0x15]+[0xffffff8d]5)[0xffffffe3][0xffffffc7][0x16][0xfffffff8]p[0xffffffe1][0xffffff88]D4[0xffffffd6][0xffffff91][0x1a][0xffffffac][0xffffffd7]j[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "O[0x18]M[0xffffffc1][0xffffffc0] [0xfffffff6]c[0xffffff94]m,[0xffffffcb]k[0x16]t[0xffffffc3][0xffffffbc]X[0xffffffaf][0xffffffa5]U[0xffffff86][0xffffffd8][0xffffff82][0x4][0xffffff90][0xfffffff8]p{[0xffffffae] ,\[0x9]([0xffffffcc][0xfffffffb]3[0xffffffc5][0xffffff82][0xffffffa5][0xfffffff4]Xr[0xffffffb8][0xffffffa7]@g[0xe][0xfffffff7]&[0xffffffc0][0xffffff84][0x8]r[0xffffffbf][0xffffff86][0x1b]o[0xffffff89]t[0xfffffffd][0xffffffdc][0x9]1[0xffffffa7][0x4]e[0xffffff99]K[0xffffffa5][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "8R[0xffffffcd][0x12][0x1b]*r[0xffffffd0][0x1]"[0xffffff89][0xffffffe5]d[0xffffffda]:[0xffffffc8][0xffffffbd]b[0x1][0x16][0xffffff92][0xffffff9c]$a[0xffffffed][0x10][0x1b][0xffffffe4][0x13][0xffffffe7]P)[0xffffff8a] H[0x12][0x8]Ea4[0xffffff9a][0xffffffba][0xffffff87][0x5]'[0xffffffc6]A}IT\@U[0x11]}[0xffffff82]-*[0xffffff83]Z[0xffffff83][0xfffffffe][0xffffff96]*[0xffffffe0][0x10]S{[0x10]/[0xffffff81][0xffffffb8][0x19][0x13][0xffffff98][0xffffffe5]3[0xf][0x11]:'[0xffffffe7]][0xffffffe6][0xffffffb4][0xffffffee]9[0xffffff8b][0xffffffd6][0xffffffd4]c[0xffffff9d][0xffffffe8][0x0]v[0xffffffe3]?[0x17][0xffffffc4] [0xffffffb1][0x0][0xffffff84][0xffffffa0][0x15][0xfffffff8]@Tm[0xffffffe6]C+8[0xffffff98]:z|[0xffffffc8]7,[0xffffff95][0x9][0xffffffb2][0xffffff85][0xffffffa8][0xffffffff][0xffffffcc]Zd[0xb][0xffffff90][0x2][0xffffff8e]NX[0xfffffff4][0xffffffd5]XqH[0xffffff85]d[0x2][0xfffffffb][0x1][0xffffffd1]J [0xffffffef]N[0x1b][0xffffff86][0xffffffa3]\X[0x6][0xffffffbe]@[0x4][0x12][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff9c]c[0xffffffe1][0xfffffffa]\[0xffffff93]p[0xffffff99]KL[0x1a][0xffffffd4][0xffffffc0][0x4]58[0xffffffc3][0xffffff85][0xffffffcc][0xffffffb4]1Yj[0xffffff82][0xffffffce][0xffffffd8]^g"P[0x1][0xffffff93][0xffffffc1][0xfffffff4][0xffffffe8]^[0xffffffc3]|[0xffffffaf]a[0xffffff94]t[0x7][0xffffffcc]4[0xffffffbb]C[0x19]-[0xffffff95][0x11]NABz-[0xffffffbb]B[0xfffffffc]2[0x9][0x1b][0x4][0xffffffc6][0xffffff83]?&[0xffffff83][0xffffffec][0xffffffa0][0xffffffd5]A[0x3][0x13][0xffffffef][0xffffffb0]^([0xffffff8f][0xffffff82][0x15]K[0xffffffd8][0x8]A[0xffffff86][0xffffff94]![0x1d]9[0xffffffa7]D[0xffffff81][0xffffffce][0x16][0xffffffda]@+a [0x10]A[0xffffffa1][0xffffff80][0xf][0xffffffec] [0xffffffa4]i[0xffffffac][0x11]4[0xffffffa7][0xffffffc6]k&/`K[0x6]|i[0x1e][0x11]O[0xffffffdb]L[0xffffff82][0xffffffb5][0xffffff82] R[0xfffffff0]P[0xffffffd9]q[0xffffffc8]:[0xffffffa4][0xffffff93][0x10][0xffffff9c]s[0xffffff8e][0xffffffca][0x14]D$[0xffffff85][0xffffffe1]e[0x1e][0xffffff95](Zif[0xffffff92])[0xffffffec][0x16][0xffffff90][0xffffffa3]iN[0xffffff9c][0xffffffb4][0xffffff98][0xffffff90][0xffffffb6][0xffffffd6][0xffffff82][0x17][0xffffff8e][0xffffffad][0x9][0xffffffd1][0x0]D[0xffffffae][0xffffffd9]o[0xffffffd6]L[0xffffff9b][0xffffff84][0xffffffb8][0xffffffee][0xffffff8c][0xfffffff4]Ia[0xffffffa5]<[0xffffffe4][0xe]v[0xffffff9e][0x5]}[0xffffff99][0xffffffb2][0xffffffb6][0x1d]p[0xfffffff7]Y[0xffffffe8][0xb][0xffffffc9][0xfffffff7]`[0xffffff9a]aP[0xf][0xffffff8d][0xffffffc6][0xffffffcc][0xffffffe8][0xffffffcb][0xffffffe4][0xffffffc0]g)%[0xffffff85][0xffffff8c][0xfffffff2][0x19][0x9]7F[0x16] [0xffffff81][0xffffffbc][0xffffffe4][0xffffffaa][0xffffffc9]U[0x1a]G[0xffffff9b][0xffffff8c]AM[0xc][0xffffff80]P [0xc][0xffffffb4][0xfffffff0][0x9][0xffffffb0][0xffffffbf][0xffffff99][0x1a]C[0xffffff83]0[0xffffffb1][0xffffffa3][0x18]STl/*[0xffffffac]`K[0xc][0xffffffa7]H9[0xffffffa0][0xffffff94][0xffffffa6]c[0x8][0xffffffb0][0xffffffca]([0x1f]!;2[0xffffffa9]M[0xffffffa1][0xb]c[0xffffffd0][0x1d]`4[0xffffffbc][0xffffff8c]p[0xffffffc1][0xffffffd4]b[0xffffffc1][0xffffff9e]}[0xffffffa1]k@[0x7][0xffffffa2][0xffffff82][0xffffffcc]KC[0xffffffac]a[0xffffffe6][0xffffffc6][0xffffffb0][0xffffff87][0x18][0xffffff93]Y[0xffffffef][0xffffffc0]g[0x1a]]([0x15][0xfffffff1][0xffffff85][0xffffffed]3[0x1]/[0xffffff90][0x13][0xffffffc2][0xc][0xffffff81][0xffffffc7]t[0x18][0xffffff86][0xfffffff9][0xffffffa4]b[0x6]C[0x1c][\r]5[0x16]S[0xffffffd0][0xfffffff8][0xffffffc2]/[0xffffff9c][0x7]ML}[0xffffffaa]4[0x8][0x9]$[0xffffff8c]a[0xffffff90]|[0x16][0xffffffb4][0xffffffd6]+[0xffffffe8][0xffffffea][0xffffff98][0xffffffb9][0xffffff92]J [0xffffffc7][0xffffffd4]e[0xb]CG/5[0xffffff86][0xfffffff2]C8[0x1c][0xffffff8c]n0[0x4]t[0xe][0x16][0x1a]K[0xffffffd1][0xffffffa3][0xffffffb9][0xffffff80][0x13]"D[0xfffffff8]O[0xffffff97]XO[0xffffffa7][0xffffffc8]\[0x11]6K[0xffffff8d][0xffffff91][0xffffff82][0xffffff82]Z`[0x8][0xffffffc4][0xe]7[0xffffffe7][0xffffffb4]F[0xffffffd6]:[0xffffff88] [0xffffffee][0xffffffce]h[0xffffffaa]2C[0xffffffb1][0x19][0xffffffb3][0xffffff8c]CFk8[0xffffffac]1[0x1d][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffb4][0xffffffd6][0xffffffaa][0xffffffc1][0xffffffe8]q[0x19]0EI[0xffffffef][0x16]1[0xffffffca]I[0xffffff90][0xffffff80]*[0x4][0x1b][0xffffffc9]M[0x16][0x1a]bXmO[0xfffffffc]%[0xffffffe4]5[0xffffffe3][0xffffffce][0xffffff91][0xffffffa3][0xffffff8b][0xffffffb2][0xffffffb0][0xffffffd5]\[0xffffffac]A[0xffffffd0][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "U[0x0][0x6] [0x1d][0xffffffe6][0xffffffcf][0xffffff82]yD[0xffffffca][0x8][0xffffffd5]#\O[0xffffff85][0xffffff93][0xfffffff0][0x1d][0xffffffa4]"0WR[0xffffffb2]PA1[0xffffff83]ne[0xffffff81][0xffffffe0][0x1e]2[0xffffffc6][\r]{[\r][0xffffff85]3[0xffffffb0][0xffffffc4])[0xffffffb9]#[0xffffffd9][0x6][0xffffffda][0x6][0xffffff87][0x2][0xffffff91]P[0xffffff81][0xffffffed]@[0x2]B[0x10]|[0x12][0xffffffbc][0xf][0x14][0x11]6[0x1a]T[0xffffffb1][0xffffffe0]#7[0xffffff8e][0xffffffe8][0xffffffa9] [0xffffff8e][0xffffffb8]ck[0x6][0xffffffe1]G&[0x1d][0x1c][0x1a][\r]<$[0x9]K?[0xb]^/E[0xffffff94][0xffffff84]Npz>%ME[0xfffffff0][0xffffff90][0xffffff9c][0x8]8A[0xffffffbe][0xffffffe1]l[0xffffffe1]u[0xffffff82]3[0xffffffc5]XJ[0x6][0x18][0xffffffab]1[0x1d][0xffffff98]u[0x1e]<o[0x1a]</[0xffffffe5][0x1e][0xffffffb6][0x7][0xffffffca]p[0x16][0xffffffbc][0xffffffb4][0x9]^[0xffffff9a]*[0xffffff92]$[0xffffffde]r+[0xffffff8e][0xffffffc2]e[0xffffff82]G[0xffffffa7]>)8e[0xffffffc8]Q[0xffffffe8]k][0x1f][0xc]$i[0xffffffd2][0xffffff8f]VV[0xffffffd2][0xffffffd8]PG%< M&f[0xffffffc2][0xfffffff4]P[0xffffffe3][0xffffffa0][0xffffffcf][0xffffffd0][0xffffff99]4$Z[0x9][0xffffffbd]9[0xffffff84]"([0xffffffbf][0xffffffa4][0xffffffa3]#[0xffffffa9]h[0xffffffef][0xffffffa1]"[0x10][0x9][0xffffffd8]tz=O3[0x6][0xffffff89][0xffffff8f][0xffffffd3][0x4][0xffffffea][0x2]k#[0x1d]|/([0xffffffcc][0xffffffed]s[0xffffff8a][0x1a]<9L[0xffffff93][0xfffffff6][0x10]6x[0x7][0xffffffd0][0xffffffca]C[0xe][0xffffffa1][0xffffffa5][0xffffff96][0xffffffd1][0x18]4S#N[0xffffffb0]\p[0x2]+[0xffffffec]u[0xffffff88][0xffffff9a][0xffffffe0]'[0x10][0x16][0xfffffff8][0xffffffa0][0xffffffd1][0xffffffc8][0xffffffe1][0xffffff8c]D[0xfffffff0][0x15]L[0xffffffa1][0xffffff85]v[0xffffffd8][0xffffffb0]4[0x5][0xffffff8a]Y[0x1b][0xffffffac]&[0x1c][0x6][0x1d][0xffffffc2][0xffffff9d]P[0xffffffe7][0xffffffef][0xffffffac]53[0xffffffdc][0xffffffdc][0xffffff8b]p'WC[0xffffffd4][0xffffffcc][0xffffff8b][0xffffff87]';OC[0xffffffbe]![0xffffff8e][0x1d]b[0xfffffffa]5[0xffffffb2][0xffffff9d]b[0xffffffb2][0xffffffb8][0xffffff89][0xffffffc2][0xffffffe6][0xfffffffa]o1o[0xffffffe7]![0x16][0xffffff81]N[0xffffffd6][0xffffff8f][0xffffffc4][0xffffffcd][0xffffffc9][0xffffffc8][0xffffffd9]m[0xffffffa2][0xffffff84]Pb[0xffffffef][0xc][0xffffff9b][0xffffffc7][0xffffff83]f[0xffffffe8][0xffffffd7][0xffffffdc][0xfffffff4][0xffffffdf][0xffffff9f],[0xffffffe5][0xffffffbe][0xffffffbb][0x13][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "G[0x1d]#[0xfffffff6]s[0xfffffff6][0x1b][0xffffffd6][0xffffff8f][0xffffff94]?[0xffffff83][0xffffff98]8[0x1e]D[0xffffffe2][0xffffff86]ZfY*c[0xffffffba][0x1][0xffffffa3][0xffffffac][0x7f]F[0x14];Wn*#FP[0xffffff8e][0xffffffbb][0xffffff9c]F[0xffffffe3][0xffffff93][0xffffffb5][0xffffff85]i8[0x4][0xffffffc3]=Yn[0x1b][0xffffffe3][0x7f]t[0xffffffbc][0xffffff8e] [0xffffffc9]~[0x1a]6We[0xffffffd8]mvY[0x4][0x1b][0xffffffc0][0xffffff8a]*f[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffff97][0xffffffbb][0xffffff9d][0xffffffcd][0xffffffcf][0x1e]$q7[0xffffff82]G9[0xffffffef][0xffffff97][0xffffffb5][[0xffffff9b]-[0xffffffcc][0xffffffc6][0xffffffff]k][0xffffffac]wI[0xfffffff1][0xffffffee][0xfffffff5][0xffffff9a][0xffffffcb]j][0xffffffce][0x4]wF[0xffffffa2][0xffffffcb]&_[0x14][0xffffffcc][0xfffffff2][0xffffffa6]/[0xffffffa3]E[0xffffffbd]n[0xb]Q[0xffffffbc][0xffffffc6][0xffffff83]Yq[0xffffffeb]\eS[0xffffffbf]:l[0xffffff98][0xffffffd6]U[0xfffffff4][0xffffffba][0xffffff8d][0xffffffb4][0xffffffed][0xffffffe1]l[0xffffffcf]j[0x1e][0x1e][0xfffffffe][0xffffffdb]>[0xffffff89][0xffffff82]ll[0xffffffaa][0x4][0x1][0xffffffb1][0xffffffdb][0xffffffc7][0xffffffa2]&]}uU[0x15][0xffffffe0]P[0xffffff95][0xffffffaf][0xffffffda][0xffffffe2]O[0x1c][0xfffffffd][0xffffffed][0xffffffec]d[0x7f]%[0xffffffc3]9[0xffffffed][0xffffffe9][0xffffffd0]eoiC[0xffffffc3][0xffffffbf][0xffffffc8][0xfffffffe][0x8]5[0xffffff81]"[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "g,[0xffffff94][0xffffffb7][0xffffffd5]P[0xffffff9f][0xffffffe1]_[0xffffff84][0xffffffbf][0xffffffc3][0xffffffc3]<[0xffffffb7][0xffffffd9][0xffffffbf][0xffffffe3]X[0xffffffcf][0xffffff9a][0xffffffcd][0xffffffc1]\[0xffffffac][0xffffff84]G[0xffffff99][0xfffffff7][0xffffff99]#F[0xf][0xffffffda][0x6]e[0xfffffffe]?[0xffffffa1],[0xffffff86][0xffffff8f][0xffffff87]m[0xffffff81]v[\r][0xfffffffe]f[0xfffffffb][0xffffff93][0xfffffff1]][0xffffff88][0xffffff8a],?[0x19][0xffffff81][0xffffffac][0xffffffdf][0xffffffd5][0xffffffc3][0xffffffd1]zQ.E7/[0xffffffc4]?[0xffffffc8][0xffffffe2][0x18]d[0xffffff9e][0xffffff91][0xffffffd6][\r]?[0xffffff88][0xffffffee][0xffffffdd][0xfffffff5][0xfffffff5]o[0xffffffeb][0x1e][0xffffff97]q[0xffffffd0][0xffffffef][0xffffffaa][0xffffffe8]"[0xffffffc8]SS[0xffffffb4]s~[0x17][0xffffffe0][0xffffffc9]t[0xfffffffb][0xffffffea]o8[0xffffffcc][0xffffff94][0xffffffbf][0xffffffc8]_[0x7f][0xffffffb9][0x1b][0xfffffffb][0xffffffc0]3M$[0xffffffc4]pP[0xfffffffe]p[0xffffff96]w[0xffffffdb][0x12].^[0x17][0xffffffd3]uW7[0xffffffed]oK/7Z[0xfffffff8]h[0xffffffc2][0xffffff83]`[0xffffffeb][0xffffffae]h&[0xffffff8f][0x6]e[0xfffffffd]z[0xffffffc0]X<[0xffffffeb][0xfffffff2]n[0xffffffdd][0xffffffee][[0xffffff9e][0xffffffb7][0xffffffa8][0xffffffee][0xffffffde]Z[0xffffffff][0xffffffad][0xffffffb9][0x1f]_sA[0xffffffbb]+ [0xffffffb1][\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "W[0x1b][0x17]k[0xffffffe4][0xffffffe8][0xffffffe0][0x1e]T[0xfffffffa][0xffffff8f][-[0xffffffe1][0xffffffec][0xfffffff8]np[0xffffffaf]k[0xffffffcd]q[0xffffff95][0xffffffcd][0xffffffab][0xfffffff2][0xffffff8a]k[0xffffffa5][0xffffffcb][0xffffffde][0x1e][0xffffff9d][0xffffffbe][0xffffffe6][0xffffffb1][0xffffffb7]i^E[0xffffffe1][0xffffffe9][0x17][0xffffffa2][0xffffffab]W[0xffffffa3]S[0xffffffd5][0xffffffab][0xffffffee]-[0x0][0xffffffa7][0xffffffdf][0xffffffce][0xffffffb8][0xffffffb7]q[0xffffffec][0xffffffc9][0xffffff9b]Z?[0x2]>[0xfffffffa][0xffffffa3][0xffffffe3][0xfffffff3]V[0xffffff83]tW[0xffffffb7][0x1f]l[0xffffff8f][0xffffffbe][0xffffffde][0xe]=[0xffffffee][0xffffffcf][0xffffffc3][0x1][0xffffffe0][0xfffffffe],[0x3][0xffffffd5]n8[0xffffffe3][0xffffffbe][0xffffffff][0xffffffde][0xffffffc5][0xffffffe1][0xffffffc9]NjD[0xffffffb4]([0xffffffda][0xffffffb6]?[0xffffff92][0xffffffbf]=[0x12]q[0xffffffd3]v[0xffffffc5]b[0xffffffd7]~8[0xffffffc9][0xffffffde][0xfffffffb]pw[0xe][0xffffffab][0xfffffffc].Z[0xffffffe4][0xffffffcd][0x15][0xffffff90][0xffffffb8][0xffffffa8][0xffffffbb][0xffffffae]^D[0xffffffb2][0xffffff87]zD|[0xffffffb7][0xffffffe7]M[0xffffffc2][0xffffffbb][0xffffff9f]mDq>[0xffffffd2][0x16]E[0xffffffe5][0xffffff92][0xffffff8c]{[0xffffff98][0xb][0x1a],o1+[0xffffff87][0xfffffff7]qv[0xffffffa8]>[0xffffffcc][0xfffffffe][0xffffffe6][0xffffffb7]Wx[0xfffffff0]B[0x8][0xffffffe1]~[0xfffffff5][0xffffff86][0xffffffd5][0xfffffff7]x[0xffffffdf]ZF[0xffffff84][0xffffffd0][0xc][0xffffff82][0xffffff97]77[0xffffffb7][0xffffffec][0xffffffeb]p[0x0][0x7f][0xfffffff3]F[0xffffffc8][0xffffffbf][0xffffffe0][0x1e][0xffffffc3][0xffffffa1]e[0xfffffffd][0xffffffe8][0xfffffffb][0xe][0xffffffbb][0xffffff9d][0xffffffbf][0xc][0xffffffa1][0xffffffb3][0xfffffff4][0xffffff99][0xffffffb2][0xffffffe3]$e[0xffffffc6][0xffffff8a][0xffffffbc][0xffffffd2][0xffffffb3]\[0xffffffc4][$[0xffffffae],p[0xffffffb2][0xffffff94][0xffffffcb][0xffffffc3][0xffffffa2]H[0xffffffd4][\r]Rek|[0xffffff9c][0xffffffa6][0xffffffce]j7F[0x16][0xffffffaa][0xffffffb5]I[0xffffff9c]V,[0xfffffffb][0xfffffff1][0xffffffc8][0xffffffa7]F[0xffffffaa]:[0xfffffff6][0xffffff96][0xffffffd5]2[0xffffffed][0xc][0xffffffd2][0xffffffda]$[0x19]g>Fs[0xffffff96][0xffffffb0]2[0xffffff94][0xffffffb0]n[0xffffffa2]c[0xffffff93][0x1][0xffffffaa][0xffffffc3] [0xffffffde][0xfffffff3][0xffffffa0][0xffffffb8]s[0xffffffd6][0xfffffff1]P[0x7f][0xf]C[0xffffffa2][0xffffffd5][0xffffffca]8[0xffffffb5]Zs[0xffffffd0]nB[0xffffff96]_[0xffffff90][0xffffff84][0x3][0x13]$[0xffffffb0][0xffffffc7][0xffffff9b]y[0xffffff88][0x12][0xffffff92][0xffffffed]X[0xffffff91][0xffffffc4][0xffffffe2]tf[0xffffff92][0xffffff8c][0x5]![0xffffffaf]cmXn[0x1e][0xffffff87][0x14]W*[0xffffffe4][0xffffffcf]B[0xffffffa5][0xffffff8a][0xffffffa9]z[0xffffffa2][0xfffffffd][0xffffffd8]"G[0xfffffff1][0x18][0xffffffe7]l[0xffffffd8][0x1]A[0xfffffff6][0xffffff9d][0x1a][0xffffff87][0xffffffd6],[0xffffff96]H[0xffffff99][0xffffffe1]a[0xffffffce][0xffffffef]i[0xffffffe6]aY#[0xffffffb3]T[0x1][0x6][0xb][0xffffffae][0xffffffde]x&[0xffffffd2]h6[0xffffff99][0xffffff97]F'h[0xe][0xfffffffb],^[0xffffffa5]a[0xffffffe7]_[0xffffffa2][0xffffff87]LC[0xffffffe7][0xffffff94][0xffffffd8]%lM@[0x1e][0xffffffcb]B3Z[0xffffffad]eu([0xffffffd4]a[0xffffff91][0xffffffdd][0xffffff9b]P[0xffffffdc]f[0xffffff85])S[0xffffffac]''.[0xffffffce]2[0xffffffcb]Z[0x1b]ZM[0xffffffcc][0xffffffda][0xffffffa1][0xffffffb7][0x4][0xffffff81][0xb][0x5]I[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffad] o[0xffffffa2]5[0xffffff90];[0xffffffde][0xffffffcc]s[0xffffffc3]i[0xffffffaa]3[0x17][0xffffffca][0xffffffae],[0x1e][0xffffff90][0x1b][0xffffffc8][0xffffffd7][0x14][0xffffffeb][0xffffffea]>[0x1d][0x1b][0xffffff90][0xffffffdf]j[0xffffffe3][0xffffffb9][0xffffff99]#Y[0xffffff96]I}[0xffffff82][0xffffffce]H[0xffffffb4]R[0xffffffe7][0xffffffd2]L[0xffffff87][0x3][0xffffffc8][0xffffffa9]duh[0xffffffcc][0xffffff8d][0x0][0x16][0xf]t[0x6][0x1a][0x1d]ofm[0xffffffd8][0xffffff82][0xffffffc2]R[0x1d][0xffffffc8][0xc]O[0x1d][0xffffffeb]$e[0xfffffff1]nO[0xffffffc0]X[0xfffffff3][0xffffffb0][0xffffffc6]H[0xffffffd0][0x19]Bx([0xffffffa1][0x7f][0x7f][0xfffffff0].[0xffffffd8][0xffffffbe][0x6]@%~)[0xffffff9a][0xfffffffa]HybUW7[0xffffff8c]8[0xffffff8e]&[0xffffffb1]G[0xfffffff7][0xffffffe6]Xzr[0x19][0xffffffcb]F[0xffffffe3]P[0xfffffff7]S[0xffffffe1][0xfffffffa][0xf][0xffffffa2][0xffffffa9];>[0xffffffb6][0xffffffc9]f[0xffffffbf]N[0xffffffec][0xffffffc6]D[0xfffffffb][0xffffff83][0xffffffa2][0xfffffffd]Q#[0xffffffb1]B[0xffffffac][0xffffffd3][0xffffffb5][0xffffff8c]+[0xfffffffc][0xffffffd0]*X[0xffffffef][0x1f].YA[0xffffffcf][0xffffffc0]|[0xffffffe3][0xfffffff6][![0xffffff84]G[0xfffffffa][0xffffffee][0xffffffb7][0xffffffb2][0x16]:@pa[0xffffffcb][0xffffff81][0x5][0xffffff9b][0xfffffffd][0xffffffd6][0xffffffbd][0xffffffd9][0xffffffb6][0xffffffad][0xffffff81]>[0x3]A[0xffffffee][0xffffffab][0xffffffda]<[0xffffff99][0xffffffcd][0xffffffc4][0xffffff9e][0xffffff91][0xffffffbf][0x13]fm[0xffffffbd][0xffffffd5][0xffffff81][0xffffffcb]*[0x16][0xffffffab][0xffffffee]&[0xffffffe2][0x11][0xffffffd3]"[0xffffffba][0xffffffa8][0xffffffea])[0xffffffcb]$su[0xfffffffa][0xffffffb7][0xffffffa2]B4\[0xfffffff0][0xffffffdd][0xffffffc5][0xffffffa1][0xffffffd2][0xfffffff3][0xffffffbb][0xffffffc7][0x13][0xffffffb4]?^[0xffffff9d][0xfffffffe]4/[0xffffffdb][0xfffffff0][0xffffffda][0xffffff81][0xffffffc0][0xfffffff7][0xffffffab]9[0xffffffbc][0xffffffba][0xffffffb8][0xffffffa9][0xffffffd7][0xffffffcd][0xffffffa6][0xffffff9f]xQ_[0xffffffa0][0xffffffbd][0xffffffe4]k[0xffffffd2][0xffffff85][0xffffff98][0xffffff95][0xffffffed][0xffffffaa][0xffffffca]o[0xffffff8a]Y,~[0xffffffaa][0x5][0x2][0x2][0xffffff88]C[0xffffffde]t[0xffffffc5]l[0xffffffcc]Ab[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0xffffffcf][0xffffffd1][0xffffffa2]q[0xffffffbd]b[0xffffffcf][0xffffffae])[0xffffffe1]^[0xffffffb6]o[0x1e][0xb][0x4][0xffffffde][0xffffffa1]w[0x7f][0xf][0xffffff9f]!r[0xffffffd1][0xffffffd6][0xffffff97][0xffffffdd][0xffffffab][0x1c]s[0xffffffae][0xffffff9a][0xfffffffa]E1[0xffffffed][0xffffffe2][0xffffffc7]m[0xffffffff]C[0x17][0xffffffc7][0x16]4<[0xffffffe2][0xffffff92][0xfffffff4][0xfffffff6]D.b[0xffffffc0]g[0xffffff87]P[0x3][0xfffffffa][0xffffffb7][0x1]c[0xffffffb9][0xfffffffa][0xfffffff4][0xfffffff1][0xffffffba]z[0x3][0xffffffdc]([0xffffff9c]@[0xffffffdd]?p:D$[Jn[0xffffffb2][0xffffff84][g[0x1e][0xf][0xffffffba][0xfffffff1]Dj_[0xffffff9d]"[0x17][0xffffffcf][0xffffff9a][0xffffff82]?[0xffffffd8][0xffffff93][0xffffff93][0xffffff8c]G[0xffffff8b]#[0xffffffc3][0xffffffcb]O[0x1b][0xf][0xfffffffb][0xffffffcf]|[[0xffffffe2][0xffffffd3][0x1f][0xffffff92][0xc][0xffffffa7][0xfffffffb]u[0xffffffb5][0xffffff97]F[0xffffff88]p[0xffffffb0]#[0xffffffd3][0xfffffffd][0xffffff81]I)[0xffffffef][0x1c][0xffffffd4][0xffffffd8][0x1e][0xffffffd5][0xffffff9d][0xffffffac]y[0xe]w`[0xffffffd5][0xffffffe9]{[0xffffff89]I/[0xffffff99][0xfffffff9]][0xffffffd9][0xfffffffc][0xffffffa8][0xffffffc2][0xffffffb1]M;[0xffffff97]|_[0xfffffff9][0xffffffed]"[0xffffffb2]Ak)[0xffffffa0][0xffffff84][0xffffffcb][0xffffffee][0xffffffdf]R[0xfffffff2]!R[0xfffffff2][0x10][0xfffffff6],/[0xffffffcb][0xffffffab]uS[0xffffff9c]U[0xfffffff5]z[0xffffffd6]>H[0xffffff89]7C ;S[0xffffff8e][0xfffffffa]7[0xffffff8f]>-[0xffffff8f][0xffffffde][0xfffffff6]^[0xffffffe9][0xffffff9e][0x2]G[0xffffff9b]S[0x7f][0xfffffffd]![0xfffffffc][0xffffff93][0xffffffd1][0xfffffff3][0xffffff8b]*g:t?[[0xffffffc5][0xffffffad][0xffffffb6]yQ[0xffffffad][0xffffffa2]}~[0xffffff9f][0x17]y[0xffffffb3][0x14][0xffffff8b][0xffffff9a][0xc][0xffffffbf][0xffffffa8][0xffffffd7][0xffffffdd][0x11]g[0xfffffff6][0xffffffdb][0xffffff95][0xffffff80][0xfffffffe][0x0]*[0x3][0x1a]=[0xffffff8f][0xffffff9c][0xffffffcd][0x11][0xffffff93]g[0xffffffe1][0xffffffe5]V%#D[0x1f]sg[0xffffffc3][0xb]<[0xffffffca][0xffffffc9][0xfffffff9][0xffffffe1]S[0xffffffc1][0xffffffa7][0x18][0xfffffff1][0xffffff94][0xffffffdb]b|[0xffffff91],qs[0xffffffe5][0xffffffb9][0xffffff9d][0xffffffff][0xffffffe9][0xffffffcf][0xffffffcf][0xffffffde]=[0xffffffa0]w[0xffffff9f][0xffffffdd][0xffffffbf][0x1b][0x2][0xfffffff5][0xffffff9f][0xffffff97]u[\r][0xffffff9b]{[0xfffffff0][0xfffffffa]b[0xffffffdf]t[0xffffffbb][0xffffffa8]xP[0xffffffa2]<[0xfffffff2][0xffffff93][0xc][0xfffffffd][0xffffffa8][0xffffffe7][0xffffffcf]/[0xffffffab][0xffffffe2]ut[0xffffffa7](y[0xffffffd8]%|G[0xffffffe5],[0xffffffda]{[0xf][0xffffffbe][0x7f][0xffffff85]e;w[0xffffff8f][0xffffffdd][0xfffffff6][0xffffffa7]\[0x1e][0xffffffed]~N[0xffffffe8][0xffffffd1][0xffffffa6]Ny[0xffffffff][[0xffffffa7][0xfffffffd]a[0xffffffc0][0xfffffff0]KVOf[0xffffff8b]rI1[0xc]o[0xfffffff8]?[0xffffffad][0xffffff97]%k,_[0x15][0xffffffd3][0x1a]-u[0xffffffc3][0xffffff9f]([0xc][0xffffffbf][0xffffffe7][0x15]~[0xfffffff3][0xfffffff0][0xffffffa0][0xffffff8a][0x10][0xffffffee]'[0xf]~[0xffffffd3][0xfffffff5][0xffffffbd][0xffffffe6]|[0xffffffa7][0xffffffc2][0xfffffff1][0xffffffde][0x1b][0xffffffac][v[0xffffffec][0xffffffde]k[0xffffffd9]o|[0xffffffcb]k[0xffffffab]o[0x1d][0xffffff9d][0x1f][0x1b][0xffffffd5][0xffffff97]<6[0xfffffff5][0xffffff92][0xffffffcf][0xffffffb7][0x15][0xffffffdd][0xffffff9f]B[0xffffffec][0xffffffcb][0xffffff90]Q[0xffffff85][0xffffffdf]Z[0xffffffb8].D[0xfffffff8]5[0xffffff9a][0xffffffb2][0xffffffbb][0x11][0xfffffff9][0x1]%`[0x1a]zR[0xffffffc4][0xfffffffb][0x13][0xf][0xffffff95][0xffffff95][0xffffffcd][0x18]L5[0xffffffd4][0xffffffc6]6[0xffffffaf]Y[0x1c][0xffffffa5][0xffffffe6][0xffffff93]U9[0xffffffd9][0xc][0xfffffff9][0xffffffa1]^[0xffffffad]Wg[0xffffffdb]*[0xffffffd8]?[0xffffffd1]~[0xfffffff0][0xffffffd8][0x3]OX[0xfffffff1]4}[0xffffff95][0xffffffc4]<[0xffffffd2][0xffffff81]l[0xffffff96][0xffffffe7]f"[0xffffffa5][0x15][0xffffffb2][0xffffffcd]<4[0xffffff86][0xffffff8f][0xfffffff0][0xffffffea]h[0xffffffc2]7%[0xffffffdd]\[0xffffffde]m[0xffffff87][0xffffffa7]H0[0xffffffe0]W=[0xffffff84][0xffffffff][0xffffffa6]WF[0xffffff8d][0xffffff97]|[0xffffffc5][0xffffff96]g[0xffffff89]I[0xc]x1[0x19][0xfffffff5]7zxi1\[0xfffffffe]rp[0xffffffa2][0xffffff9f]/L[0xffffffa8][0xffffff90][0xffffff8a][0xffffff9b]4[0xffffff9c][0x9][0xffffffc0][0xffffffaa]2[0x17]3[0xffffff87]6[0xffffff8e][0xffffffc7][0x1b]}x[0xfffffffd]>[0xfffffffc]|[0xffffff80][0xffffff9f]F[0xffffff98][0x2]m<[0xffffffa9][0xffffffc4]#[0xfffffffd]|I[0xffffff94][0xffffff87]r[0xffffff8c][0xffffff89]x[0x18]R[0x9]g[0x3][0x18]$[0xfffffff0][0xffffffe8][0xffffff93][0xffffffc5][0xffffffca][0x8][0xffffff9e][0xffffffde][0xffffffe4]K[0xffffffb7]<[0xffffffde][0xffffff97][0xfffffff5]`[0xffffff9c][0xffffff9d]*[0xffffffa4][0xffffffe7]:r12xd[0xfffffff2][0xffffffb1][0xffffff89]2[0x1b][0xfffffffb]T[0x4] [0x11][0xf](:[0xfffffff3]k[0xffffff91]u[0xffffffd8][0xffffffde][0xffffffdd][0xffffffb3][0xffffff84][0xffffff90][0xfffffff8]A[\r][0xfffffff8]k[0x1e]3[0xfffffffe][0xffffff80]T[0xffffffdd][0xffffffa0][0xffffffe9][0xffffffa2][0xffffffac][0xfffffff6]v[0xffffffa2][0xfffffff6][0xffffffdc][0xffffffe3][0xfffffffe][0xffffff80])f[0xffffffea]B[0xffffffa5]}g[0xffffffed][0xffffffef]Q[0xfffffff2][0xfffffffe][0xffffffb5][0xffffffc0][0x1d][0xffffff8c]![0xe][0xffffffbf]g[0xffffffc7][0xffffffe1][0xffffffc0]>[0xffffff87]W[0xffffffe7][0xfffffff9][0xffffffa3][0xffffffbc][0xffffffdd][0xfffffff3]|U[0x1e][0xfffffffc][0xfffffff4][0xffffffca]&[0xffffffd2]@[0xfffffffb]dt[0xfffffffa][0xffffffe3][0xffffffd7][0xffffffcf]~[0x12]O~[0xfffffff8][0xfffffff6][0xfffffff8][0xffffff8f][0xffffffb7][0x1c][0xffffff81]y[0xffffffb7])[0xffffff8a]^[0xffffffcd]Kdz[0xffffff83][0x19]}~=[0x18][0xffffffa0][0xfffffff0][0xfffffffb]][0xffffffcb][0xffffff9a]?[0xffffffd5][0x6][0xfffffff7][0xffffffb4][0xffffffac]C[0xffffffe1][0xffffffbc][0xffffffa1][0xffffffc9]zc[0xffffffa8]s'[0xffffff9e][0xffffffd9][0xfffffffc][0xffffffcc][0xffffff8c][0x18]~[0xffffffb5][0xffffffe8][0xffffff9e]z[0xffffffc0][0xffffffa4]G[\n]"
2023-05-21 20:34:17,389 [main] DEBUG wire - http-outgoing-1 << "[0x17]|/[0xffffff90][0xffffffaf][0xffffffa0][0xfffffff2][0xffffffd7][0xffffff89][0xffffffff][0x1f][0xffffffcb][0x1f][0x1e][0xffffffad][0xffffffb9]X[0x0][0x0]"
2023-05-21 20:34:17,389 [main] DEBUG InternalHttpClient - ep-0000000002 releasing valid endpoint
2023-05-21 20:34:17,389 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 releasing endpoint
2023-05-21 20:34:17,389 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connection http-outgoing-1 can be kept alive for 3 MINUTES
2023-05-21 20:34:17,389 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connection released [route: {}->http://103.160.144.199:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:34:17,389 [main] DEBUG PoolingHttpClientConnectionManager - Shutdown connection pool GRACEFUL
2023-05-21 20:34:17,404 [main] DEBUG DefaultManagedHttpClientConnection - http-outgoing-1 close connection GRACEFUL
2023-05-21 20:34:17,404 [main] DEBUG PoolingHttpClientConnectionManager - Connection pool shut down
2023-05-21 20:34:17,435 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:17,435 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,435 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 20:34:17,609 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 20:34:17,640 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 20:34:17,656 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 20:34:17,659 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 20:34:17,659 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:17,659 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:17,672 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 20:34:17,672 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 20:34:17,672 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 20:34:17,672 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:17,672 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,672 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,672 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,672 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@71b27aa6
2023-05-21 20:34:17,672 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:34:17,672 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,735 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,735 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:17,735 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:17,735 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,735 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1146483745 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,735 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,735 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:17,735 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,735 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:17,735 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:17,735 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:17,735 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:17,735 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:17,735 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$YJkOsoP8jdh.Sf8y.6v62OERZZYVHxX0tj22zxJ3iHjSiqfdJVmDe, role=USER, email=null, username=test}
2023-05-21 20:34:17,735 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:17,735 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:17,751 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:17,751 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:17,751 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3f1b17c4
2023-05-21 20:34:17,751 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).username) 
2023-05-21 20:34:17,751 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).role]

2023-05-21 20:34:17,751 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:17,751 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,751 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,751 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))@788149548 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,751 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:34:17,759 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)): test
2023-05-21 20:34:17,759 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@459c68db
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$YJkOsoP8jdh.Sf8y.6v62OERZZYVHxX0tj22zxJ3iHjSiqfdJVmDe]
2023-05-21 20:34:17,759 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:34:17,759 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#test
2023-05-21 20:34:17,759 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a307611
2023-05-21 20:34:17,799 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:17,799 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,799 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:17,799 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:17,799 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400).role]

2023-05-21 20:34:17,799 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:17,799 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,799 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,799 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400))@300119417 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,799 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)): admin
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@3d76a548
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$r/tuvHRVd8Rrz3EQ4jjJ.OuPRm5Qu7Eg.LaRqMmDl.wLjt78UCmSi]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#admin
2023-05-21 20:34:17,799 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37b45722
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)): tester
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@474c5d3
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$23ra0jiAB/PFt3ty1ZSmreOzEhrZzMz7xHr5CgLMBg/RTtWQG2Dna]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#tester
2023-05-21 20:34:17,799 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37b45722
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)): user
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@3e56215
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$uzQ4ZlMDt1bPwZv67AzYb.MtjlqeOL4w7n0OL6Vj3Nep06eaa4eZ2]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#user
2023-05-21 20:34:17,799 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37b45722
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)): test
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@b31cbc4
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$YJkOsoP8jdh.Sf8y.6v62OERZZYVHxX0tj22zxJ3iHjSiqfdJVmDe]
2023-05-21 20:34:17,799 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:34:17,799 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44927869251400)#test
2023-05-21 20:34:17,799 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37b45722
2023-05-21 20:34:17,799 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,815 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:17,815 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,815 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:17,815 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,815 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1219110056 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,815 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,815 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,815 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:17,815 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,815 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,815 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,815 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,831 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@71b27aa6
2023-05-21 20:34:17,831 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:34:17,831 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,878 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,878 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:17,878 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:34:17,878 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,878 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1251047146 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,878 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,878 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:34:17,878 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,878 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:17,878 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:17,878 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:34:17,878 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:17,878 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:17,878 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$AkrGEEFGNen4ArzqHUCTyOF66x0rXC0LoL2pnEe/AFj0AouQrzotS, role=USER, email=null, username=test1}
2023-05-21 20:34:17,878 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:34:17,878 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:17,894 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:34:17,894 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,894 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,894 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,894 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,894 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@71b27aa6
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:34:17,894 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,894 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:34:17,894 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:34:17,894 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@18ff8d83
2023-05-21 20:34:17,894 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).username) 
2023-05-21 20:34:17,894 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100).role]

2023-05-21 20:34:17,894 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:34:17,894 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:34:17,894 [main] DEBUG results - Initializer list
2023-05-21 20:34:17,894 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100))@1478478337 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:34:17,894 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:34:17,894 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)): test
2023-05-21 20:34:17,894 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@e73206c
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$YJkOsoP8jdh.Sf8y.6v62OERZZYVHxX0tj22zxJ3iHjSiqfdJVmDe]
2023-05-21 20:34:17,894 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:34:17,894 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(44924681588100)#test
2023-05-21 20:34:17,894 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@289abc61
2023-05-21 20:34:17,894 [main] DEBUG TransactionImpl - begin
2023-05-21 20:34:17,894 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:34:17,894 [main] DEBUG TransactionImpl - committing
2023-05-21 20:34:17,894 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:34:17,894 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:34:17,894 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 20:34:17,894 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:34:17,894 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:34:17,894 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$YJkOsoP8jdh.Sf8y.6v62OERZZYVHxX0tj22zxJ3iHjSiqfdJVmDe, role=USER, email=null, username=test}
2023-05-21 20:34:17,894 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:34:17,910 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:34:18,124 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 20:34:18,124 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@74a8f9ab] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@671d7871]
2023-05-21 20:34:18,124 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 20:34:18,124 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 20:34:18,124 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:370d3b65-95b0-4ad7-85a9-8fdc995f994b user=ADMIN: (connection evicted)
2023-05-21 20:34:18,139 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-05-21 20:36:23,634 [main] DEBUG ApplicationHomeControllerTests - Running with Spring Boot v3.0.6, Spring v6.0.8
2023-05-21 20:36:25,424 [main] DEBUG HikariConfig - Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
2023-05-21 20:36:25,467 [main] DEBUG logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2023-05-21 20:36:25,525 [main] DEBUG LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5e2de80c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/nisha/git/test-companion/test-companion-webapp/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
		io.github.nishadchayanakhawa.testcompanion.model.User]
	Mapping files names []
	Properties []
2023-05-21 20:36:25,530 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-05-21 20:36:25,530 [main] DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-05-21 20:36:25,593 [main] DEBUG Environment - HHH000206: hibernate.properties not found
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-05-21 20:36:25,812 [main] DEBUG factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-05-21 20:36:25,825 [main] DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-05-21 20:36:25,825 [main] DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-05-21 20:36:25,925 [main] DEBUG JdbcTypeRegistry - addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2023-05-21 20:36:25,938 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@41c983d3
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@250e9655
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4064cd60
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5243ce45
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f1908c5
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@e74914d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@689d522e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@24e0989e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@33a8f3e7
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@19fce226
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1bf2cf15
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b76809d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4fb56bdf
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@31a65ddd
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3ca1a69b
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@33dcbbfa
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@57d3c5cd
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5418225f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@65bcc339
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3369a71f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7adde112
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6f422ecc
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6c648d16
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@12cb9eda
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@70b38e0
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@79414283
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31857c80
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ff61924
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2164f202
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5242e9f7
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@48b9ee43
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7c9e149
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1bbf750
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4473bbc1
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@433f8efa
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@bb4fc7d
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55eb9b2c
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@c9f9fe3
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@33e888d4
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f93cdc0
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@162807e5
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@66b8f244
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1161786f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@101d4a4e
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@46dc6087
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@675790ca
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7def2e4f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7da4486
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@22a7d4a2
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@792dc1fc
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d3405c0
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@289f9094
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@348143e1
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@23b456ac
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ef35d1f
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2abc6965
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@149ca998
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@159c9c91
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@71e32098
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@385d9880
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@385d9880
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@497c267a
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@497c267a
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@38f553d0
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@38f553d0
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@507a53b6
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56b972a8
2023-05-21 20:36:25,954 [main] DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@56b972a8
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@206421da
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@206421da
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7e37cfcf
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@596d15c
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1261fd82
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5dea9867
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1de36da2
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2e4c4373
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@33dc36d5
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3afca969
2023-05-21 20:36:25,970 [main] DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3c744de9
2023-05-21 20:36:25,970 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192] into BootstrapContext; was [null]
2023-05-21 20:36:25,970 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192) [was null]
2023-05-21 20:36:25,970 [main] DEBUG BootstrapContextImpl - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2591f310] into BootstrapContext; was [null]
2023-05-21 20:36:25,970 [main] DEBUG BootstrapContextImpl - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4bbddcc8] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3aac3f34]
2023-05-21 20:36:25,985 [main] DEBUG BootstrapContextImpl - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192]
2023-05-21 20:36:25,985 [main] DEBUG ClassLoaderAccessImpl - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7e8a0192]
2023-05-21 20:36:26,001 [main] DEBUG HikariConfig - HikariPool-1 - configuration:
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - allowPoolSuspension.............false
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - autoCommit......................true
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - catalog.........................none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - connectionInitSql...............none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - connectionTestQuery.............none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - connectionTimeout...............30000
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - dataSource......................none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - dataSourceClassName.............none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - dataSourceJNDI..................none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - dataSourceProperties............{password=<masked>}
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - driverClassName................."org.h2.Driver"
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - exceptionOverrideClassName......none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - healthCheckProperties...........{}
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - healthCheckRegistry.............none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - idleTimeout.....................600000
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - initializationFailTimeout.......1
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - isolateInternalQueries..........false
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - jdbcUrl.........................jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - keepaliveTime...................0
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - leakDetectionThreshold..........0
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - maxLifetime.....................1800000
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - maximumPoolSize.................10
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - metricRegistry..................none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - metricsTrackerFactory...........none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - minimumIdle.....................10
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - password........................<masked>
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - poolName........................"HikariPool-1"
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - readOnly........................false
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - registerMbeans..................false
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - scheduledExecutor...............none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - schema..........................none
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - threadFactory...................internal
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - transactionIsolation............default
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - username........................"admin"
2023-05-21 20:36:26,017 [main] DEBUG HikariConfig - validationTimeout...............5000
2023-05-21 20:36:26,363 [main] DEBUG JdbcEnvironmentInitiator - Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:36:26,363 [main] DEBUG JdbcEnvironmentInitiator - Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
2023-05-21 20:36:26,363 [main] DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2023-05-21 20:36:26,394 [main] DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-05-21 20:36:26,426 [main] DEBUG JdbcTypeRegistry - addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2023-05-21 20:36:26,426 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5521f423] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7852d8ed]
2023-05-21 20:36:26,472 [HikariPool-1 housekeeper] DEBUG HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-05-21 20:36:26,472 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,488 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,488 [main] DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-05-21 20:36:26,504 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,519 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,526 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:36:26,535 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,535 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:36:26,535 [main] DEBUG EntityBinder - Import with entity name JenkinsSetting
2023-05-21 20:36:26,551 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,551 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting on table jenkins_setting
2023-05-21 20:36:26,567 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,567 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,567 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:36:26,567 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:36:26,567 [main] DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2023-05-21 20:36:26,582 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,582 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:id]
2023-05-21 20:36:26,582 [main] DEBUG BasicValueBinder - building BasicValue for id
2023-05-21 20:36:26,582 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.id
2023-05-21 20:36:26,582 [main] DEBUG PropertyBinder - Building property id
2023-05-21 20:36:26,582 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, assigned, , ...)
2023-05-21 20:36:26,582 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=api_key, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,582 [main] DEBUG PropertyBinder - MetadataSourceProcessor property apiKey with lazy=false
2023-05-21 20:36:26,582 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:apiKey]
2023-05-21 20:36:26,582 [main] DEBUG BasicValueBinder - building BasicValue for apiKey
2023-05-21 20:36:26,582 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.api_key
2023-05-21 20:36:26,582 [main] DEBUG PropertyBinder - Building property apiKey
2023-05-21 20:36:26,582 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=url, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,582 [main] DEBUG PropertyBinder - MetadataSourceProcessor property url with lazy=false
2023-05-21 20:36:26,582 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:url]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for url
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.url
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - Building property url
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(jenkins_setting), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:36:26,598 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting:username]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: jenkins_setting.username
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:36:26,598 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN
2023-05-21 20:36:26,598 [main] DEBUG EntityBinder - Binding entity from annotated class: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-05-21 20:36:26,598 [main] DEBUG EntityBinder - Import with entity name User
2023-05-21 20:36:26,598 [main] DEBUG EntityBinder - Bind entity io.github.nishadchayanakhawa.testcompanion.model.User on table users
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,598 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:36:26,598 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2023-05-21 20:36:26,598 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:username]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for username
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: users.username
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - Building property username
2023-05-21 20:36:26,598 [main] DEBUG BinderHelper - #makeIdGenerator(BasicValue([Column(username)]), username, assigned, , ...)
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2023-05-21 20:36:26,598 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:email]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for email
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: users.email
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - Building property email
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
2023-05-21 20:36:26,598 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:firstName]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for firstName
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: users.first_name
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - Building property firstName
2023-05-21 20:36:26,598 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,598 [main] DEBUG PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
2023-05-21 20:36:26,598 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:lastName]
2023-05-21 20:36:26,598 [main] DEBUG BasicValueBinder - building BasicValue for lastName
2023-05-21 20:36:26,598 [main] DEBUG BasicValue - Skipping column re-registration: users.last_name
2023-05-21 20:36:26,613 [main] DEBUG PropertyBinder - Building property lastName
2023-05-21 20:36:26,613 [HikariPool-1 connection adder] DEBUG HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:36:26,613 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,613 [main] DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2023-05-21 20:36:26,613 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:password]
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - building BasicValue for password
2023-05-21 20:36:26,613 [main] DEBUG BasicValue - Skipping column re-registration: users.password
2023-05-21 20:36:26,613 [main] DEBUG PropertyBinder - Building property password
2023-05-21 20:36:26,613 [main] DEBUG AnnotatedColumn - Binding column: Column{table=Table(users), mappingColumn=role, insertable=true, updatable=true, unique=false}
2023-05-21 20:36:26,613 [main] DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2023-05-21 20:36:26,613 [main] DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [io.github.nishadchayanakhawa.testcompanion.model.User:role]
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - building BasicValue for role
2023-05-21 20:36:26,613 [main] DEBUG BasicValue - Skipping column re-registration: users.role
2023-05-21 20:36:26,613 [main] DEBUG PropertyBinder - Building property role
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for apiKey
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for url
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for username
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for email
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for firstName
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for lastName
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for password
2023-05-21 20:36:26,613 [main] DEBUG BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for role
2023-05-21 20:36:26,613 [main] DEBUG PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [jenkins_setting]
2023-05-21 20:36:26,613 [main] DEBUG PrimaryKey - Forcing column [username] to be non-null as it is part of the primary key for table [users]
2023-05-21 20:36:26,661 [main] DEBUG SessionFactoryImpl - Building session factory
2023-05-21 20:36:26,726 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:36:26,726 [main] DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2023-05-21 20:36:26,726 [main] DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=17, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@29a08daf, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\git\test-companion\test-companion-library\target\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=17, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Program Files\Java\jdk-17\bin, sun.java.command=C:\Users\nisha\AppData\Local\Temp\surefire1668499473051775381\surefirebooter234022168716721210.jar C:\Users\nisha\AppData\Local\Temp\surefire1668499473051775381 2023-05-21T20-35-56_474-jvmRun1 surefire17268351087753667152tmp surefire_16495775987047431072tmp, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@64bc291b, jdk.debug=release, surefire.test.class.path=C:\Users\nisha\git\test-companion\test-companion-webapp\target\test-classes;C:\Users\nisha\git\test-companion\test-companion-webapp\target\classes;C:\Users\nisha\git\test-companion\test-companion-library\target\test-companion-library-1.0.0.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.1.4\httpclient5-5.1.4.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.1.5\httpcore5-5.1.5.jar;C:\Users\nisha\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.1.5\httpcore5-h2-5.1.5.jar;C:\Users\nisha\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.6\spring-boot-starter-web-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.6\spring-boot-starter-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot\3.0.6\spring-boot-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.6\spring-boot-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.0.6\spring-boot-starter-logging-3.0.6.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-classic\1.4.7\logback-classic-1.4.7.jar;C:\Users\nisha\.m2\repository\ch\qos\logback\logback-core\1.4.7\logback-core-1.4.7.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.19.0\log4j-to-slf4j-2.19.0.jar;C:\Users\nisha\.m2\repository\org\apache\logging\log4j\log4j-api\2.19.0\log4j-api-2.19.0.jar;C:\Users\nisha\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\nisha\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.6\spring-boot-starter-json-3.0.6.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.2\jackson-databind-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.2\jackson-annotations-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.2\jackson-core-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.2\jackson-datatype-jdk8-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.2\jackson-datatype-jsr310-2.14.2.jar;C:\Users\nisha\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.2\jackson-module-parameter-names-2.14.2.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.6\spring-boot-starter-tomcat-3.0.6.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.8\tomcat-embed-core-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.8\tomcat-embed-el-10.1.8.jar;C:\Users\nisha\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.8\tomcat-embed-websocket-10.1.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-web\6.0.8\spring-web-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-beans\6.0.8\spring-beans-6.0.8.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-observation\1.10.6\micrometer-observation-1.10.6.jar;C:\Users\nisha\.m2\repository\io\micrometer\micrometer-commons\1.10.6\micrometer-commons-1.10.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-webmvc\6.0.8\spring-webmvc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-context\6.0.8\spring-context-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-expression\6.0.8\spring-expression-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.6\spring-boot-starter-data-jpa-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.6\spring-boot-starter-aop-3.0.6.jar;C:\Users\nisha\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.6\spring-boot-starter-jdbc-3.0.6.jar;C:\Users\nisha\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jdbc\6.0.8\spring-jdbc-6.0.8.jar;C:\Users\nisha\.m2\repository\org\hibernate\orm\hibernate-core\6.1.7.Final\hibernate-core-6.1.7.Final.jar;C:\Users\nisha\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\nisha\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\nisha\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\nisha\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\nisha\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\nisha\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy\1.12.23\byte-buddy-1.12.23.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\nisha\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\nisha\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\nisha\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\nisha\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\nisha\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-jpa\3.0.5\spring-data-jpa-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\data\spring-data-commons\3.0.5\spring-data-commons-3.0.5.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-orm\6.0.8\spring-orm-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-tx\6.0.8\spring-tx-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aspects\6.0.8\spring-aspects-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.0.6\spring-boot-starter-thymeleaf-3.0.6.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.6\spring-boot-starter-security-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-aop\6.0.8\spring-aop-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-config\6.0.3\spring-security-config-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-web\6.0.3\spring-security-web-6.0.3.jar;C:\Users\nisha\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity6\3.1.1.RELEASE\thymeleaf-extras-springsecurity6-3.1.1.RELEASE.jar;C:\Users\nisha\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\nisha\.m2\repository\org\modelmapper\modelmapper\3.1.0\modelmapper-3.1.0.jar;C:\Users\nisha\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.0.6\spring-boot-starter-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test\3.0.6\spring-boot-test-3.0.6.jar;C:\Users\nisha\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.0.6\spring-boot-test-autoconfigure-3.0.6.jar;C:\Users\nisha\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\nisha\.m2\repository\net\minidev\json-smart\2.4.10\json-smart-2.4.10.jar;C:\Users\nisha\.m2\repository\net\minidev\accessors-smart\2.4.9\accessors-smart-2.4.9.jar;C:\Users\nisha\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\nisha\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\nisha\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\nisha\.m2\repository\org\assertj\assertj-core\3.23.1\assertj-core-3.23.1.jar;C:\Users\nisha\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.2\junit-jupiter-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.2\junit-jupiter-api-5.9.2.jar;C:\Users\nisha\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-commons\1.9.2\junit-platform-commons-1.9.2.jar;C:\Users\nisha\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.2\junit-jupiter-params-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.2\junit-jupiter-engine-5.9.2.jar;C:\Users\nisha\.m2\repository\org\junit\platform\junit-platform-engine\1.9.2\junit-platform-engine-1.9.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-core\4.8.1\mockito-core-4.8.1.jar;C:\Users\nisha\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.23\byte-buddy-agent-1.12.23.jar;C:\Users\nisha\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\nisha\.m2\repository\org\mockito\mockito-junit-jupiter\4.8.1\mockito-junit-jupiter-4.8.1.jar;C:\Users\nisha\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\nisha\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-core\6.0.8\spring-core-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-jcl\6.0.8\spring-jcl-6.0.8.jar;C:\Users\nisha\.m2\repository\org\springframework\spring-test\6.0.8\spring-test-6.0.8.jar;C:\Users\nisha\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-test\6.0.3\spring-security-test-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-core\6.0.3\spring-security-core-6.0.3.jar;C:\Users\nisha\.m2\repository\org\springframework\security\spring-security-crypto\6.0.3\spring-security-crypto-6.0.3.jar;, sun.cpu.endian=little, user.home=C:\Users\nisha, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=C:\Program Files\Java\jdk-17, file.separator=\, basedir=C:\Users\nisha\git\test-companion\test-companion-webapp, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=windows-1252, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\nisha\AppData\Local\Temp\surefire1668499473051775381\surefirebooter234022168716721210.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.7+8-LTS-224, user.name=nisha, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, localRepository=C:\Users\nisha\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\nisha\AppData\Local\Temp\, catalina.home=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.9692459323973561796, java.version=17.0.7, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\nisha\git\test-companion\test-companion-webapp, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9476, sun.os.patch.level=, CONSOLE_LOG_CHARSET=windows-1252, catalina.base=C:\Users\nisha\AppData\Local\Temp\tomcat.8999.9692459323973561796, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@13e771e6, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\System32;C:\Windows;C:\Windows\System32\wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Maven\apache-maven-3.9.1\bin;C:\Program Files\PuTTY\;C:\Program Files (x86)\GnuPG\bin;C:\Users\nisha\AppData\Local\Microsoft\WindowsApps;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=61.0}
2023-05-21 20:36:26,726 [main] DEBUG SessionFactoryImpl - Instantiated session factory
2023-05-21 20:36:26,739 [main] DEBUG cache - Starting QueryPlanCache(2048)
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@692e4a35] under count; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2fbe13f3] under every; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2bc239ff] under any; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registering alternate key : length -> character_length
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@69530799] under position; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@231e72e1] under overlay; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3059e367] under trim; prior registration was null
2023-05-21 20:36:26,834 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5881e498] under cast; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cc226b0] under collate; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4eb016a7] under extract; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@e93f8b4] under ifnull; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7f4358b8] under pad; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2c1e726b] under str; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@438e6a90] under format; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@be906aa] under timestampadd; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6009e8ab] under timestampdiff; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13253ac7] under current_date; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@503224b4] under current_time; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@583eecde] under current_timestamp; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current date -> current_date
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current time -> current_time
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@52f85a6c] under local_date; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6831b1f6] under local_time; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29673fc0] under local_datetime; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6906e2e] under offset_datetime; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local date -> local_date
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local time -> local_time
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@16ab7faa] under instant; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : current_instant -> instant
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5e971f6a] under sql; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@76968f03] under count; prior registration was org.hibernate.dialect.function.CountFunction@692e4a35
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@54c6506d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : day -> day_of_month
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6831b1f6
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@29673fc0
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : chr -> char
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29cdc8ba] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@69530799
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e74dac2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : every -> bool_and
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registering alternate key : any -> bool_or
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@80b741] under format; prior registration was org.hibernate.dialect.function.FormatFunction@438e6a90
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1e2ea153] under listagg; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@209a490a] under mode; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4f9e5d0e] under percentile_cont; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@32862888] under percentile_disc; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6e6285d3] under rank; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f856849] under dense_rank; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@93235f1] under percent_rank; prior registration was null
2023-05-21 20:36:26,850 [main] DEBUG SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6185cb4d] under cume_dist; prior registration was null
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - abs(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double acos(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer ascii(STRING arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double asin(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double atan(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double avg(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - bit_and(arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - bit_or(arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - bitand(arg0, arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - bitor(arg0, arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - bitxor(arg0, arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean bool_and(BOOLEAN predicate)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean bool_or(BOOLEAN predicate)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - cast(arg as Type)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - ceiling(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Character char(INTEGER arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double cos(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double cot(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Long count([distinct ]{arg|*})
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Date curdate()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Date current_date
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Time current_time
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Timestamp current_timestamp
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Time curtime()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer day_of_month(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer day_of_week(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer day_of_year(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String dayname(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double degrees(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double exp(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - first_valueANY value
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - floor(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer hour(TIME arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - ifnull(arg0, arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Instant instant
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - last_valueANY value
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String left(STRING string, INTEGER length)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double ln(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalDate local_date
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local_datetime
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalTime local_time
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Time localtime
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Timestamp localtimestamp
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double log10(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String lower(STRING string)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String lpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String ltrim(STRING string)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - max(COMPARABLE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double median(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer microsecond(TIME arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - min(COMPARABLE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer minute(TIME arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - mode()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer month(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String monthname(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Timestamp now()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - nullif(arg0, arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset_datetime
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - percentile_cont(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - percentile_disc(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double pi()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer quarter(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double radians(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double rand([INTEGER seed])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Long rank([arg0[, ...]])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String right(STRING string, INTEGER length)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - round(NUMERIC arg0, INTEGER arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Long row_number()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Long rownum()
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String rpad(STRING string, INTEGER length[, STRING padding])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String rtrim(STRING string)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer second(TIME arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer sign(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double sin(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String soundex(arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String space(INTEGER arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Object sql
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String str(arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - sum(arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Timestamp sysdate
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double tan(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String translate(STRING arg0, STRING arg1, STRING arg2)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double truncate(NUMERIC number, INTEGER places)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - String upper(STRING string)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer week(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer year(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean any(BOOLEAN predicate)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Character chr(INTEGER arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Date current date
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Time current time
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Timestamp current timestamp
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Instant current_instant
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer day(DATE arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Boolean every(BOOLEAN predicate)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalDate local date
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalDateTime local datetime
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - LocalTime local time
2023-05-21 20:36:26,865 [main] DEBUG HQL_FUNCTIONS - OffsetDateTime offset datetime
2023-05-21 20:36:26,865 [main] DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5521f423] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@671d7871]
2023-05-21 20:36:26,959 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] is safe
2023-05-21 20:36:26,959 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:36:27,227 [main] DEBUG ClassLoaderAccessImpl - Not known whether passed class name [io.github.nishadchayanakhawa.testcompanion.model.User] is safe
2023-05-21 20:36:27,227 [main] DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:36:27,274 [main] DEBUG creation - Starting post-init callbacks
2023-05-21 20:36:27,274 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) `staticFetchableList` generator
2023-05-21 20:36:27,274 [main] DEBUG creation - Starting PostInitCallbackEntry : Entity(io.github.nishadchayanakhawa.testcompanion.model.User) `staticFetchableList` generator
2023-05-21 20:36:27,289 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting
2023-05-21 20:36:27,289 [main] DEBUG AbstractEntityPersister -  Version select: select id from jenkins_setting where id =?
2023-05-21 20:36:27,289 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:36:27,289 [main] DEBUG AbstractEntityPersister -  Update 0: update jenkins_setting set api_key=?, url=?, username=? where id=?
2023-05-21 20:36:27,289 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from jenkins_setting where id=?
2023-05-21 20:36:27,305 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:36:27,305 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:36:27,337 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:36:27,337 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:36:27,352 [main] DEBUG AbstractEntityPersister - Static SQL for entity: io.github.nishadchayanakhawa.testcompanion.model.User
2023-05-21 20:36:27,352 [main] DEBUG AbstractEntityPersister -  Version select: select username from users where username =?
2023-05-21 20:36:27,352 [main] DEBUG AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:27,352 [main] DEBUG AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:36:27,352 [main] DEBUG AbstractEntityPersister -  Delete 0: delete from users where username=?
2023-05-21 20:36:27,352 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:27,352 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:27,352 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:36:27,352 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:27,383 [main] DEBUG NamedObjectRepository - Checking 0 named HQL queries
2023-05-21 20:36:27,383 [main] DEBUG NamedObjectRepository - Checking 0 named SQL queries
2023-05-21 20:36:27,462 [main] DEBUG SQL - create table jenkins_setting (id integer not null, api_key varchar(255), url varchar(255), username varchar(255), primary key (id))
2023-05-21 20:36:27,462 [main] DEBUG SQL - create table users (username varchar(255) not null, email varchar(255), first_name varchar(255), last_name varchar(255), password varchar(255), role smallint, primary key (username))
2023-05-21 20:36:27,462 [main] DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-05-21 20:36:27,462 [main] DEBUG EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
2023-05-21 20:36:27,478 [main] DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@16a7a6a
2023-05-21 20:36:27,478 [main] DEBUG SessionFactoryRegistry - Registering SessionFactory: f13d6a62-a021-43e0-859e-0c2bf93d5c15 (<unnamed>)
2023-05-21 20:36:27,478 [main] DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2023-05-21 20:36:27,619 [main] DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2023-05-21 20:36:27,745 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:36:27,827 [main] DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1003)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:866)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy2/jdk.proxy2.$Proxy113.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:115)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:144)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:710)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:693)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:133)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:482)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:310)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1388)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:545)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:184)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:127)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:141)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:241)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:377)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:376)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:289)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:288)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
2023-05-21 20:36:28,074 [main] DEBUG Mappings - 
	i.g.n.t.c.a.JenkinsSettingProcessingApi:
	{GET [/api/jenkinsSetting]}: getJenkinsSetting()
	{PUT [/api/jenkinsSetting]}: saveJenkinsSetting(JenkinsSetting)
	{POST [/api/jenkinsSetting]}: testJenkinsSetting(JenkinsSetting)
2023-05-21 20:36:28,090 [main] DEBUG Mappings - 
	i.g.n.t.c.a.UserProcessingApi:
	{PUT [/api/user]}: addUser(User)
	{GET [/api/user]}: getAllUsers()
	{DELETE [/api/user/{username}]}: deleteUser(String)
	{GET [/api/user/{username}]}: getUser(String)
2023-05-21 20:36:28,090 [main] DEBUG Mappings - 
	i.g.n.t.c.ApplicationHomeController:
	{GET [/home]}: getHomePage()
	{GET [/login]}: getLoginPage()
	{GET [/setting/usermanagement]}: getUserManagementPage()
2023-05-21 20:36:28,090 [main] DEBUG Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-05-21 20:36:28,106 [main] DEBUG Mappings - 'beanNameHandlerMapping' {}
2023-05-21 20:36:28,233 [main] DEBUG Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-05-21 20:36:28,688 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:28,688 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:28,751 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:28,751 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:28,766 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500).role]

2023-05-21 20:36:28,766 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:28,766 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:28,798 [main] DEBUG results - Initializer list
2023-05-21 20:36:28,798 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(45058764474500))@774254855 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:28,798 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:36:28,798 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:28,876 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:28,876 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:28,876 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:28,891 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:28,891 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:28,891 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User.role]

2023-05-21 20:36:28,891 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:28,891 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:28,891 [main] DEBUG results - Initializer list
2023-05-21 20:36:28,891 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@110035578 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:28,891 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:28,891 [main] DEBUG AbstractSaveEventListener - Generated identifier: admin, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:28,907 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:28,907 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:28,907 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:28,907 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:28,907 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:28,907 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:28,907 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Admin, lastName=LNU, password=$2a$10$R5UFKEMZytF7fImGK21F3uuLDncHZB8P6HxWOxFnaCi.JvY/VYCNe, role=ADMIN, email=admin@organization.com, username=admin}
2023-05-21 20:36:28,907 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:28,923 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:28,970 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:28,970 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:28,970 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:28,970 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:28,970 [main] DEBUG results - Initializer list
2023-05-21 20:36:28,970 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1542452726 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:28,970 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:28,970 [main] DEBUG AbstractSaveEventListener - Generated identifier: tester, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:28,970 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:28,970 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:28,970 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:28,970 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:28,970 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:28,970 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:28,970 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Tester, lastName=LNU, password=$2a$10$CgwGfNvXbZMxfl40KPrVPOnrIgX6pd3PBR2Ean5dAKnra340J6zVa, role=TESTER, email=tester@organization.com, username=tester}
2023-05-21 20:36:28,970 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:28,970 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:29,033 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:29,033 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:29,033 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:29,033 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:29,033 [main] DEBUG results - Initializer list
2023-05-21 20:36:29,033 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@45575934 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:29,033 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:29,033 [main] DEBUG AbstractSaveEventListener - Generated identifier: user, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:29,033 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:29,033 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:29,033 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:29,033 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:29,033 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:29,033 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:29,033 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=User, lastName=LNU, password=$2a$10$WOf4eQldkElmomP7J5WIU.Xnh.PX9MXaytGN93.st3LX3XDgVR3h., role=USER, email=user.com, username=user}
2023-05-21 20:36:29,033 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:29,033 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:29,597 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:29,597 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:29,597 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@540d1cfd
2023-05-21 20:36:29,597 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).username) 
2023-05-21 20:36:29,597 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).role]

2023-05-21 20:36:29,597 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:29,597 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:29,597 [main] DEBUG results - Initializer list
2023-05-21 20:36:29,597 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))@488795907 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:29,597 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:36:29,613 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)): admin
2023-05-21 20:36:29,613 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@2f887ce5
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$R5UFKEMZytF7fImGK21F3uuLDncHZB8P6HxWOxFnaCi.JvY/VYCNe]
2023-05-21 20:36:29,613 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:36:29,613 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#admin
2023-05-21 20:36:29,613 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24b75efc
2023-05-21 20:36:29,755 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:29,755 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:29,755 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:29,755 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:36:29,755 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:36:29,755 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting.username]

2023-05-21 20:36:29,755 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:36:29,755 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:29,755 [main] DEBUG results - Initializer list
2023-05-21 20:36:29,755 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting)@100985205 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:36:29,755 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:36:29,755 [main] DEBUG AbstractSaveEventListener - Generated identifier: 1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:29,770 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:29,770 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:29,770 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:29,770 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:29,770 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:29,770 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:29,770 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting{apiKey=11ee84e97dbc4da1ddc4f3bdde05d3bfc8, id=1, url=http://103.160.144.199:8080, username=nishad}
2023-05-21 20:36:29,770 [main] DEBUG SQL - insert into jenkins_setting (api_key, url, username, id) values (?, ?, ?, ?)
2023-05-21 20:36:29,770 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:29,786 [main] DEBUG InternalHttpClient - ex-0000000001 preparing request execution
2023-05-21 20:36:29,786 [main] DEBUG RequestAddCookies - ex-0000000001 Cookie spec selected: strict
2023-05-21 20:36:29,801 [main] DEBUG RequestAuthCache - ex-0000000001 Auth cache not set in the context
2023-05-21 20:36:29,801 [main] DEBUG ProtocolExec - ex-0000000001 proxy auth state: UNCHALLENGED
2023-05-21 20:36:29,801 [main] DEBUG ConnectExec - ex-0000000001 acquiring connection with route {}->http://103.160.144.199:8080
2023-05-21 20:36:29,801 [main] DEBUG InternalHttpClient - ex-0000000001 acquiring endpoint (3 MINUTES)
2023-05-21 20:36:29,801 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint lease request (3 MINUTES) [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2023-05-21 20:36:29,801 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 endpoint leased [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:36:29,817 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000001 acquired ep-0000000001
2023-05-21 20:36:29,817 [main] DEBUG InternalHttpClient - ex-0000000001 acquired endpoint ep-0000000001
2023-05-21 20:36:29,817 [main] DEBUG ConnectExec - ex-0000000001 opening connection {}->http://103.160.144.199:8080
2023-05-21 20:36:29,817 [main] DEBUG InternalHttpClient - ep-0000000001 connecting endpoint (3 MINUTES)
2023-05-21 20:36:29,817 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connecting endpoint to http://103.160.144.199:8080 (3 MINUTES)
2023-05-21 20:36:29,817 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connecting to /103.160.144.199:8080
2023-05-21 20:36:29,864 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-0 connection established 192.168.68.110:52999<->103.160.144.199:8080
2023-05-21 20:36:29,864 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connected http-outgoing-0
2023-05-21 20:36:29,864 [main] DEBUG InternalHttpClient - ep-0000000001 endpoint connected
2023-05-21 20:36:29,864 [main] DEBUG MainClientExec - ex-0000000001 executing GET / HTTP/1.1
2023-05-21 20:36:29,864 [main] DEBUG InternalHttpClient - ep-0000000001 start execution ex-0000000001
2023-05-21 20:36:29,864 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 executing exchange ex-0000000001 over http-outgoing-0
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> GET / HTTP/1.1
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> Authorization: Basic aW52YWxpZDppbnZhbGlk
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> Accept-Encoding: gzip, x-gzip, deflate
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> Host: 103.160.144.199:8080
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> Connection: keep-alive
2023-05-21 20:36:29,864 [main] DEBUG headers - http-outgoing-0 >> User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "GET / HTTP/1.1[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "Authorization: Basic aW52YWxpZDppbnZhbGlk[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "Host: 103.160.144.199:8080[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "Connection: keep-alive[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)[\r][\n]"
2023-05-21 20:36:29,864 [main] DEBUG wire - http-outgoing-0 >> "[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "HTTP/1.1 401 Unauthorized[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "X-Content-Type-Options: nosniff[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "Set-Cookie: remember-me=; Path=/; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "WWW-Authenticate: Basic realm="Jenkins"[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "Cache-Control: must-revalidate,no-cache,no-store[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "Content-Type: text/html;charset=iso-8859-1[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "Content-Length: 450[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "Server: Jetty(10.0.13)[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "[\r][\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<html>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<head>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1"/>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<title>Error 401 Unauthorized</title>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "</head>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<body><h2>HTTP ERROR 401 Unauthorized</h2>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<table>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<tr><th>URI:</th><td>/</td></tr>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<tr><th>STATUS:</th><td>401</td></tr>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<tr><th>MESSAGE:</th><td>Unauthorized</td></tr>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<tr><th>SERVLET:</th><td>Stapler</td></tr>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "</table>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "<hr/><a href="https://eclipse.org/jetty">Powered by Jetty:// 10.0.13</a><hr/>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "</body>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG wire - http-outgoing-0 << "</html>[\n]"
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << HTTP/1.1 401 Unauthorized
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << X-Content-Type-Options: nosniff
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << Set-Cookie: remember-me=; Path=/; Expires=Thu, 01-Jan-1970 00:00:00 GMT; Max-Age=0
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << WWW-Authenticate: Basic realm="Jenkins"
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << Cache-Control: must-revalidate,no-cache,no-store
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << Content-Type: text/html;charset=iso-8859-1
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << Content-Length: 450
2023-05-21 20:36:30,104 [main] DEBUG headers - http-outgoing-0 << Server: Jetty(10.0.13)
2023-05-21 20:36:30,119 [main] DEBUG MainClientExec - ex-0000000001 connection can be kept alive for 3 MINUTES
2023-05-21 20:36:30,119 [main] DEBUG ResponseProcessCookies - ex-0000000001 Cookie accepted [remember-me="", domain:103.160.144.199, path:/, expiry:Sun May 21 20:36:30 IST 2023]
2023-05-21 20:36:30,119 [main] DEBUG HttpAuthenticator - ex-0000000001 Authentication required
2023-05-21 20:36:30,119 [main] DEBUG HttpAuthenticator - ex-0000000001 103.160.144.199:8080 requested authentication
2023-05-21 20:36:30,119 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001 Authentication schemes in the order of preference: [Negotiate, Kerberos, NTLM, Digest, Basic]
2023-05-21 20:36:30,119 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Negotiate authentication scheme not available
2023-05-21 20:36:30,119 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Kerberos authentication scheme not available
2023-05-21 20:36:30,119 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for NTLM authentication scheme not available
2023-05-21 20:36:30,119 [main] DEBUG DefaultAuthenticationStrategy - ex-0000000001, Challenge for Digest authentication scheme not available
2023-05-21 20:36:30,119 [main] DEBUG HttpAuthenticator - ex-0000000001 Selecting authentication options
2023-05-21 20:36:30,119 [main] DEBUG BasicScheme - ex-0000000001 No credentials found for auth scope [Basic 'Jenkins' http://103.160.144.199:8080]
2023-05-21 20:36:30,119 [main] DEBUG InternalHttpClient - ep-0000000001 releasing valid endpoint
2023-05-21 20:36:30,119 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 releasing endpoint
2023-05-21 20:36:30,119 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection http-outgoing-0 can be kept alive for 3 MINUTES
2023-05-21 20:36:30,119 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000001 connection released [route: {}->http://103.160.144.199:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:36:30,119 [main] DEBUG PoolingHttpClientConnectionManager - Shutdown connection pool GRACEFUL
2023-05-21 20:36:30,119 [main] DEBUG DefaultManagedHttpClientConnection - http-outgoing-0 close connection GRACEFUL
2023-05-21 20:36:30,119 [main] DEBUG PoolingHttpClientConnectionManager - Connection pool shut down
2023-05-21 20:36:30,135 [main] DEBUG create - Created new SQL alias : j1_0
2023-05-21 20:36:30,135 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting] 
2023-05-21 20:36:30,135 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@707976f2
2023-05-21 20:36:30,135 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100).id) 
2023-05-21 20:36:30,135 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100).apiKey]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100).url]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100).username]

2023-05-21 20:36:30,135 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (j1 : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100)) {
          primaryTableReference : jenkins_setting as j1_0
        }
      }
    }

2023-05-21 20:36:30,135 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,135 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,135 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100))@382803240 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting))
2023-05-21 20:36:30,135 [main] DEBUG SQL - select j1_0.id,j1_0.api_key,j1_0.url,j1_0.username from jenkins_setting j1_0 where j1_0.id=?
2023-05-21 20:36:30,135 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:36:30,135 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100)): 1
2023-05-21 20:36:30,135 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100)#1] : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting@5c33b337
2023-05-21 20:36:30,135 [main] DEBUG results - Extracted JDBC value [1] - [11ee84e97dbc4da1ddc4f3bdde05d3bfc8]
2023-05-21 20:36:30,135 [main] DEBUG results - Extracted JDBC value [2] - [http://103.160.144.199:8080]
2023-05-21 20:36:30,135 [main] DEBUG results - Extracted JDBC value [3] - [nishad]
2023-05-21 20:36:30,135 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.JenkinsSetting(45057892051100)#1
2023-05-21 20:36:30,135 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4215cdc4
2023-05-21 20:36:30,151 [main] DEBUG InternalHttpClient - ex-0000000002 preparing request execution
2023-05-21 20:36:30,151 [main] DEBUG RequestAddCookies - ex-0000000002 Cookie spec selected: strict
2023-05-21 20:36:30,151 [main] DEBUG RequestAuthCache - ex-0000000002 Auth cache not set in the context
2023-05-21 20:36:30,151 [main] DEBUG ProtocolExec - ex-0000000002 proxy auth state: UNCHALLENGED
2023-05-21 20:36:30,151 [main] DEBUG ConnectExec - ex-0000000002 acquiring connection with route {}->http://103.160.144.199:8080
2023-05-21 20:36:30,151 [main] DEBUG InternalHttpClient - ex-0000000002 acquiring endpoint (3 MINUTES)
2023-05-21 20:36:30,151 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 endpoint lease request (3 MINUTES) [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 0 of 5; total allocated: 0 of 25]
2023-05-21 20:36:30,151 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 endpoint leased [route: {}->http://103.160.144.199:8080][total available: 0; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:36:30,151 [main] DEBUG PoolingHttpClientConnectionManager - ex-0000000002 acquired ep-0000000002
2023-05-21 20:36:30,151 [main] DEBUG InternalHttpClient - ex-0000000002 acquired endpoint ep-0000000002
2023-05-21 20:36:30,151 [main] DEBUG ConnectExec - ex-0000000002 opening connection {}->http://103.160.144.199:8080
2023-05-21 20:36:30,151 [main] DEBUG InternalHttpClient - ep-0000000002 connecting endpoint (3 MINUTES)
2023-05-21 20:36:30,151 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connecting endpoint to http://103.160.144.199:8080 (3 MINUTES)
2023-05-21 20:36:30,151 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-1 connecting to /103.160.144.199:8080
2023-05-21 20:36:30,182 [main] DEBUG DefaultHttpClientConnectionOperator - http-outgoing-1 connection established 192.168.68.110:53000<->103.160.144.199:8080
2023-05-21 20:36:30,182 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connected http-outgoing-1
2023-05-21 20:36:30,182 [main] DEBUG InternalHttpClient - ep-0000000002 endpoint connected
2023-05-21 20:36:30,182 [main] DEBUG MainClientExec - ex-0000000002 executing GET / HTTP/1.1
2023-05-21 20:36:30,182 [main] DEBUG InternalHttpClient - ep-0000000002 start execution ex-0000000002
2023-05-21 20:36:30,182 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 executing exchange ex-0000000002 over http-outgoing-1
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> GET / HTTP/1.1
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> Accept-Encoding: gzip, x-gzip, deflate
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> Host: 103.160.144.199:8080
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> Connection: keep-alive
2023-05-21 20:36:30,182 [main] DEBUG headers - http-outgoing-1 >> User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "GET / HTTP/1.1[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "Authorization: Basic bmlzaGFkOjExZWU4NGU5N2RiYzRkYTFkZGM0ZjNiZGRlMDVkM2JmYzg=[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "Accept-Encoding: gzip, x-gzip, deflate[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "Host: 103.160.144.199:8080[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "Connection: keep-alive[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "User-Agent: Apache-HttpClient/5.1.4 (Java/17.0.7)[\r][\n]"
2023-05-21 20:36:30,182 [main] DEBUG wire - http-outgoing-1 >> "[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "HTTP/1.1 200 OK[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Date: Sun, 21 May 2023 15:06:30 GMT[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Content-Type-Options: nosniff[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Content-Type: text/html;charset=utf-8[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Expires: Thu, 01 Jan 1970 00:00:00 GMT[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Cache-Control: no-cache,no-store,must-revalidate[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Hudson-Theme: default[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Referrer-Policy: same-origin[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Cross-Origin-Opener-Policy: same-origin[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Set-Cookie: JSESSIONID.ce58f1e1=node0105r1ag51s47a1luqbqswipnbu71.node0; Path=/; HttpOnly[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Hudson: 1.395[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Jenkins: 2.387.3[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Jenkins-Session: 0408bb8f[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Frame-Options: sameorigin[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Content-Encoding: gzip[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Content-Length: 6816[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "Server: Jetty(10.0.13)[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[\r][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x1f][0xffffff8b][0x8][0x0][0x0][0x0][0x0][0x0][0x0][0xffffffff][0xffffffed]\k[0xffffff93][0xffffffdb][0xffffffc6][0xffffff95][0xfffffffd][0xffffffee]_[0xffffffd1][0xffffffa1]?([0xffffffd9][0x10]`[0xffffffbf][0xffffffd0]hx5[0xffffff93][0xffffff92][0xffffffc7]N[0xffffffd9][0xffffffa9][0xffffff91][0xffffffed][0xffffffb5][0x1c]g7[[*[0xc][0xffffff89][0x19]B[0x2][0x9][0x6][0x0]G[0x1a][0xffffffff][0xfffffffa]=[0xffffffa7][0x1][0xffffffbe]f8[0xffffffd2][0xffffffe8][0xffffffe5][0xffffffb8]R[0xffffff91]=$[0xffffffd0][0xffffffe8][0xffffffbe]}[0xfffffffb][0xffffffbe][0xffffffef][0xffffffed][0x6]?[0x13][0xffffffe2]3![0x1e][0xffffffff][0xffffffee][0xffffffab][0xffffffef][0xffffffcf]~[0xfffffffa][0xffffff9f][0x1f][0xffffffbe][0x16][0xfffffff3]nQ[0xffffff9d]>[0x1e]>[0xffffff8b]|&[0xffffff9a][0xffffffa2][0xfffffffd][0xffffffeb][0xffffff8f][0xffffffe7]'[0xffffffa3]I[0xffffffdb][0xffffffe5]]9[0xffffff9d]H+[0xfffffffd][0xffffffc5][0xffffff85][0xffffffbf][0x1c][0xffffff89]Y[0xffffffde][0xffffffe5]QS[0xffffffd7][0xffffffdd][0xffffffba][0xffffffa9]NF[0xffffff9b][0xfffffffb][0xffffffa2][\r][0xffffffb7][0xfffffff7]t/^w[0xffffffc5][0xffffffb2]-[0xffffffeb]e[0x1b][0xffffffe5][0xffffffd7]yY[0xffffffe5][0x17]Uq2[0xffffffea][0xffffff9a]u1tX/[0xffffffcb].[0xffffffea][0xffffff8a][0xffffffb6];[0x19]][0xffffffe6]U[0xffffffbb]i.[0x17][0xfffffff9][0xffffffd5]=[0xffffff90]'[0xfffffffd][0xffffffb3][0xffffffa1][0xffffffe3][0xffffffb4]Y/."b^4'[0xffffffa3][0xffffffbf][0x14][0xffffffcb][0xffffff97]%[0xffffffe6]:c[0xffffffeb]A[0xffffff8f][0xffffffeb][0xffffffbc]Zc[0xffffffe6][0xffffff8b]bZ[0xffffffc8]T[0xffffffcf]d[0xffffff92][0x17]R{[0xffffff9d]Ng[0xffffffb6][0xffffff98]ei[0xffffff91][0xfffffffa][0xffffffcc][0xfffffff8][0xffffffa9][0xffffffbf]0[0xffffffd6][0xffffff9b][0xffffffe9][0xffffffa5][0xffffff93][0xffffff97][0xffffffb3]$[0xffffffc9][0xfffffffd]e[0xffffffe2][0xffffffd2][0xffffffc2]io.[0xffffffad][0xffffffbe]L[0xffffff94]3[0xffffffa3]SP/[0xffffff90][0x10][0x1f][0xffffffe1][0xfffffff3]qWvUq[0xfffffffa]U[0xffffffde][0xffffffce]/[0xffffffea][0xffffffbc][0xffffff99][0xffffff89][0xffffffff][0x1d][0xffffff90][0xfffffff8][0xffffffbf][0xffffffc7][0xffffff93][0xfffffffe][0xffffffd1][0xffffffe3][0xffffffaa]\[0xffffffbe][0x4]][0xffffffb1][0xffffff96][0xffffffb6][0xffffffbb][0xffffffa9][0xffffff8a]v^[0x14][0xffffffdd]H[0xffffffcc][0xffffff9b][0xffffffe2][0xfffffff2][0xffffffc8][0xffffffea]^[0xffffffb4][0x17][0xffffffeb][0xffffffe5][0xc][0xffffffbd]&}[0xffffffe7]x[0xffffffda]b[0xffffffad][0xffffffdd][0xffffffcd][0xffffff8a]t[0x3]9'[0xffffffbc][0x7f]G[0xffffff98][0x18]2[0x1][0xffffffa3]V`Cy]DWM9{+[0xffffffd8]rZ/[0xffffffef][0x5]x[0xffffff99]_[0xfffffff3]y[0xffffffdc]^_m[0xffffff80][0x4][0xffffffae]L[0xffffffd0][0xfffffff0][0xffffffc7][0xffffffd7][0xffffff8b]j[0x3][0xffffffa9]-[0x7f])[0xffffffda][0xffffff93]Q[0xffffffbe][0xffffffbc][0x19][0xfffffff5]P[0xfffffff3][0xffffffaa]+[0xffffff9a]e[0xffffffde][0x15][0xffffffe2]A[0xfffffff0][0xfffffff1]q[0xb][0xffffff94][0xfffffff2][0xfffffff2]5[0xfffffffe]6[0xffffffe0]V[0xffffffab][0xffffffaa][0xffffff88][0xffffffba]z=[0xffffff9d]Go[0x4]x[0xffffffbb]c[0xffffffbc]Z^m O[0xffffffeb][0xffffffaa][0xffffff86][0xffffffec]|[0xffffffae]2[0xffffff95][0xffffffaa]t[0xffffff80][0xffffffbc]"
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << HTTP/1.1 200 OK
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Date: Sun, 21 May 2023 15:06:30 GMT
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Content-Type-Options: nosniff
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Content-Type: text/html;charset=utf-8
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Expires: Thu, 01 Jan 1970 00:00:00 GMT
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Cache-Control: no-cache,no-store,must-revalidate
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Hudson-Theme: default
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Referrer-Policy: same-origin
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Cross-Origin-Opener-Policy: same-origin
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Set-Cookie: JSESSIONID.ce58f1e1=node0105r1ag51s47a1luqbqswipnbu71.node0; Path=/; HttpOnly
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Hudson: 1.395
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Jenkins: 2.387.3
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Jenkins-Session: 0408bb8f
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Frame-Options: sameorigin
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Content-Encoding: gzip
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnYqa/Atg1ZzYYUaitIBSSWbqvXRIQ9oaMbEiswGpZPOpKHP5DtxOgPOSGUn/8l3OLfdSvjDrZDJlnFLO8IbHbGLZvrjkdsnN903w2njv/bclD1NcZEwxiGNJB8QVDok7ytcEUUhBgqMyAj0rFhtIr6tMMm5UTmonTtRLuLsCfkd2Izl2nnij9R0hSIOxA26PQoDh/egHRQPdl6BSN0qa7fZJZVYA0OQjg9xp/sglm6N/bqV7KCp1AuG2GyAwQVgExD4er2Po4ZLiUR1giHFi1vYabN4iRGqQa9DIDpnJmavOE8+iyQwurlBQKewxH7esWBTmE8azc5r3JOl4fnZLJQIDAQAB
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Content-Length: 6816
2023-05-21 20:36:30,387 [main] DEBUG headers - http-outgoing-1 << Server: Jetty(10.0.13)
2023-05-21 20:36:30,387 [main] DEBUG MainClientExec - ex-0000000002 connection can be kept alive for 3 MINUTES
2023-05-21 20:36:30,387 [main] DEBUG ResponseProcessCookies - ex-0000000002 Cookie accepted [JSESSIONID.ce58f1e1="node0105r1ag51s47a1luqbqswipnbu71.node0", domain:103.160.144.199, path:/, expiry:null]
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffc8][0xffffffdb][0xffffff97]o[0x6][0xffffffb9][0xffffffed][0x11][0xffffffa8]p[0xfffffffa]xQt[0xffffffb9]X[0xffffffe6][0xb][0x12]t^,[0xffffff8a]([0xffffffc0][0x1d][0x1][0xfffffffc][0x12]:[0x0][0xfffffff9][0xfffffffe][0xfffffffc]2[0xfffffffc]C[0xffffffd7]v[0xffffffda][0xffffff94][0xffffffab]N[0xffffffb4][0xffffffcd][0xfffffff4][0x8][0xffffffdc][0xfffffffe]a;Y5uW[0xffffff93][0xffffffb6][0xfffffff1][0xffffff8b]CN[0xffffffbd][0xffffff80]&[0xfffffff5][0xffffff9d][0x0]j[0xffffffe8][0xfffffffe]@[0xffffff98][0x17][0xffffffc5][0x1c][0xffffff94][0xffffffad][0xffffff9b]w[0x6][0xfffffff9]h[0xffffff92][0xffffffcf]^[0xffffffac][0xffffff97]S[0xffffffc0][0xffffffd8][0x2][0xffffffad][0xffffff9b][0xffffffab][0xffffffc9][0xffffffcb]z[0xffffffde][0xffffffae]_[0x16][0xffffff9c][0x10][0x4]n&[0x17][0xffffffe5]r[0x6][0xffffffe0][0xffffff8f]z[0xffffffe0][0xffffff8f]n[0x1][0x7f][0xfffffff4][0xffffffae][0xfffffff8][0xffffffde][0xffffffac][0xffffffcb][0xffffffc9]M>[0xffffffaf][0xffffffeb][0xfffffffe]3Z[0xffffff94]K[0xffffffa2][0xfffffffe]>`f[0xfffffff5][0xffffff82][0x7f][0x1f][0x2][0xffffffa2][0xffffffb8][0x6][0x1f][0xfffffffb][0xffffffcf][0xf][0x1][0xffffff93]/[0xffffffa1]+[0x1d]l[0xffffffe2][0xffffffee][0xffffffea][0xffffff83][0x16][0xffffffd6][0xffffffe4]W[0xffffffb3][0xffffffa6]^m/>[0x4][0x18][0xffffff85]5/[0xffffff97][0xffffffe0][0xffffffe4][0xfffffff6][0xffffffea][0x3][0xffffffc1]-[0xffffff8b]iX[0xffffffeb][0xffffffee][0xfffffff2][0xffffff83][0x16][0xb][0xffffff8b][0xffffffde][0xffffffd6][0xffffffeb]fZ[0xffffffec]]~[0x10]3[0xffffffd6]]=[0xffffffad][0x17][0x10][0xffffffde][0xffffffae]8[0xffffffb8][0xfffffff9][0x10][0xffffffa0][0xffffff8b]b[0xffffffb9][0xe][0x1f][0x1f]$m[0x15][0xffffff8c][0x8][0xffffffe5][0xffffffad][0xffffffff][0xfffffffe][0x10]P[0x17][0xffffffeb][0xffffffae][0x3][0xb][0xfffffffa][0xffffffaf][0xf][0x1][0xffffffd4]vu[0x13][0xffffffcc]|[0xffffffff][0xfffffffd][0xffffffbe][0xffffffa0][0xffffffe6][0xffffffeb]Y[0xb]D[0xffffffde][0xffffffdb][0x1a][0xffffffdd][0xf][0xffffffb9][0xffffffad][0xffffff9b][0xffffff8e]1[0xffffffc6][0xffffffc3]@[0xffffffbe][0xffffff93][0x13]=[0xffffffae]&y[0xffffffdb][0x16]h[0xffffffdc]6|[0xc]w[0xfffffffd][0xffffffc6][0xffffff99]Z[0xffffffc6][0x16][0xffffff93]6_|[0xffffffba]9[0xffffff83][0xfffffff8][0xffffffde][0xffffff99][0xffffff8e][0xffffffad]o[0xffffff9f][0xffffffa9][0xffffffc8][0xffffff9b][0xffffffe9]|;K[0xffffffbd]B[0xfffffff4][0x17][0xffffff9a]bF[0x5][0xffffffc3]H:[0xffffffe3]r[0xffffffda][0xffffff9b][0xffffffc0]][0xffffff8f]Y[0xffffffd1][0xffffffe3][0xffffff80][0xffffffd6]?[0xfffffff6][0xffffff9d][0x19]=mc[0xffffffba]C[0xf][0xfffffffb][0xffffffe3][0xfffffff7]_~[0xffffffff][0xffffffd3][0xffffffb3]=[0xffffffe7][0xfffffffa][0xffffffed]w_}[0xfffffffd][0xffffffdf][0xffffffe3][0xffffffef][0xffffffbe][0xffffffff][0xfffffff3][0xfffffff7][0xffffffe7][0xffffffe7][0xffffffdf][0xffffffff][0xffffffed][0xffffffb0][0xfffffff3]uY[0xffffffbc]ZA0[0xfffffff6][0xffffffba][0xffffffbf]*g[0xffffffdd][0xfffffffc]dV [0xffffffcc]([0xffffffa2]p3[0x16]%B[0xffffffd1]2[0xffffffaf][0xffffffa2]v[0xffffff9a]c^u[0xffffffb0][0xffffffae]m[0xffffffdc][0xffffffb2]]Z[0xffffffd3][0xffffffb6]O[0xffffffaa];X~[0xffffff91]W[0xffffff95][0xfffffff8]=?.[0xffffffd6]e5k[0xffffffff]pl[0xffffffcd]yW/[0xfffffff6][0xffffffa3][0xffffffa4]7[0xffffffce][0xfffffff0][0xffffffa7][0xffffffcb]*[0xffffffbf]F|[0xffffff82];-[0xffffffdf]:[0xffffff9d][0xfffffff8][0xfffffffd][0xffffff8f][0xffffffcf][0xffffff9e][0x9][0x1d][0xffffffcb][0xffffffa3][0x13][0x3][0xffffffc6][0xffffffc3][0xffffffe6][0xfffffffd]3B[0xfffffff5]bv|[0xffffffb6][0xffffffcb][0xfffffff0][0xffffffec][0xffffffe3][0xffffffac][0xffffffaf][0xffffff9f][0xffffffe7][0x1]K<[0xffffff9c][0xfffffff4][0xffffffa1][0xffffffab]|[0x7]?U[0xffffffbf],[0xffffff8b][0xffffffe1][0xffffffeb]~[0xffffffab]V[0xffffffce] [0xffffffe1][0xffffffd3][0xffffffa6]([0xffffff96]?[0x16]m][0xffffffad][0xffffff83]7[0x1b][0xffffffcc][0xffffffca][0xffffff90][0xffffffce][0xffffffb4]E[0xffffffd4][0x16][0xffffffd3]u[0xffffffc3][0xfffffff0][0xffffff8f][0xffffffc0]6i[0xffffffcd][0xffffffc3][0xffffffc3][0xffffffaa][0xffffffde]8N[0x16][0xfffffff5][0xffffffac][0xffffffa8]&?Ct'[0xfffffffd][0xffffff94]L[0xffffffb5][0xffffff86]9?B[0xffffff84][0xffffffb5]K3[0x10][0xffffffce][0xffffffcc][0xffffffea][0xffffffa6][0xfffffffd][0x8]Fx[0x7]sE[0xffffffe7]@}[0xfffffffa][0xffffffa8]P7[0xffffffc6]=b[0xffffffa4][0x13]1[0xffffffd4]y'[0xfffffff0][0xffffffb3][0xffffffe2][0xffffff92]9b[0xffffff9f]|[0xffffffbe]m.[0x8][0xffffffd4][0xffffffc3][0xffffff80]O[0xffffff98]{[0xffffff9e]>[0xffffffbe][0xffffffa8]g7[0xffffffbd][0x8][0x4][0xffffffc6]E[0xfffffffd][0xffffffb8][0xffffff9e][0xffffff97]qh[0xffffff8a][0xffffffa1][0xffffffcc]d[0xffffffe7]([0xffffff88][0xffffffd1][0xffffff8b][0xffffffc1][0xffffffaa][0xffffff89]i[0x5]K{2[0xffffff82][0x14]F[0xffffffb4][0xffffffb5][0x11]L[0xffffffad][0xffffffe8]^[0xffffffd5][0xffffffcc][0x1e][0xffffffd6][0xffffff8b][0xffffffa5][0x18][0xfffffffa]E:6>[0xffffff8d][0xffffffcd] f[0xffffffd7]E[0xffffffc3][0xffffffa4][0xfffffffa]d[0xffffffb4]i>}[0xffffff9c][0xf]j[0xfffffff5]9[0xffffffa0][0xffffffac][0xfffffff4]`[0xffffffe8][0xffffffb6][0xffffffe0][0xffffffd9]H][0x1c][0xffffff9d]>[0xffffffc3][0xffffff95][0xffffffe8][0xffffffea][0xffffff8d])|<[0xffffffc9][0xfffffffb][0xffffffc4][0xffffffbf]h[0x2]^[0xffffff81]s[0xfffffffd][0xfffffffd]v[0xfffffff0]~[0xffffffdb][0xffffffe9][0xffffffe3]Yy}[0xffffffe4][0xffffffc1][0xfffffff3][0xffffffe7][0x17]M[0xffffffbe][0xffffff9c][0x1d]>[0xffffffaf][0xffffffea][0xffffffab]:[0xffffffa0][0xffffffb6][0xffffffb7][0xffffffe2]h^#7[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffb8]l[0xc][0x1][0xffffffba][0xffffff94][0xffffff8b][0xffffffab]{X[0xffffffd2]g[0xfffffffb]L,[0xffffffdb][0x9][0xffffffe1][0xfffffff5]9'[0xffffffac][0xffffffc9][0xffffffc9]h[0xffffff9b]i[0xffffff8f][0xe]'[0x0]B}[0xffffffea][0xfffffff6][0x0][0xffffffb8][0xffffffc1][0xffffffd8][0xffffffec][0xffffffc1][0xffffffdc]x[0x1b][0xffffffd1]{[0xffffff88][0xffffff91]2[0xffffffd9]!t[0xffffffba][0xffffff94]MbX[0xffffff94]Ws[0xffffff8c]1[0xffffff96][0x2][0x1]:N[0xffffffb0][0xfffffff6][0x1d]'&[0xffffffc7][0x8]8[0xffffffd0][0xffffffa9]'[0xffffffc0][0xffffff87][0xffffffaf][0xfffffffb][0xfffffffe][0x9][0xffffffc2]x[0xffffffda][0xffffffc0]U[0xffffffbe]|C7.gt:[0x0][0xffffff84]T[0xffffffa3][0xfffffff7][0xfffffffe]Z[0xfffffff6][0xffffff98][0xffffffd9]{[0xffffffe9][0xffffff8b][0xfffffffa][0xffffffb5][0xffffff98][0xffffff97][0xffffffb3][0x19][0xffffffec][0xffffffd1]k[0xffffff9a][0xffffffc8][0xffffffcb][0xffffffba]Y[0xffffff88][0xffffffa6][0xffffffa6][0xffffffc1][0xffffffde][0xfffffff8]~x[0xffffffde]y[\r][0xffffff8a]]1[0xffffffdc][0xffffffe8]=[0xfffffff0][0xffffffe6]Q[0x1e][0x12][0x0][0xffffffae]64[0xffffff80]B!4[0x1]fu[[0xfffffff2][0xffffffd1][0x17][0xfffffff0][0x15][0xffffffa0][0xffffffc3]u[0xfffffff1][0xffffff9f][0xffffffdb][0xffffffb5]-[0xffffffeb][0xffffffe8]E[0x1b][0xffffff98]Id[0xffffff82][0x9][0xe][0xffffff83]#[0xffffffa0][0x12][0xffffffb1]*@[0xffffffa1][0xffffffdc]a[0xffffffbb][0xffffffeb]@[0xffffffd4]H[0xffffffe2][0xffffffe5]j[0xffffffdd][0x1d][0xffffffa0][0xffffff88][0xffffff81][0x1b][0xffffffc4][0xfffffffe]1[0x12][0xffffffab]*[0xffffff9f][0x16][0xfffffff3][0xffffffba][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x5][0xffffffa4]g[0x3][0xffffffa2][0xffffff87][0xffffffd3]lqY[0xffffffe4][0xffffffd4][0xffffffd0][0xffffffd0][0xfffffffe][0xfffffffc]y[0x0]|[0xffffff8b][0xffffffc2][0xffffff87][0x1d] %Q[0x5]r[0xffffff97][0xffffffa1][0xffffffd8][0x0][0x6][0xffffff8a][0xffffffbc])[0xfffffff3][0xffffffa8][0xffffffa7][0xffffffdf][0xffffffc6][0x12][0xffffffc1]U-1r[0xffffffde]u[0xffffffab]/&[0xffffff93]W[0xffffffaf]^[0xffffffc5][0xffffffaf]L[0xffffffcc][0xffffffdc]ZK)'[0xffffff81][0xffffffeb][0xffffff82][0x11][0xffffffcc][0xffffff97][0xfffffff5][0xffffffeb][0xffffff93][0xffffff91][0x14]R$J[0xfffffff3][0xf][0x10][0xffffff87][0xfffffffa][0xffffffd2][0xffffffa6][0xffffffce][0xffffffb4][0xffffffca][0xffffffbb][0xffffffb9][0x0][0xffffffe2]O[0xffffffb5]V[0xffffffb1][0xffffffcc][0xffffff84][0xffffffb3][0xffffffb9]JR^[\r]_R(y[0xffffffd0][0xfffffff2][0xffffff84]_J[0xfffffff4][0xffffff9f][0xffffff80]-[0xffffffb7]#[0x7f][0x19][0xffffff89][0xffffffcb][0xffffffb2][0xffffffaa]H[0xfffffffe]%[0xffffffcd]e[0xffffffd7][0xffffffd4]/A/x[0xffffffb6][0x6]V[0xffffffe3][0xffffffac]/m[0xfffffff4][0xffffffad][0xfffffff0][0xffffff97]p[0xffffffed]U[0xffffff89]/[0xffffffe8][0xffffff8b][0xffffffdc]6[0xf][0x1a]d[0xfffffff4]h2[0xffffffe0][0xfffffff6]`[0xffffff88][0xffffffd0][0xffffff8e]b[0xffffff9a][0xffffffaf]NFM[\r]{[0xfffffffc][0xfffffff0][0xffffff89][0xffffffc2][0xffffffea][0xffffff8d][0xfffffff1][0xffffffb1][0xffffffce]D[0xffffffff]un[0xffffffad][0x17][0xfffffff8]#[0xe]$[0xffffffe6][0xffffffe9]F[0xffffffc6]7ZJ[0xffffffba][0xffffffb7][0x3][0xffffffe1][0x7][0x1d][0xffffff8f][0xffffffcb]z[0xffffffd2][0x14][0xffffffb3][0xffffffb2]A[0xffffffbe]:y[0xffffffab][0x14][0xffffff90][0xffffffc9]][0xffffff83][0xfffffff8][0xffffffe4]C[0xffffffb9]|[0xf][0xffffff93]w\M[0xffffff9c][0xffffffb0]2[0xffffffd7][0xffffffca][0x9][0xfffffffe][0xffffff91][0xffffff99][0xffffffc3][0xfffffff5][0xffffff93]][0x1b]X[0x18][0xffffffba]}D[0xfffffffe][0xfffffff9]-[0xffffffff][0x2][0x16]R[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "-5H[0xffffffdb][0xffffffc6][0xffffffde]F*[0xffffff8d][0x13][0xffffffa1][0xffffffb2]8I#[0xffffffa3][0xfffffff1]y[0xffffffa6][0xffffff8d][0xffffff8c][0xffffff9d][0x17][0xffffffca][0xffffffc9]8M[0xffffff85][0xffffffb6][0x16][0xffffffd2][0xffffffe5]c[0xffffffe5][0x5][0xfffffff1][0xffffffc2][0xffffffe5]T[0xffffffc9]83Q[0xffffffac],[0xffffffc0][0xffffffc4][0xe][0xffffff92][0x18];[0xfffffff4]sqb[0xffffff84][0xffffff8d]-[0xffffff80]I|[0xffffffa7]XO[0x16][0xffffffdb][0x14]p[0xffffffe0][0xffffffe1][0xffffff86]k[0xffffffab]z![0xffffffd6][0xe][0xffffffd3][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffff93][0xffffffc6]^E[0x6][0xffffffcf]S[0xffffff91][0xffffffc8][0xffffffd8]?[0xffffffd3][0xffffff89][0x12][0xffffffda][0xffffffab][0xffffffd8][0x1a][0x11].3[0xfffffff7][0xe]4x?[0xffffff89][0xb][0xffffffa4][0xffffff99][0xffffff96][0xffffffcd][0xffffffb4]*[0xffffffc4][0x14][0xffffff9c][0xffffffd3][0x9][0xfffffffa]Lo[0xfffffff0][0xffffffc4][0xffffffb1]D[0xffffffc9][0xffffff86][\r][0xe][0x7][0xffffffb3][0xffffffee][0xffffff84]1?j[0xffffffd6][0xffffff86]"DI/[0x13][0x1c][0xfffffffe][0xfffffff0]l([0xffffff88][0xf][0xffffffc6]sc[0xfffffff6][0xffffffde][0x12]P[0xe]R=[0xffffffa1]|[0xffffffb5][0xffffff93][0xffffffc1][0xffffffd4][0x7f][0x13][0xffffffbc][0xffffffc0][0xffffff9e]t?,[0xffffffa6][0xffffffec]'[0xffffff9c][0xffffffd0][0xffffffb4][0x1e]q[0x11][0xfffffff0]S[0xffffffe5]R[0x1c]x[0xffffff99]9 6tv[0xffffffed][0xffffff9e][0x1][0xffffffbf].[0xffffffdb][0xffffff92]q\[0xffffffbe]@[0xffffff90][0xffffffd8][0x16]M[0xffffffbf][0xffffffd0]cN[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "=^5[0xffffff88][0xffffffc5][0xffffff8e][0x18][0xfffffff9][\r][0x10][0xffffff84][0xffffffdb][0xffffffef][0x7]h[0xffffffeb][0xffffffa7][0x11][0xffffffb4]7[0xffffff93]e[0xffffffd9][0xffffffce][0xfffffff3][0xffffffd9]N[0xffffffc7]C[0x14]7xi[0xffffffea][0xfffffff4][0xffffffd0][0x1e][0xffffffd4]}[0xffffff81]~[0xffffff9f][0xffffffde][0xffffff92][0x1f][0xffffff91][0xffffff9b][0xffffffc1][0xe][0xfffffff8]8[0x13][0xffffffd6][0xffffff9f])(D[0xffffffa6][0xffffff85]u[0xffffffb1][0xffffffdd]|n[0xffffff9a][0xffffffa8]n[0xffffffe8]5U1[0xffffffb5]N[0xffffffe9]Xe"[0xffffffd3]q[0x6][0xffffffb5][0xffffff90]&N[0xffffffa8]{I[0xffffffac][0xffffff86]O[0x5]m[0xffffff82][0x16][0xffffffc2][0xffffff82][0xffffffe8][0xffffffd8][0xfffffffa](3[0x0][0xffffffaf][0xffffffa1][0xffffffa6][0xffffffde]G[0xfffffffd][0xffffffd7][0xffffff99]ux[0x2]M[0xffffffb6][0xffffff92] L[0x1a][0x14][0xffffffd1]f[0x4][0xffffffbe][0xffffffc1][0xffffffe6][0xffffff97][0xffffff85][0xffffffd2][0x1][0x5][0xffffffa3][0xffffffd3]X'[0xffffffb9][0x15][0xffffff96][0xffffffe6]HE[0xe][0xffffffaa][0x1e][0xffffffc5][0x6][0xffffffb8]i[0x1b][0xffffffeb]t[0xfffffff3]ESE[0xffffff93]a[0xffffff92][0x8][0xffffffda][0xffffff9d]dg[0x6][0xffffffae][0x7][0xffffffaa]l`[0xffffffba][0xffffffb5][0xffffffcf]b[0xffffff85]y[0xffffffb4][0xc]V[0x3][0xffffffdf]m[0xffffffe4][0x12]>[0xffffffcd][0xffffffa2][0xc][0x8]Q[0xffffffc1]c[0x3][0xffffffef]FPV[0xc]_;[0xffffff88][0xffffffb4][0x17][0x9][0xffffffcc][0xfffffffe]>[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffc0][0xffffffe0][0xffffff89]J[0xffffff93][0xffffff80]H[0xffffffff][0xffffffc5]G[0xffffff9e]3d[0xffffffd3][0x8][0xffffffcb]7Q[0xffffff86]HZ[0xffffff89][0x14]nC[0xffffffc3][0xffffffc0]x[0x1a]!v[0xffffff85]iSi[0xfffffff6][0xffffffcc]r$[0x16][0xffffffeb][0xffffff95][0xffffffe0]%[0x10][0xffffffcb][0xffffffef][0xffffffc2][0xffffff8b][0xffffffc0][0x6]Z?XD[0xffffff9d][0xfffffffc]r[0xffffffcb][0xfffffff1][0x1d]c%[0xffffffa6][0xffffffb0][0x16][0xfffffff3]gq[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x8][0x11][0xffffff8c]Z[0xffffff92][0x8][0xffffffe0][0xffffff91]E[0xffffffb0]iZ[0xffffffd3]Fz[0xffffffdd][0xffffffe2]9[0xffffffa8][0x10][0xffffff8c]-[0xffffff8c][0x1d]Xl[0xffffffce]T[0xffffffa6]H#B[0xffffffa0][0xffffffd3]N[0xffffffd0][0xffffffd5][0xfffffff7]F[0x16][0xffffffdf][0xffffffad][0xffffffb3][0xffffffa0][0x12][0xffffff88]!\[0x1a][0xffffffa7]Y[0x4][0xffffff86]i[0xb]a[0x0]w9[0xffffff93][0xffffff8d][0xfffffff0]8[0xffffff82][0x7f]T[0xffffffc1][0xffffff80];[0x1f][0x1][0xffffffa6][0xffffffd7]g[0x1a][0xffffffac]7[0xffffff8c][\r][0x14][0xffffffb9][0xffffffad][0xffffffb9][0xfffffff6][0xffffff8c][0xfffffff8][0xffffff89][0x1][0xffffffcf]_v[0xffffff86]k?[0xffffffe8][0xffffffd9][0xffffffc6][0xffffff83][0xffffff9b][0xffffffc8][0xffffffb0]E[0xffffffdc][0xffffffd5][0xffffffeb][0xffffffd3]~D[0xffffffb9][0xffffffd5]7[0xffffff86][0xffffffb3]}[0xffffffe4][0xfffffff4]O[0xffffffd1][0xffffffab][0x10]#H[0xffffff8b][0x0][0xffffffc1]][0xffffffc3][0xffffff9f]Z[0xfffffff8][0x1b]90[0xffffff8f][0xffffff97][0xffffffdf](i[0xf][0x1b][0xfffffff1][0xffffffff][0xffffffcf][0xffffffca][0xffffffb8][0xffffffbd][0xffffffc6][0xffffffd0]6W[0xffffff89][0xffffff9e]j[0xffffffdd][0xfffffffb]$h[0x1c]([0x9][0xffffffe5]`[0xffffffb8]![0x1][0xfffffff7][0xffffffa9][0xffffff81][0x1c]`[0xffffff8a][0xffffffca][0xffffffcb]h[0xfffffff3][0xffffffff]SE[0xffffffbf][0xffffff96][0xffffffb8]9[0xfffffffe]>[0xffffffdc]7[0xffffffb1][0xfffffff9]E].o[0xffffffb7][0x1f][0xffffffc4]][0xf][0xffffffe4][0x16]X"[0xffffffc0][0xffffff93][0xffffffbb][0x9][0xffffffc0][0xffffffa4]7[0xffffffa0][0xf][0xffffffce][0xffffffd1]_[0x16]7a[0x1b]4j[0xffffffe7][0xffffffc8][0xffffffd6][0xffffffa7][0xffffffeb][0xffffffee][0xffffffdd][0xb][0xb][0xffffffc7]|XU^L[0xffffffaa][0xfffffffc][0x6](N.[0x1a]`[0x14]6u[0xffffffdb][0xffffff87][0xfffffff9][0xffffffac][0xffffff8d][0xffffffc3][0xffffffd8][\r][0xfffffffc]2[0xffffffdf]%[0xffffffb7][0xffffff9b][0xffffffbc]n[0xf][0xffffffec] [0xffffff84]U~[0xffffffc1][0xffffffc2][0xffffffd5][0xffffffee][0x1][0xfffffff0][0xffffffad][0xffffffab]7[0xffffff8c]{[0xfffffffe][0xffffffbc]*[0xffffffdb]ntk[0xffffffb2][0xffffffbe]@[0xfffffffa][0xffffffd6]a[0x11]"[0xffffff8d][0xffffffc5][0xffffffe8]X[0xfffffff6][0xffffffb8][0xffffffef][0xffffff8a][0xffffffb6][0xffffffdb][0xffffffcc]=[0xffffff8b][0xffffffaa]2[0xffffffc0][0xffffffbe]=b:/[0xffffffab][0x19][0xffffffe4]h4t[0xffffff99][0xffffffd4][0xffffffd5]m[0xffffffef][0xffffffb9][0xffffff9b]?[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x1b][0x15]][0xffffffde]0_[0xffffffbb][0xffffffdd]-[0xfffffff8]P[0xffffffd6]6[0xffffffb6][0xffffffb0][0xffffffe1]C[0xffffffa3]m[0xffffffab]8[0xffffffb8][0xffffff8b][0xffffffa2][0xffffffbd][0xffffffc2][0x5]B[0xffffffa2][0xffffffbc][0xffffffd9]O[0xffffffda][0xffffffca]Y[0xffffff81][0xffffffae][0xffffffcb][0xffffffa2]:[0xe][0xffffffea][0xfffffff9]s[0xfffffff6][0xffffffb8]8[0x18][0xffffffd3][0xffffffe5][0xffffffed]6n[0x18][0xffffffc6][0xffffffb0]I[0xffffffdc]J[0xffffffba][0xffffffd8][0x16][0xffffffe8][0xffffffb3]q[0xfffffff1]b[0xffffffd8][0xffffffa6][0xffffffdf][0xfffffffc];[0xffffffb8][0xffffffd9]Q[0xffffff98]6c[0xffffff92]W[0xffffffd5]dY[0xffffffbc][0xfffffffa]K}1[0xffffffba][0x3][0xffffffef][0xffffffe8]D}V[0xffffffb7][0xb][0xc]~[0xffffffad]@[0xffffffe0]S[0x1a][0xffffff8a][0xffffff9d]3R[0xfffffffa][0x1a][0xfffffffe][0xffffffe3][0xffffffa9][0xffffff95][0xffffffc1][0xfffffff5]~[0xffffff83][0xfffffffb];[0xffffff99][0xffffffd3]q[0xffffffd2]S[0x1]G[0xffffffa7][0xffffffdf][0x15][0xffffffaf][0xffffffc4][0xffffffb7][0x10][0xffffffe4][0x3]C2\[0xffffffde][0xffffff8e][0x16]?&+[0xfffffff3][0xfffffff6]f9[0xffffff9d][0xffffffff]P[0xffffffd4][0x8][0xffffff9b]'[0xffffffef][0xffffffc9][0xffffffc8]}O[0xffffffc4][0xffffff90]P|"[0xffffff9f][0xffffffb4]uBV"vp~[0x1a]!0C[0xfffffff2][0xffffff83]l[0x8]I[0xffffff94]A@[0xffffff96][0xffffffea][0xffffffc8]9|"[0xffffffea][0xffffffc1][0xffffffad][0xffffff8e][0xc]"#6E[0xffffffa9][0xffffff9e]F&[0xffffffb2][0xffffff9a]q[0xffffff8a]f[0xffffffe6][0xffffff83][0x16][0x11][0xffffffda][dR[0xffffffc8][0xffffffbc][0xffffffac][0x13]a[0xffffffe4][0xffffffbb][0xffffffa4][0x7f][0x1f][0xffffffe2]^v[0xe][0xffffffd5] N[0xffffff93][0xffffff88]d[0x10][0xffffffa7]![0xffffff9c][0xffffff94][0xffffff91]B[0x18][0xffffffe8][0xffffffe1]d5[0xffffffb1]T6[0x4][0xffffff9d]Y[0x12][[0xffffff85][0xffffffd5]J/<[0xffffffe2]7[0xffffff81][0xffffffc5]%[0xffffffcc][0xfffffff0][0x18]e([0x6]@[0xffffffe1]z[0xffffffae][0xffffffb1]j[0xffffff97]L=[0xffffff83][0x1d]d[0xffffffb9][0x6][0xffffff89]d[0xffffff84][0xffffffa0],[0xffffffe9];E[0xffffffa1][0x13]BR[0x13][0xfffffffb][0x4][0x1e][0x16][0xffffffb1][0x17][0x13]^[0xffffffc5][0x1c]sp[0xffffffeb][0xfffffffc][0xfffffffe]$[0x5][0xffffff8c]M[0x2][0xffffffac]|[0x12]g[0xffffff96][0xffffff8c]3a[0xffffff89][0xffffff88][0xffffffab][0xffffffc0][0xe],[0x0][0xfffffff1][0xffffffa1]t[0x11]R[0xffffffd9]p[0xffffffd1]2[0xffffff88]K#[0x1d]b[0xffffffc8][0xffffffc4]D[0xffffffa1][0xfffffff1][0xc][0xffffff81][0xffffff9b]c[0xffffffcd]E[0xffffff87][0xffffffd5]+F[0xffffffb2][0x8]a[0x11]?0[0xffffffdd][0xffffffd5][0xffffffbe]M[0x12][0x6]a[0xffffff88]i[0xffffff91]?[0x13][0x12][0xffffffc2][0xffffff8a]wZ[0xffffffcd]G[0xffffffe1][0xffffffa7][0xffffff96][0xffffffa4][0xffffffa2]Cd[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffff9c][0x13][0xffffff92]?ep[0xffffff8a][0xffffffcc][0x1d]L[0xffffffb0]I[0xffffff94]d[0xffffff9b][0xb][0xffffff86][0xffffffad]Jjf[0x13][0x9]8[0xffffff82]f[0xb][0xffffffee][0xffffff89][0xffffffd4][0xffffffc5][0xffffff9a]au"[0x10][0x11]#[0xffffffea]a~[0xf]V[0xffffff82][0xffffff8b][0x19][0x3][0xfffffff9]p[0xfffffff9][0xffffff8d]J[0xffffffec]'[0xffffffcf][0xffffffd1][0xffffffdf][0xffffffcd][0xffffff80][0xfffffff5]&[0xffffffe4][0xffffffd7]6_[O[0xffffffd4]op[0xfffffffd]f=Q[0xffffffd0]th[0xffffffb5]G[0xffffff94][0xffffffac]i[0xffffffb8][0x1c][0xffffff98]o[0xffffffc1]Xd[0x14][0xffffff8c]{[0xffffffcf][0xffffff99]x[0xffffffa6][0xfffffffa][0x1a]n#[0xffffffb7]L/D[0xffffffff][0xffffffc9][0xffffffd4][0xffffff8c][0x1d][0xfffffffc][0x1c][0xffffffb9][0xffffffdc][0xffffff91]'[0x18][0xfffffffd]3[0xffffffc6]U[0x11][0xffffff93][0x1c]D[0xffffffd5][0x11][0xffffff92]B[0xffffffe8][0xffffff8d][0x9][0xffffffc1]7[0xffffff9e][0xffffffbe]S9[0xffffffeb][0xffffffe1][0xffffff82][0xfffffffe]+9[0xffffffd6][0xffffff9e](s$POCJ;\+$[0xffffffea][0xffffffb8][0xffffffce][0xffffff9d][0x15][0xffffffae]'[0x4][0xffffffad][0x0][0xffffff92][0xffffff84][0xffffff90]i[0xffffffdb][0xffffffb9][0xffffffd6][0xffffffe8][0xffffff83][0x16]-}H[0x18][0xffffffde]E[0xffffff8c][0xffffffbf][0xffffffa4][0x1c][0xffffff89]oJ[0x1e][0xffffffd4][0xffffffb8][0xfffffff9][0xffffffb5][0xffffffa5]y[0xffffff91]/[0xffffffb9][0xfffffff7][0xfffffff0][0xffffffee]B[0xfffffffc]'[0xffffff88][0xffffffab][0xffffffd8][0xffffffee]m[0xffffffa9][0x18][0xffffffca]\,[0xffffffa7]5[0xffffffeb][0xffffffe7]'[0xffffffa3][0xffffffbf][0xfffffffe][0xfffffff4][0xffffffe7][0xffffffc8][0xffffff8f][0xfffffffe]t[0xfffffffa][0xffffffd9]}[0xffffffb2]>P[0x1d][0xffffffd2][0xffffffbb]z[0xffffffbd][0xffffffdb][0xffffff9c][0x19]n[0xffffff8f][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xfffffff9][0xfffffffe]\[0xffffffea]A[0xffffffca][0x12][0xffffffba]|[0xfffffff1][0xffffff9a][0xfffffff8][0x1e][0xffffffeb][0xffffffa8][0xffffffb2],[0xffffff9b][0xffffffbc][0xffffffee]W[0xffffffd3][0xffffff9f][0xe][0xffffffbd][0xffffffda][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffd6][0xffffffbe][0xffffff98]m$D[0x1d][0xffffff8a]5[0xffffffaf][0xffffffa3]f[0xffffffcd][0xffffff9d][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffff9e]2[0xffffffab]g[0xffffffb3]=[0xffffff82][0x3]T[0xffffffd7][0xffffffe4][0xffffffcb][0xffffff96][0xffffffb5]7.[0x19][0xffffff97]U[0xffffffde][0x15][0xffffffbf][0xffffff87][0xffffff8b]1[0xffffffa9]O[0xffffffa4][0x1c][0xb][0x4][0x6]2[0xfffffffc][0xfffffffb][0xffffffc3][[0xffffffe4]y'[0xffffffa0][0xffffff87][0xc][0xffffffdd][0xffffffb3][0xffffffff][0xffffffb0][0xffffffee][0x19][0xffffff9c][0xffffffd3]X[0x11][0xffffffbe][0x12]gtyR&[0xffffffa9]7c8*[0xffffffd8]u[0xffffff9d]2[0xffffffe7]M`[0xffffffcd][0xffffff8d]v*[0x1b]+[0x7][0x1f][0xffffffe0]3[0xffffffa7][0x14]=Y[0xffffff9c][0xffffffba],[0xffffff95]n[0xffffffac]<[0xffffffcc]?"[0xffffffca][0xffffffd4][0x2][0xffffff84][0xffffff81]O[0xffffff90].[0xffffffcd][0xffffffcc][0xffffff98][0xffffffe0][0xffffffa5][0xfffffff3][0xffffffca][0xfffffff8]P[0xffffffb2][0xffffffd2][0xffffffd6][0xffffffa7][0xffffffc9]X#[0x4]R&[0xffffffd5]R[0xffffff85][0xfffffff2][0xffffffb1]q[0xffffff98][0x4][0xffffffad][0x9]k)6K[0x13]@H3[0xfffffff8]Z[0xffffffab][0xffffffb3]l[0xffffffac]S[0xffffff84][0x10][0xffffffa9]F+[0xfffffff4]#N[0x12][0xffffffb8]}=[0xffffffd6][0xffffffde] [0xffffffc2][0xffffffb0][0xffffffa9]L[0xffffff85][0xffffff86][[0xffffffce]2[0xffffffed][0xffffffb4]CW[0x5][0xffffffc7][0xffffff84][0xffffffb1][0xffffffc0]A[0xffffffc3][0xffffff9d]Z[0xffffffa3][0xffffffbc][0x7][0x4][0xffffffcc][0x1][0xffffffcc][0xffffffbc][0xffffff87][0xffffffe7]B[0xffffff8f][0xffffffcc][0x1][0x7][0xffffff80]0p_*I[0x15][0xffffff8b][0xffffffd2]X[0x1c]i[0xffffffa0]%[0xffffffd6][0x3][0x1a]h[0xffffff87][0x5]8[0xffffffa3]-V[0xffffff9b][0xffffffa6]@Pf[0xc][0xffffffc4]@v[0xffffffc0]J[0x1c]Z[0x13][0x13][0xffffff9b][0xffffffc4][0xffffff87][0xfffffff2][0xfffffff3]-[0x2][0xffffff9e][0xffffffdf]n[0xfffffff8][0xffffffbb]xjY[0xb]W[0xe][0x13][0x0][0xffffff9a][0xffffff82]k<[0xffffffb3][0xc]qd[0xffffffea]d:f);q[0x16][0xffffffa4][0x13][0xffffffa1][0xffffff9f]4[0xffffffa9][0xffffffc3]Z<[0xffffff8b]Y[0x0]As[0xffffffeb]c[0xffffff87][0xffffffb5][0x1a][0xffffff8c][0xffffffcf]d,-F[0xffffff89]s[0xffffffd0][0x4][0xffffff8b]5[0x19][0xfffffffa][0x1a]V[0xffffff8a]R[0xffffff8b][0xffffffc8][0xfffffff0][0xffffffcc][0xffffffa4][0xffffff88].%[0x16][0xffffffc5]V[0xffffffb8]i[0xffffffa7]%[0xfffffffc][0xffffffb1]q)[0xffffff86]I[0xffffffcc][0xffffff84]VV[0xffffffb6][0xffffffac]a#[0x0]H[0xffffffe0]iH[0xffffff9f][0xc]H[0xfffffff1][0xffffff99][0xfffffff5][0xffffffda][0xffffffa6][0x19][0xffffffda]@Ji\[0xffffff86]h[0x13]k[0xfffffff5][0xffffff8e][0xffffffcc][0x18]s[0x8],[0xffffff99][0xfffffff4]h[0xffffffb5][0x14][0x8][0xffffffc0][0xffffffd1][0xffffffa1][0xffffffaf]sZI[0x3][0xffffffac][0xffffffb4][0xffffff8c][0x13][0xffffffad]I`[0x3][0xe]@^[0xffffffb3][0xffffffc0][0xffffff8d],[0xffffff8b]}[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffca][0xffffffdb][0xffffff80][0xffffff96][0xffffff94][0xffffffde][0xffffffd3]&fq[0xffffffe6]=i[0x0][0x11][0x0]3d[0xffffffc6]b[0x14][0xffffffa6][0xffffffb0][0xffffffc6]z[0xffffffe0][0x15][0xffffff82]/g[0xffffffb1][0xffffff80]s[0xffffffcd]9[0xffffffd0][0xffffffd7][0xffffff9a][0xffffffb1]U[0xffffffdc][0xffffff94]p[0x6][0x11][0xffffffc7][0x19]e&s[0xffffff99][0x6]\[0xffffffcb]p[0x11]D[0xffffff94][0xffffffac]b[0xffffffa5][0xffffffb1]&e[0xfffffffc][0xffffffd8][0x2][0x1f].[0x1c][0xffffff91][0xffffff88][0xffffffc6]:R[0xffffff83][0xfffffff5]ZM[0xffffffe1][0x9][0xffffffa3])[0x18][0x18][0xffffffc4]~[0xffffff8c][0xffffffb2][0xffffff8d]ey[0xffffffcd][0xffffff82]n[0xffffff98][0x17][0xffffffeb][0xffffffb5][0xffffffb4][0xffffffca][0x10][[0xffffff90][0x0][0x12][0x1f]n[0xffffffcf][0x15][0xffffff84][0xffffff85]+[0x1][0xffffff85]y[0x7f][0xffffffa6]X[0xffffffb0][0xffffff94][0x1e]K[0xe][0xfffffff7][0x14][0xffffffe8][0xffffffcc][0xffffffe1][0xffffffde][0x4][0xffffff98][0x10]A[0xffffffee][0xffffffd7]p[0xffffffe3]-[0xffffff91][0xffffffae][0xffffff9f];![0xffffffe6][0xffffff94][0xffffffa0],s[0xffffffa9]T[0x1]G[0xffffffaa]YbCE[0xe]:@$[0xffffffb1][0xffffff9c]L[[0x7][0xffffffb9]W,[0xffffffc0]B[0xffffff92][0xffffff93]$[0xffffffac][0x1d]b[0xffffff83]|[0xffffffe2][0x1c]*E[0x11][0x4]I[0x2][0xffffffa1]([0xffffff8c]FS[0xfffffff7][0xffffffb0][0xffffffe0][0xffffffc4]8[0xffffffa8]/[0xffffff89][0xffffff8a][0xb][0xffffffa8]*[0xffffffa2]O[0xffffffb0]EePk[0xffffffd0][0xffffffdf]R[0x5][0x1c]bj[0xf][0xffffffe2]%[0x10]7c[0x2][0xffffffb3]|[0xffffffe6]!B[0xffffffe7][0xffffffe4][0xffffffbc][0xffffffcb][0xffffff9c][0xffffffd6]=g[0xffffffd1][0xffffff9a]z[0xffffffac][0x13][0x1d][0xffffffc0]n[0xfffffffc][0xffffffe7][0xffffff82][0x18]$[0x16][0xffffff80][0x10][0xffffffb4][0x2][0x1f][0xffffff88][0xffffffaa][0xffffffcd]|h[0x5][0x7]SG[0xffffff8f][0xf][0xfffffff9][0xffffff86][0xffffffa5]2A[0xffffffb6][0x10][0xfffffff5][0xffffff9f]Y[0xffffff8b]l[0x1]R[0xffffffc0][0xffffffd1][0x9][0xffffff8b][0xffffffbe][0x1a]+[0xe][0xffffffa9][0xffffff90]L`? Z[0x9][0xffffffe4][0xffffffdd]i[0xffffffc3]p[0xffffff94][0xb][0xffffffcb][0xffffffc0][0x17][0xffffff88]@B[0xffffff81]s,\[0xffffff9f]k[0x12].s[0xffffff89]I[0xffffff83][0x1a][0xffffff98][0xffffffa0][0x6]g[0xffffffb8][0xffffff90][0xffffff99]6&KM[0xffffffd0][0x19][0xffffffdb][0xffffffeb]L[0x4]*`2[0xffffff98][0x1e][0xffffffdd]k[0xffffff98][0xffffffef]5[0xffffff8c][0xffffff92][0xffffffee][0xffffff80][0xffffff99]fw([0xffffffa3][0xffffffa5]2[0xffffffc2])HH[0xffffffaf]eW[0xffffff88]_&a[0xffffff83][0xffffffc0]x[0xfffffff0][0xffffffc7]d[0xffffff90][0x1d][0xffffffb4]:h`[0xffffffe2][0x1d][0xffffffd6][0xb][0xffffffe5]Q[0xffffffb0]b[0x9][0x1b]![0xffffffc8][0xffffff90]2[0xffffffa4]#[0xffffffe7][0xffffff94]([0xffffffd0][0xffffffd9]B[0x1b]h%[0xc][0x4]"([0x14][0xfffffff0][0xffffff81][0x1d][0xffffff84]4[0xffffff8d]5[0xffffff82][0xffffffe6][0xffffffd4]x[0xffffffcd][0xffffffe4][0x5]l[0xffffffc9][0xffffff80]/[0xffffffcd]#[0xffffffe2]i[0xffffff9b]I[0xffffffb0]V[0x10]D[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x1e]*;[0xe]Y[0xffffff87]t[0x12][0xffffff82]s[0xffffffce]Q[0xffffff99][0xffffff82][0xffffff88][0xffffffa4]0[0xffffffbc][0xffffffcc][0xffffffa3][0x12]E+[0xffffffcd]L2[0xffffff85][0xffffffdd][0x2]r4[0xffffffcd][0xffffff89][0xffffff93][0x16][0x13][0xffffffd2][0xffffffd6]Z[0xfffffff0][0xffffffc2][0xffffffb1]5![0x1a][0xffffff80][0xffffffc8]5[0xfffffffb][0xffffffcd][0xffffff9a]i[0xffffff93][0x10][0xffffffd7][0xffffff9d][0xffffff91]>)[0xffffffac][0xffffff94][0xffffff87][0xffffffdc][0xffffffc1][0xffffffce][0xffffffb3][0xffffffa0]/S[0xffffffd6][0xffffffb6][0x3][0xffffffee]>[0xb]}![0xfffffff9][0x1e]L3[0xc][0xffffffea][0xffffffa1][0xffffffd1][0xffffff98][0x19]}[0xffffff99][0x1c][0xfffffff8],[0xffffffa5][0xffffffa4][0xffffff90]Q>#[0xffffffe1][0xffffffc6][0xffffffc8][0x2]$[0xffffff90][0xffffff97]\5[0xffffffb9]J[0xffffffe3]h[0xffffff93]1[0xffffffa8][0xffffff89][0x1][0x10][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffff84][0xffffff81][0x16]>[0x1][0xfffffff6]7Sch[0x10]&v[0x14]c[0xffffff8a][0xffffff8a][0xffffffed]E[0xffffff85][0x15]l[0xffffff89][0xffffffe1][0x14])[0x7][0xffffff94][0xffffffd2]t[0xc][0x1]V[0x19][0xffffffe5]#dG&[0xffffffb5])ta[0xc][0xffffffba][0x3][0xffffff8c][0xffffff86][0xffffff97][0x11].[0xffffff98]Z,[0xffffffd8][0xffffffb3]/t[\r][0xffffffe8]@T[0xffffff90]yi[0xffffff88]5[0xffffffcc][0xffffffdc][0x18][0xfffffff6][0x10]c2[0xffffffeb][0x1d][0xfffffff8]L[0xffffffa3][0xb][0xffffffa5]"[0xffffffbe][0xffffffb0]}&[0xffffffe0][0x5]rB[0xffffff98]![0xfffffff0][0xffffff98][0xe][0xffffffc3]0[0xffffff9f]T[0xffffffcc]`[0xffffff88][0xffffffa3][0xffffffa1][0xffffffc6]b[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0x1a]_[0xfffffff8][0xffffff85][0xfffffff3][0xffffffa0][0xffffff89][0xffffffa9]O[0xffffff95][0x6]![0xffffff81][0xffffff84]1[0xc][0xffffff92][0xffffffcf][0xffffff82][0xffffffd6]z[0x5]][0x1d]3WR[0x9][0xffffffe4][0xffffff98][0xffffffba]la[0xffffffe8][0xffffffe8][0xffffffa5][0xffffffc6]P~[0x8][0xffffff87][0xffffff83][0xffffffd1][\r][0xffffff86][0xffffff80][0xffffffce][0xffffffc1]Bc)z4[0x17]pB[0xffffff84][0x8][0xffffffff][0xffffffe9][0x12][0xffffffeb][0xffffffe9][0x14][0xffffff99]+[0xffffffc2]f[0xffffffa9]1RPP[0xb][0xc][0xffffff81][0xffffffd8][0xffffffe1][0xffffffe6][0xffffff9c][0xffffffd6][0xffffffc8]Z[0x7][0x11][0xffffffc4][0xffffffdd][0x19]MUf(6c[0xffffff96]q[0xffffffc8]h[\r][0xffffff87]5[0xffffffa6]C[0xffffff81][0xffffffd6]Z5[0x18]=.[0x3][0xffffffa6]([0xffffffe9][0xffffffdd]"F9[0x9][0x12]P[0xffffff85]`#[0xffffffb9][0xffffffc9]BC[0xc][0xffffffab][0xffffffed][0xffffff89][0xffffffbf][0xffffff84][0xffffffbc]f[0xffffffdc]9rtQ[0x16][0xffffffb6][0xffffff9a][0xffffff8b]5[0x8]Z[0xffffffa1][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xffffffc0][0x0][0xffffffa4][0xffffffc3][0xfffffffc]Y0[0xffffff8f]H[0x19][0xffffffa1]z[0xffffff84][0xffffffeb][0xffffffa9]p[0x12][0xffffffbe][0xffffff83]T[0x4][0xffffffe6]JJ[0x16]*(f[0xffffffd0][0xffffffad],[0x10][0xffffffdc]C[0xffffffc6][0xffffffb8]a[0xffffffaf][0xffffffa1]p[0x6][0xffffff96]8%w$[0xffffffdb]@[0xffffffdb][0xffffffe0]P [0x12]*[0xffffffb0][0x1d]H@[0x8][0xffffff82]O[0xffffff82][0xfffffff7][0xffffff81]"[0xffffffc2]F[0xffffff83]*[0x16]|[0xffffffe4][0xffffffc6][0x11]=[0x15][0xffffffc4][0x11]wl[0xffffffcd] [0xfffffffc][0xffffffc8][0xffffffa4][0xffffff83]C[0xffffffa3][0xffffff81][0xffffff87]$a[0xffffffe9]g[0xffffffc1][0xffffffeb][0xffffffa5][0xffffff88][0xffffff92][0xffffffd0][0x9]N[0xffffffcf][0xffffffa7][0xffffffa4][0xffffffa9][0x8][0x1e][0xffffff92][0x13][0x1]'[0xffffffc8]7[0xffffff9c]-[0xffffffbc]Np[0xffffffa6][0x18]K[0xffffffc9][0x0]c5[0xffffffa6][0x3][0xffffffb3][0xffffffce][0xffffff83][0xffffffe7]M[0xffffff83][0xffffffe7][0xffffffa5][0xffffffdc][0xffffffc3][0xfffffff6]@[0x19][0xffffffce][0xffffff82][0xffffff97]6[0xffffffc1]KSE[0xffffff92][0xffffffc4][n[0xffffffc5]Q[0xffffffb8]L[0xfffffff0][0xffffffe8][0xffffffd4]'[0x5][0xffffffa7][0xc]9[\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "}[0xffffffad][0xffffffeb][0xffffff83][0xffffff81]$M[0xfffffffa][0xffffffd1][0xffffffca]J[0x1a][0x1b][0xffffffea][0xffffffa8][0xffffff84][0x7][0xffffffa4][0xffffffc9][0xffffffc4]L[0xffffff98][0x1e]j[0x1c][0xfffffff4][0x19]:[0xffffff93][0xffffff86]D+[0xffffffa1]7[0xffffff87]P[0x4][0xffffffe5][0xffffff97]tt$[0x15][0xffffffed]=T[0x4]"[0x1][0xffffff9b]N[0xffffffaf][0xffffffe7]i[0xffffffc6] [0xfffffff1]q[0xffffff9a]@]`m[0xffffffa4][0xffffff83][0xffffffef][0x5][0xffffff85][0xffffffb9]}NQ[0xffffff83]'[0xffffff87]i[0xffffffd2][0x1e][0xffffffc2][0x6][0xffffffef][0x0]Zy[0xffffffc8]![0xffffffb4][0xffffffd4]2[0x1a][0xffffff83]fj[0xffffffc4][0x9][0xffffff96][0xb]N`[0xffffff85][0xffffffbd][0xe]Q[0x13][0xfffffffc][0x4][0xffffffc2][0x2][0x1f]4[0x1a]9[0xffffff9c][0xffffff91][0x8][0xffffffbe][0xffffff82])[0xffffffb4][0xffffffd0][0xe][0x1b][0xffffff96][0xffffffa6]@1k[0xffffff83][0xffffffd5][0xffffff84][0xffffffc3][0xffffffa0]C[0xffffffb8][0x13][0xffffffea][0xfffffffc][0xffffff9d][0xffffffb5]f[0xffffff86][0xffffff9b]{[0x11][0xffffffee][0xffffffe4]j[0xffffff88][0xffffff9a]y[0xfffffff1][0xfffffff0]d[0xffffffe7]i[0xffffffc8]7[0xffffffc4][0xffffffb1]CL[0xffffffbf]F[0xffffffb6]SL[0x16]7Q[0xffffffd8]\[0xffffffff]-[0xffffffe6][0xffffffed]<[0xffffffc4]"[0xffffffd0][0xffffffc9][0xfffffffa][0xffffff91][0xffffffb8]9[0x19]9[0xffffffbb]M[0xffffff94][0x10]J[0xffffffec][0xffffff9d]a[0xfffffff3]x[0xffffffd0][0xc][0xfffffffd][0xffffff9a][0xffffff9b][0xfffffffe][0xfffffffb][0xffffff93][0xffffffa5][0xffffffdc]wwB[0xffffffe1][0xffffffa8]c[0xffffffc4]~[0xffffffce]~[0xffffffc3][0xfffffffa][0xffffff91][0xfffffff2]g[0x10][0x13][0xffffffc7][0xffffff83]H[0xffffffdc]P[0xffffffcb],KeL7`[0xffffff94][0xfffffff5][0xffffffcf][0xffffff88]b[0xffffffe7][0xffffffca]Me[0xffffffc4][0x8][0xffffffca]q[0xffffff97][0xffffffd3]h|[0xffffffb2][0xffffffb6]0[\r][0xffffff87]`[0xffffffb8]'[0xffffffcb]mc[0xfffffffc][0xffffff8f][0xffffff8e][0xffffffd7][0x11]$[0xffffffd9]O[0xffffffc3][0xffffffe6][0xffffffaa][0xc][0xffffffbb][0xffffffcd].[0xffffff8b]`[0x3]XQ[0xffffffc5]L[0xffffffe1]r[0xffffffb7][0xffffffb3][0xfffffff9][0xffffffd9][0xffffff83]$[0xffffffee]F[0xfffffff0]([0xffffffe7][0xfffffffd][0xffffffb2]vk[0xffffffb3][0xffffff85][0xffffffd9][0xfffffff8][0x7f][0xffffffad][0xffffff8b][0xfffffff5].)[0xffffffde][0xffffffbd]^sY[0xffffffad][0xffffffcb][0xffffff99][0xffffffe0][0xffffffce]Ht[0xffffffd9][0xffffffe4][0xffffff8b][0xffffff82]Y[0xffffffde][0xfffffff4]e[0xffffffb4][0xffffffa8][0xffffffd7]m![0xffffff8a][0xffffffd7]x0+n[0xffffff9d][0xffffffab]l[0xffffffea]W[0xffffff87][\r][0xffffffd3][0xffffffba][0xffffff8a]^[0xffffffb7][0xffffff91][0xffffffb6]=[0xffffff9c][0xffffffed]Y[0xffffffcd][0xffffffc3][0xffffffc3][0x7f][0xffffffdb]'Q[0xffffff90][0xffffff8d]M[0xffffff95]  v[0xfffffffb]X[0xffffffd4][0xffffffa4][0xffffffab][0xffffffaf][0xffffffae][0xffffffaa][0x2][0x1c][0xffffffaa][0xfffffff2]U[[0xfffffffc][0xffffff89][0xffffffa3][0xffffffbf][0xffffff9d][0xffffff9d][0xffffffec][0xffffffaf]d8[0xffffffa7]=[0x1d][0xffffffba][0xffffffec]-mh[0xfffffff8][0x17][0xffffffd9][0x1f][0xffffffa1]&PD[0xffffffe1][0xffffff8c][0xffffff85][0xfffffff2][0xffffffb6][0x1a][0xffffffea]3[0xfffffffc][0xffffff8b][0xfffffff0]wx[0xffffff98][0xffffffe7]6[0xfffffffb]w[0x1c][0xffffffeb]Y[0xffffffb3]9[0xffffff98][0xffffff8b][0xffffff95][0xfffffff0]([0xfffffff3]>s[0xffffffc4][0xffffffe8]A[0xffffffdb][0xffffffa0][0xffffffcc][0xffffffff]'[0xffffff94][0xffffffc5][0xfffffff0][0xfffffff1][0xffffffb0]-[0xffffffd0][0xffffffae][0xffffffc1][0xffffffdf]l[0x7f]2[0xffffffbe][0xb]Q[0xffffff91][0xffffffe5]'#[0xffffff90][0xfffffff5][0xffffffbb]z8Z/[0xffffffca][0xffffffa5][0xffffffe8][0xffffffe6][0xffffff85][0xfffffff8][0x7]Y[0x1c][0xffffff83][0xffffffcc]3[0xffffffd2][0xffffffba][0xffffffe1][0x7][0xffffffd1][0xffffffbd][0xffffffbb][0xffffffbe][0xfffffffe]m[0xffffffdd][0xffffffe3]2[0xe][0xfffffffa]][0x15]][0x4]yj[0xffffff8a]v[0xffffffce][0xffffffef][0x2]<[0xffffff99]n_[0xfffffffd][\r][0xffffff87][0xffffff99][0xfffffff2][0x17][0xfffffff9][0xffffffeb]/wc[0x1f]x[0xffffffa6][0xffffff89][0xffffff84][0x18][0xe][0xffffffca][0x1f][0xffffffce][0xfffffff2]n[[0xffffffc2][0xffffffc5][0xffffffeb]b[0xffffffba][0xffffffee][0xffffffea][0xffffffa6][0xfffffffd]m[0xffffffe9][0xffffffe5]F[0xb][0x1f]Mx[0x10]l[0xffffffdd][0x15][0xffffffcd][0xffffffe4][0xffffffd1][0xffffffa0][0xffffffac]_[0xf][0x18][0xffffff8b]g][0xffffffde][0xffffffad][0xffffffdb]}[0xffffffcb][0xfffffff3][0x16][0xffffffd5][0xffffffdd][[0xffffffeb][0xffffffbf]5[0xfffffff7][0xffffffe3]k.hw[0x5]$V[0xffffffe1]j[0xffffffe3]b[0xffffff8d][0x1c][0x1d][0xffffffdc][0xffffff83]J[0xffffffff]q[0xffffffab]%[0xffffff9c][0x1d][0xffffffdf][\r][0xffffffee]u[0xffffffad]9[0xffffffae][0xffffffb2]yU^q[0xffffffad]t[0xffffffd9][0xffffffdb][0xffffffa3][0xffffffd3][0xffffffd7]<[0xfffffff6]6[0xffffffcd][0xffffffab](<[0xfffffffd]Bt[0xfffffff5]jt[0xffffffaa]z[0xffffffd5][0xffffffbd][0x5][0xffffffe0][0xfffffff4][0xffffffdb][0x19][0xfffffff7]6[0xffffff8e]=yS[0xffffffeb]G[0xffffffc0]G[0x7f]t|[0xffffffde]j[0xffffff90][0xffffffee][0xffffffea][0xfffffff6][0xffffff83][0xffffffed][0xffffffd1][0xffffffd7][0xffffffdb][0xffffffa1][0xffffffc7][0xfffffffd]y8[0x0][0xffffffdc][0xffffff9f]e[0xffffffa0][0xffffffda][\r]g[0xffffffdc][0xfffffff7][0xffffffdf][0xffffffbb]8<[0xffffffd9]I[0xffffff8d][0xffffff88][0x16]E[0xffffffdb][0xfffffff6]G[0xfffffff2][0xffffffb7]G"n[0xffffffda][0xffffffae]X[0xffffffec][0xffffffda][0xf]'[0xffffffd9]{[0x1f][0xffffffee][0xffffffce]a[0xffffff95][0xffffffdf]E[0xffffff8b][0xffffffbc][0xffffffb9][0x2][0x12][0x17]u[0xffffffd7][0xffffffd5][0xffffff8b]H[0xfffffff6]P[0xffffff8f][0xffffff88][0xffffffef][0xfffffff6][0xffffffbc]Ix[0xfffffff7][0xffffffb3][0xffffff8d]([0xffffffce]G[0xffffffda][0xffffffa2][0xffffffa8]\[0xffffff92]q[0xf]sA[0xffffff83][0xffffffe5]-f[0xffffffe5][0xfffffff0]>[0xffffffce][0xe][0xffffffd5][0xffffff87][0xffffffd9][0xffffffdf][0xfffffffc][0xfffffff6][\n]"
2023-05-21 20:36:30,387 [main] DEBUG wire - http-outgoing-1 << "[0xf]^[0x8]![0xffffffdc][0xffffffaf][0xffffffde][0xffffffb0][0xfffffffa][0x1e][0xffffffef][[0xffffffcb][0xffffff88][0x10][0xffffff9a]A[0xfffffff0][0xfffffff2][0xffffffe6][0xffffffe6][0xffffff96]}[0x1d][0xe][0xffffffe0]o[0xffffffde][0x8][0xfffffff9][0x17][0xffffffdc]c8[0xffffffb4][0xffffffac][0x1f]}[0xffffffdf]a[0xffffffb7][0xfffffff3][0xffffff97]!t[0xffffff96]>Sv[0xffffff9c][0xffffffa4][0xffffffcc]X[0xffffff91]Wz[0xffffff96][0xffffff8b]x[0xffffff8b][0xffffffc4][0xffffff95][0x5]N[0xffffff96]ryX[0x14][0xffffff89][0xffffffba]A[0xffffffaa]l[0xffffff8d][0xffffff8f][0xffffffd3][0xffffffd4]Y[0xffffffed][0xffffffc6][0xffffffc8]B[0xffffffb5]6[0xffffff89][0xffffffd3][0xffffff8a]e?[0x1e][0xfffffff9][0xffffffd4]HU[0xffffffc7][0xffffffde][0xffffffb2]Z[0xffffffa6][0xffffff9d]AZ[0xffffff9b]$[0xffffffe3][0xffffffcc][0xffffffc7]h[0xffffffce][0x12]V[0xffffff86][0x12][0xffffffd6]Mtl2@u[0x18][0xffffffc4]{[0x1e][0x14]w[0xffffffce]:[0x1e][0xffffffea][0xffffffef]aH[0xffffffb4]Z[0x19][0xffffffa7]Vk[0xe][0xffffffda]M[0xffffffc8][0xfffffff2][0xb][0xffffff92]p`[0xffffff82][0x4][0xfffffff6]x3[0xf]QB[0xffffffb2][0x1d]+[0xffffff92]X[0xffffff9c][0xffffffce]L[0xffffff92][0xffffffb1] [0xffffffe4]u[0xffffffac][\r][0xffffffcb][0xffffffcd][0xffffffe3][0xffffff90][0xffffffe2]J[0xffffff85][0xfffffffc]Y[0xffffffa8]T1UO[0xffffffb4][0x1f][[0xffffffe4]([0x1e][0xffffffe3][0xffffff9c][\r]; [0xffffffc8][0xffffffbe]S[0xffffffe3][0xffffffd0][0xffffff9a][0xffffffc5][0x12])3<[0xffffffcc][0xfffffff9]=[0xffffffcd]<,kd[0xffffff96]*[0xffffffc0]`[0xffffffc1][0xffffffd5][0x1b][0xffffffcf]D[0x1a][0xffffffcd]&[0xfffffff3][0xffffffd2][0xffffffe8][0x4][0xffffffcd]a[0xffffff9f][0xffffffc5][0xffffffab]4[0xffffffec][0xfffffffc]K[0xfffffff4][0xffffff90]i[0xffffffe8][0xffffff9c][0x12][0xffffffbb][0xffffff84][0xffffffad][0x9][0xffffffc8]cYhF[0xffffffab][0xffffffb5][0xffffffac][0xe][0xffffff85]:,[0xffffffb2]{[0x13][0xffffff8a][0xffffffdb][0xffffffac]0e[0xffffff8a][0xfffffff5][0xffffffe4][0xffffffc4][0xffffffc5]YfYkC[0xffffffab][0xffffff89]Y;[0xfffffff4][0xffffff96] p[0xffffffa1] I[0xffffffa1][0x15][0xffffffe4]M[0xffffffb4][0x6]r[0xffffffc7][0xffffff9b]yn8Mu[0xffffffe6]B[0xffffffd9][0xffffff95][0xffffffc5][0x3]r[0x3][0xfffffff9][0xffffff9a]b][0xffffffdd][0xffffffa7]c[0x3][0xfffffff2][m<7s$[0xffffffcb]2[0xffffffa9]O[0xffffffd0][0x19][0xffffff89]V[0xffffffea]\[0xffffff9a][0xffffffe9]p[0x0]9[0xffffff95][0xffffffac][0xe][0xffffff8d][0xffffffb9][0x11][0xffffffc0][0xffffffe2][0xffffff81][0xffffffce]@[0xffffffa3][0xffffffe3][0xffffffcd][0xffffffac][\r][PX[0xffffffaa][0x3][0xffffff99][0xffffffe1][0xffffffa9]c[0xffffff9d][0xffffffa4],[0xffffffde][0xffffffed][0x9][0x18]k[0x1e][0xffffffd6][0x18][0x9]:C[0x8][0xf]%[0xfffffff4][0xffffffef][0xf][0xffffffde][0x5][0xffffffdb][0xffffffd7][0x0][0xffffffa8][0xffffffc4]/ES[0x1f])O[0xffffffac][0xffffffea][0xffffffea][0xffffff86][0x11][0xffffffc7][0xffffffd1]$[0xfffffff6][0xffffffe8][0xffffffde][0x1c]KO.c[0xffffffd9]h[0x1c][0xffffffea]~*\[0xffffffff]A4u[0xffffffc7][0xffffffc7]6[0xffffffd9][0xffffffec][0xffffffd7][0xffffff89][0xffffffdd][0xffffff98]h[0x7f]P[0xffffffb4]?j$V[0xffffff88]u[0xffffffba][0xffffff96]q[0xffffff85][0x1f]Z[0x5][0xffffffeb][0xfffffffd][0xffffffc3]%+[0xffffffe8][0x19][0xffffff98]o[0xffffffdc]~+[0xffffff84][0xfffffff0]H[0xffffffdf][0xfffffffd]V[0xffffffd6]B[0x7][0x8].l9[0xffffffb0]`[0xffffffb3][0xffffffdf][0xffffffba]7[0xffffffdb][0xffffffb6]5[0xffffffd0]g [0xffffffc8]}U[0xffffff9b]'[0xffffffb3][0xffffff99][0xffffffd8]3[0xfffffff2]w[0xffffffc2][0xffffffac][0xffffffad][0xffffffb7]:pY[0xffffffc5]b[0xffffffd5][0xffffffdd]D<bZD[0x17]U=e[0xffffff99]d[0xffffffae]N[0xffffffff]VT[0xffffff88][0xffffff86][0xb][0xffffffbe][0xffffffbb]8Tz~[0xfffffff7]x[0xffffff82][0xfffffff6][0xffffffc7][0xffffffab][0xffffffd3][0xffffff9f][0xffffffe6]e[0x1b]^;[0x10][0xfffffff8]~5[0xffffff87]W[0x17]7[0xfffffff5][0xffffffba][0xffffffd9][0xfffffff4][0x13]/[0xffffffea][0xb][0xffffffb4][0xffffff97]|M[0xffffffba][0x10][0xffffffb3][0xffffffb2]]U[0xfffffff9]M1[0xffffff8b][0xffffffc5]O[0xffffffb5]@@[0x0]q[0xffffffc8][0xffffff9b][0xffffffae][0xffffff98][0xffffff8d]9HL[0xffffffe1]9Z4[0xffffffae]W[0xffffffec][0xffffffd9]5%[0xffffffdc][0xffffffcb][0xfffffff6][0xffffffcd]c[0xffffff81][0xffffffc0];[0xfffffff4][0xffffffee][0xffffffef][0xffffffe1]3D.[0xffffffda][0xfffffffa][0xffffffb2]{[0xffffff95]c[0xffffffce]US[0xffffffbf]([0xffffffa6]][0xfffffffc][0xffffffb8][0xffffffed][0x7f][0xffffffe8][0xffffffe2][0xffffffd8][0xffffff82][0xffffff86]G\[0xffffff92][0xffffffde][0xffffff9e][0xffffffc8]E[0xc][0xfffffff8][0xffffffec][0x10]j@[0xffffffff]6`,W[0xffffff9f]>^Wo[0xffffff80][0x1b][0xffffff85][0x13][0xffffffa8][0xfffffffb][0x7]N[0xffffff87][0xffffff88]dK[0xffffffc9]M[0xffffff96]p[0xffffffeb][0xffffffcc][0xffffffe3]A7[0xffffff9e]H[0xffffffed][0xffffffab]S[0xffffffe4][0xffffffe2]YS[0xfffffff0][0x7]{r[0xffffff92][0xfffffff1]hqdx[0xfffffff9]i[0xffffffe3]a[0xffffffff][0xffffff99]oK|[0xfffffffa]C[0xffffff92][0xffffffe1]t[0xffffffbf][0xffffffae][0xfffffff6][0xffffffd2][0x8][0x11][0xe]vd[0xffffffba]?0)[0xffffffe5][0xffffff9d][0xffffff83][0x1a][0xffffffdb][0xffffffa3][0xffffffba][0xffffff93]5[0xffffffcf][0xffffffe1][0xe][0xffffffac]:}/1[0xffffffe9]%3[0xffffffbf]+[0xffffff9b][0x1f]U8[0xffffffb6]i[0xffffffe7][0xffffff92][0xffffffef]+[0xffffffbf]]D6h-[0x5][0xffffff94]p[0xffffffd9][0xfffffffd][J>DJ[0x1e][0xffffffc2][0xffffff9e][0xffffffe5]ey[0xffffffb5]n[0xffffff8a][0xffffffb3][0xffffffaa]^[0xffffffcf][0xffffffda][0x7])[0xfffffff1]f[0x8]dg[0xffffffca]Q[0xffffffff][0xffffffe6][0xffffffd1][0xffffffa7][0xffffffe5][0xffffffd1][0xffffffdb][0xffffffde]+[0xffffffdd]S[0xffffffe0]hs[0xffffffea][0xffffffaf]?[0xffffff84][0x7f]2z~Q[0xffffffe5]L[0xffffff87][0xffffffee]g[0xffffffab][0xffffffb8][0xffffffd5]6/[0xffffffaa]U[0xffffffb4][0xffffffcf][0xffffffef][0xfffffff3]"o[0xffffff96]bQ[0xffffff93][0xffffffe1][0x17][0xfffffff5][0xffffffba];[0xffffffe2][0xffffffcc]~[0xffffffbb][0x12][0xffffffd0][0x1f]@e@[0xffffffa3][0xffffffe7][0xffffff91][0xffffffb3]9b[0xfffffff2],[0xffffffbc][0xffffffdc][0xffffffaa]d[0xffffff84][0xffffffe8]c[0xffffffee]lx[0xffffff81]G99?|*[0xfffffff8][0x14]#[0xffffff9e]r[[0xffffff8c]/[0xffffff92]%n[0xffffffae]<[0xffffffb7][0xfffffff3]?[0xfffffffd][0xfffffff9][0xffffffd9][0xffffffbb][0x7][0xfffffff4][0xffffffee][0xffffffb3][0xfffffffb]wC[0xffffffa0][0xfffffffe][0xfffffff3][0xffffffb2][0xffffffae]as[0xf]^_[0xffffffec][0xffffff9b]n[0x17][0x15][0xf]J[0xffffff94]G~[0xffffff92][0xffffffa1][0x1f][0xfffffff5][0xfffffffc][0xfffffff9]eU[0xffffffbc][0xffffff8e][0xffffffee][0x14]%[0xf][0xffffffbb][0xffffff84][0xffffffef][0xffffffa8][0xffffff9c]E{[0xffffffef][0xffffffc1][0xfffffff7][0xffffffaf][0xffffffb0]l[0xffffffe7][0xffffffee][0xffffffb1][0xffffffdb][0xfffffffe][0xffffff94][0xffffffcb][0xffffffa3][0xffffffdd][0xffffffcf][0x9]=[0xffffffda][0xffffffd4])[0xffffffef][0x7f][0xffffffeb][0xffffffb4]?[0xc][0x18]~[0xffffffc9][0xffffffea][0xffffffc9]lQ.)[0xffffff86][0xffffffe1][\r][0xffffffff][0xffffffa7][0xfffffff5][0xffffffb2]d[0xffffff8d][0xffffffe5][0xffffffab]bZ[0xffffffa3][0xffffffa5]n[0xfffffff8][0x13][0xffffff85][0xffffffe1][0xfffffff7][0xffffffbc][0xffffffc2]o[0x1e][0x1e]T[0x11][0xffffffc2][0xfffffffd][0xffffffe4][0xffffffc1]o[0xffffffba][0xffffffbe][0xffffffd7][0xffffff9c][0xffffffef]T8[0xffffffde]{[0xffffff83]u[0xffffffcb][0xffffff8e][0xffffffdd]{-[0xfffffffb][0xffffff8d]oym[0xfffffff5][0xffffffad][0xffffffa3][0xfffffff3]c[0xffffffa3][0xfffffffa][0xffffff92][0xffffffc7][0xffffffa6]^[0xfffffff2][0xfffffff9][0xffffffb6][0xffffffa2][0xfffffffb]S[0xffffff88]}[0x19]2[0xffffffaa][0xfffffff0][[0xb][0xffffffd7][0xffffff85][0x8][0xffffffbf]FSv7"?[0xffffffa0][0x4]LCO[0xffffff8a]x[0x7f][0xffffffe2][0xffffffa1][0xffffffb2][0xffffffb2][0x19][0xffffff83][0xffffffa9][0xffffff86][0xffffffda][0xffffffd8][0xffffffe6]5[0xffffff8b][0xffffffa3][0xffffffd4]|[0xffffffb2]*'[0xffffff9b]!?[0xffffffd4][0xffffffab][0xfffffff5][0xffffffea]l[[0x5][0xfffffffb]'[0xffffffda][0xf][0x1e]{[0xffffffe0][0x9]+[0xffffff9e][0xffffffa6][0xffffffaf][0xffffff92][0xffffff98]G:[0xffffff90][0xffffffcd][0xfffffff2][0xffffffdc]L[0xffffffa4][0xffffffb4]B[0xffffffb6][0xffffff99][0xffffff87][0xffffffc6][0xfffffff0][0x11]^[0x1d]M[0xfffffff8][0xffffffa6][0xffffffa4][0xffffff9b][0xffffffcb][0xffffffbb][0xffffffed][0xfffffff0][0x14][0x9][0x6][0xfffffffc][0xffffffaa][0xffffff87][0xfffffff0][0xffffffdf][0xfffffff4][0xffffffca][0xffffffa8][0xfffffff1][0xffffff92][0xffffffaf][0xffffffd8][0xfffffff2],1[0xffffff89][0x1]/&[0xffffffa3][0xfffffffe]F[0xf]/-[0xffffff86][0xffffffcb]_[0xe]N[0xfffffff4][0xfffffff3][0xffffff85][0x9][0x15]Rq[0xffffff93][0xffffff86]3[0x1]XU[0xffffffe6]b[0xffffffe6][0xffffffd0][0xffffffc6][0xfffffff1]x[0xffffffa3][0xf][0xffffffaf][0xffffffdf][0xffffff87][0xffffff9f][0xf][0xfffffff0][0xffffffd3][0x8]S[0xffffffa0][0xffffff8d]'[0xffffff95]x[0xffffffa4][0xffffff9f]/[0xffffff89][0xfffffff2]P[0xffffff8e]1[0x11][0xf]C*[0xffffffe1]l[0x0][0xffffff83][0x4][0x1e]}[0xffffffb2]X[0x19][0xffffffc1][0xffffffd3][0xffffff9b]|[0xffffffe9][0xffffff96][0xffffffc7][0xfffffffb][0xffffffb2][0x1e][0xffffff8c][0xffffffb3]S[0xffffff85][0xfffffff4]\G.F[0x6][0xffffff8f]L>6Qfc[0xffffff9f][0xffffff8a][0x0]$[0xffffffe2][0x1]Eg~-[0xffffffb2][0xe][0xffffffdb][0xffffffbb]{[0xffffff96][0x10][0x12]?[0xffffffa8][0x1][0x7f][0xffffffcd]c[0xffffffc6][0x1f][0xffffff90][0xffffffaa][0x1b]4][0xffffff94][0xffffffd5][0xffffffde]N[0xffffffd4][0xffffff9e]{[0xffffffdc][0x1f]0[0xffffffc5]L][0xffffffa8][0xffffffb4][0xffffffef][0xffffffac][0xfffffffd]=J[0xffffffde][0xffffffbf][0x16][0xffffffb8][0xffffff83]1[0xffffffc4][0xffffffe1][0xfffffff7][0xffffffec]8[0x1c][0xffffffd8][0xffffffe7][0xfffffff0][0xffffffea]<[0x7f][0xffffff94][0xffffffb7]{[0xffffff9e][0xffffffaf][0xffffffca][0xffffff83][0xffffff9f]^[0xffffffd9]D[0x1a]h[0xffffff9f][0xffffff8c]N[0x7f][0xfffffffc][0xfffffffa][0xffffffd9]O[0xffffffe2][0xffffffc9][0xf][0xffffffdf][0x1e][0xffffffff][0xfffffff1][0xffffff96]#0[0xffffffef]6E[0xffffffd1][0xffffffab]y[0xffffff89]Lo0[0xffffffa3][0xffffffcf][0xffffffaf][0x7][0x3][0x14]~[0xffffffbf]kY[0xfffffff3][0xffffffa7][0xffffffda][0xffffffe0][0xffffff9e][0xffffff96]u([0xffffff9c]74Yo[0xc]u[0xffffffee][0xffffffc4]3[0xffffff9b][0xffffff9f][0xffffff99][0x11][0xffffffc3][0xffffffaf][0x16][0xffffffdd]S[0xf][0xffffff98][0xfffffff4]H[0xffffffe1][0xffffff82][0xffffffef][0x5][0xfffffff2][0x15]T[0xfffffffe]:[0xfffffff1][0xffffffff][0x3][0xc]N[0xffffff95][0xffffff81][0xffffffb9]X[0x0][0x0]"
2023-05-21 20:36:30,387 [main] DEBUG InternalHttpClient - ep-0000000002 releasing valid endpoint
2023-05-21 20:36:30,387 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 releasing endpoint
2023-05-21 20:36:30,387 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connection http-outgoing-1 can be kept alive for 3 MINUTES
2023-05-21 20:36:30,387 [main] DEBUG PoolingHttpClientConnectionManager - ep-0000000002 connection released [route: {}->http://103.160.144.199:8080][total available: 1; route allocated: 1 of 5; total allocated: 1 of 25]
2023-05-21 20:36:30,387 [main] DEBUG PoolingHttpClientConnectionManager - Shutdown connection pool GRACEFUL
2023-05-21 20:36:30,387 [main] DEBUG DefaultManagedHttpClientConnection - http-outgoing-1 close connection GRACEFUL
2023-05-21 20:36:30,387 [main] DEBUG PoolingHttpClientConnectionManager - Connection pool shut down
2023-05-21 20:36:30,418 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:30,418 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,432 [main] DEBUG hql - HQL : select count(*) from User x WHERE x.username = :username
2023-05-21 20:36:30,623 [main] DEBUG reservedWordAsIdentifier - Encountered use of reserved word as identifier : (
2023-05-21 20:36:30,670 [main] DEBUG SemanticQueryBuilder - Handling root path - User
2023-05-21 20:36:30,670 [main] DEBUG creation - Applying inferable type to SqmExpression [SqmNamedParameter(username)] : null -> BasicSqmPathSource(username : String)
2023-05-21 20:36:30,670 [main] DEBUG ast - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
          <- [root] - `io.github.nishadchayanakhawa.testcompanion.model.User(x)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `io.github.nishadchayanakhawa.testcompanion.model.User(x).username`
              :username
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2023-05-21 20:36:30,686 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:30,686 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(x))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:30,686 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : SqmNamedParameter(username)
2023-05-21 20:36:30,686 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(x).username) 
2023-05-21 20:36:30,686 [main] DEBUG AST - DomainResult Graph:
 \-BasicResult

2023-05-21 20:36:30,686 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(x)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:30,686 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,686 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,686 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,686 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4455f421
2023-05-21 20:36:30,686 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:36:30,686 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,750 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,750 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:30,750 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:30,750 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,750 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1215827265 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,750 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,750 [main] DEBUG AbstractSaveEventListener - Generated identifier: test, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:30,750 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,750 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:30,750 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:30,750 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:30,750 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:30,750 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:30,750 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$sujmX8YsemSwLiVEIAk9fOhaJptt4ZEP/6kSyb6h4LdPDnES7J4CG, role=USER, email=null, username=test}
2023-05-21 20:36:30,750 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:30,750 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:30,765 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:30,765 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:30,765 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d322dac
2023-05-21 20:36:30,765 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).username) 
2023-05-21 20:36:30,765 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).role]

2023-05-21 20:36:30,765 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:30,765 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,765 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,765 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))@690978591 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,765 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:36:30,765 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)): test
2023-05-21 20:36:30,765 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@3694fbf5
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$sujmX8YsemSwLiVEIAk9fOhaJptt4ZEP/6kSyb6h4LdPDnES7J4CG]
2023-05-21 20:36:30,765 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:36:30,765 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#test
2023-05-21 20:36:30,765 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6411bdbf
2023-05-21 20:36:30,796 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:30,796 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,796 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:30,796 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:30,812 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500).role]

2023-05-21 20:36:30,812 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:30,812 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,812 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,812 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500))@1289320953 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,812 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [0] - [admin]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)): admin
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#admin] : io.github.nishadchayanakhawa.testcompanion.model.User@474c5d3
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [1] - [admin@organization.com]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [2] - [Admin]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$R5UFKEMZytF7fImGK21F3uuLDncHZB8P6HxWOxFnaCi.JvY/VYCNe]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [5] - [0]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#admin
2023-05-21 20:36:30,812 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e56215
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [0] - [tester]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)): tester
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#tester] : io.github.nishadchayanakhawa.testcompanion.model.User@b31cbc4
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [1] - [tester@organization.com]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [2] - [Tester]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$CgwGfNvXbZMxfl40KPrVPOnrIgX6pd3PBR2Ean5dAKnra340J6zVa]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [5] - [1]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#tester
2023-05-21 20:36:30,812 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e56215
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [0] - [user]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)): user
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#user] : io.github.nishadchayanakhawa.testcompanion.model.User@1e2980c7
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [1] - [user.com]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [2] - [User]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [3] - [LNU]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$WOf4eQldkElmomP7J5WIU.Xnh.PX9MXaytGN93.st3LX3XDgVR3h.]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#user
2023-05-21 20:36:30,812 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e56215
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)): test
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@3cd1848c
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$sujmX8YsemSwLiVEIAk9fOhaJptt4ZEP/6kSyb6h4LdPDnES7J4CG]
2023-05-21 20:36:30,812 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:36:30,812 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45060873621500)#test
2023-05-21 20:36:30,812 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3e56215
2023-05-21 20:36:30,812 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,812 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:30,812 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,812 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:30,812 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,812 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@54901700 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,812 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,812 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,828 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:30,828 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,833 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,833 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,833 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,833 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4455f421
2023-05-21 20:36:30,833 [main] DEBUG results - Extracted JDBC value [0] - [0]
2023-05-21 20:36:30,833 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,875 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,875 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:30,891 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2023-05-21 20:36:30,891 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,891 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User)@1125824607 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,891 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,891 [main] DEBUG AbstractSaveEventListener - Generated identifier: test1, using strategy: org.hibernate.id.Assigned
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:30,891 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:30,891 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=null, lastName=null, password=$2a$10$pEntzrBK8c4A3veL0gi0xe3QrTzpEWIvHfC6/S46iDKHBxQNpAOAq, role=USER, email=null, username=test1}
2023-05-21 20:36:30,891 [main] DEBUG SQL - insert into users (email, first_name, last_name, password, role, username) values (?, ?, ?, ?, ?, ?)
2023-05-21 20:36:30,891 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,891 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,891 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,891 [main] DEBUG SQL - select count(*) from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,891 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4455f421
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [0] - [1]
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,891 [main] DEBUG create - Created new SQL alias : u1_0
2023-05-21 20:36:30,891 [main] DEBUG create - Registration of TableGroup [StandardTableGroup(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))] with identifierForTableGroup [io.github.nishadchayanakhawa.testcompanion.model.User] for NavigablePath [io.github.nishadchayanakhawa.testcompanion.model.User] 
2023-05-21 20:36:30,891 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25fb8736
2023-05-21 20:36:30,891 [main] DEBUG BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).username) 
2023-05-21 20:36:30,891 [main] DEBUG AST - DomainResult Graph:
 \-EntityResultImpl [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).email]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).firstName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).lastName]
 |  +-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).password]
 |  \-BasicFetch [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300).role]

2023-05-21 20:36:30,891 [main] DEBUG tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-05-21 20:36:30,891 [main] DEBUG exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-05-21 20:36:30,891 [main] DEBUG results - Initializer list
2023-05-21 20:36:30,891 [main] DEBUG results -     io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300) -> EntityResultInitializer(io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300))@2001263492 (SingleTableEntityPersister(io.github.nishadchayanakhawa.testcompanion.model.User))
2023-05-21 20:36:30,891 [main] DEBUG SQL - select u1_0.username,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password,u1_0.role from users u1_0 where u1_0.username=?
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [0] - [test]
2023-05-21 20:36:30,891 [main] DEBUG entity - (EntityResultInitializer) Hydrated EntityKey (io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)): test
2023-05-21 20:36:30,891 [main] DEBUG entity - (EntityResultInitializer) Created new entity instance [io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#test] : io.github.nishadchayanakhawa.testcompanion.model.User@52308e01
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [1] - [null]
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [2] - [null]
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [3] - [null]
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [4] - [$2a$10$sujmX8YsemSwLiVEIAk9fOhaJptt4ZEP/6kSyb6h4LdPDnES7J4CG]
2023-05-21 20:36:30,891 [main] DEBUG results - Extracted JDBC value [5] - [2]
2023-05-21 20:36:30,891 [main] DEBUG entity - (EntityResultInitializer) Done materializing entityInstance : io.github.nishadchayanakhawa.testcompanion.model.User(45057864340300)#test
2023-05-21 20:36:30,891 [main] DEBUG loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6395fb38
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - begin
2023-05-21 20:36:30,891 [main] DEBUG PersistenceUnitUtilImpl - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2023-05-21 20:36:30,891 [main] DEBUG TransactionImpl - committing
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Dirty checking collections
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2023-05-21 20:36:30,891 [main] DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-05-21 20:36:30,891 [main] DEBUG EntityPrinter - Listing entities:
2023-05-21 20:36:30,891 [main] DEBUG EntityPrinter - io.github.nishadchayanakhawa.testcompanion.model.User{firstName=Jane, lastName=null, password=$2a$10$sujmX8YsemSwLiVEIAk9fOhaJptt4ZEP/6kSyb6h4LdPDnES7J4CG, role=USER, email=null, username=test}
2023-05-21 20:36:30,891 [main] DEBUG SQL - update users set email=?, first_name=?, last_name=?, password=?, role=? where username=?
2023-05-21 20:36:30,906 [main] DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2023-05-21 20:36:31,115 [SpringApplicationShutdownHook] DEBUG SessionFactoryImpl - HHH000031: Closing
2023-05-21 20:36:31,115 [SpringApplicationShutdownHook] DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46de6057] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@671d7871]
2023-05-21 20:36:31,115 [SpringApplicationShutdownHook] DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-05-21 20:36:31,115 [SpringApplicationShutdownHook] DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-05-21 20:36:31,115 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [HikariPool-1 connection closer] DEBUG PoolBase - HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:0bd720d1-8873-4654-b9e4-68e1ea1a2ae8 user=ADMIN: (connection evicted)
2023-05-21 20:36:31,130 [SpringApplicationShutdownHook] DEBUG HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
